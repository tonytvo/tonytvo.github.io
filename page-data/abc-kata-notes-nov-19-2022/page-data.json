{"componentChunkName":"component---src-templates-blog-post-js","path":"/abc-kata-notes-nov-19-2022/","result":{"data":{"site":{"siteMetadata":{"title":"Conversations on agile technical practices and investments","disqus":{"shortName":"trungvo"}}},"markdownRemark":{"id":"f980a2dc-1dbb-53ce-9ff8-a7357596d454","excerpt":"Questions What have you learned? it’s good exercise to practice domain and functional together by implementing the procedure first, it can be fun to practice…","html":"<h1 id=\"questions\" style=\"position:relative;\"><a href=\"#questions\" aria-label=\"questions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Questions</h1>\n<ul>\n<li>\n<p>What have you learned?</p>\n<ul>\n<li>it’s good exercise to practice domain and functional together</li>\n<li>by implementing the procedure first, it can be fun to practice refactor to state pattern</li>\n<li>take this opportunity to review into domain/refactoring to patterns and Arlo commits -> <a href=\"https://jay.bazuzi.com/why-acn/\">https://jay.bazuzi.com/why-acn/</a></li>\n<li>push object and function calisthenics as much as I can\n<ul>\n<li><a href=\"https://blog.ninjaferret.co.uk/2015/06/05/Introducing-Functional-Calisthenics.html\">https://blog.ninjaferret.co.uk/2015/06/05/Introducing-Functional-Calisthenics.html</a></li>\n<li><a href=\"https://www.cs.helsinki.fi/u/luontola/tdd-2009/ext/ObjectCalisthenics.pdf\">https://www.cs.helsinki.fi/u/luontola/tdd-2009/ext/ObjectCalisthenics.pdf</a></li>\n</ul>\n</li>\n<li>fp-ts with state monoid is pretty crazy and pretty fun</li>\n<li><a href=\"https://github.com/tonytvo/abc-kata/pull/1\">https://github.com/tonytvo/abc-kata/pull/1</a></li>\n</ul>\n</li>\n<li>\n<p>Questions/thoughts</p>\n<ul>\n<li>review objects cathestic, functional cathestic and arlo commit notation.</li>\n<li>what’s arlo notion for adding only tests?</li>\n<li>F!! to add both tests and production code feels like big steps</li>\n<li>is there a better way to specify any in StateMonoid? feels like when both Output and State are the same … it seems like there some duplication</li>\n<li>too many R!!, is there better way make it smaller?</li>\n<li>what’re the languages that I want to use for most of my kata outside of java?\n<ul>\n<li>seems like typescript is a good one where I can leverage union types and functional libraries from the community</li>\n</ul>\n</li>\n<li>what is monoid?\n<ul>\n<li><em>“A monad is a construction that, given an underlying type system, embeds a corresponding type system into it. This monadic type system preserves all significant aspects of the underlying type system while adding features particular to the monad.”</em></li>\n<li>looks like some Ring/Identiy theory</li>\n<li>monoids are good for reducing function arguments\n<ul>\n<li>through currying</li>\n<li>or thinking of function parameters as pre-constructor applied</li>\n</ul>\n</li>\n<li><a href=\"https://marmelab.com/blog/2018/03/14/functional-programming-1-unit-of-code.html\">https://marmelab.com/blog/2018/03/14/functional-programming-1-unit-of-code.html</a></li>\n</ul>\n</li>\n<li>seems like array.includes/indexOf doesn’t do deep equal on object, hence find is used</li>\n<li>for some reasons, running tests from webstorm, skip certain tests even though, it not specified with skips</li>\n<li>trycatch to return error early, but it seems like it better idea to explicit state the error type then throw Error from the code</li>\n<li>it turns out that Blocks concept are helpful in keeping the rules and code in sync</li>\n<li>as long as there one letter that can’t be built/match with anyblock, return error instead of throw new error</li>\n<li>state monoid seems to be keep repeating as a way to keep tracking of changing mutable state.</li>\n<li>getting confuse between the finalState and Output of StateMonoid interface</li>\n<li><a href=\"https://dev.to/derp/state-monad-in-fp-ts-5c79\">https://dev.to/derp/state-monad-in-fp-ts-5c79</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"references\" style=\"position:relative;\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References</h1>\n<ul>\n<li><a href=\"https://blog.ninjaferret.co.uk/2015/06/05/Introducing-Functional-Calisthenics.html\">https://blog.ninjaferret.co.uk/2015/06/05/Introducing-Functional-Calisthenics.html</a></li>\n<li><a href=\"https://www.cs.helsinki.fi/u/luontola/tdd-2009/ext/ObjectCalisthenics.pdf\">https://www.cs.helsinki.fi/u/luontola/tdd-2009/ext/ObjectCalisthenics.pdf</a></li>\n<li><a href=\"https://jay.bazuzi.com/why-acn/\">https://jay.bazuzi.com/why-acn/</a></li>\n</ul>","frontmatter":{"title":"Notes on ABC Kata Nov 19h 2022","date":"November 19, 2022","description":"Notes on ABC Kata Nov 19h 2022"}},"previous":{"fields":{"slug":"/marsrover-kata-notes-nov-13-2022/"},"frontmatter":{"title":"Notes on Mars Rover Kata Nov 13h 2022"}},"next":{"fields":{"slug":"/poor-charlie-almanack/"},"frontmatter":{"title":"poor charlie almanack by Charlie Munger summary"}}},"pageContext":{"id":"f980a2dc-1dbb-53ce-9ff8-a7357596d454","previousPostId":"f9a650d8-b985-5635-bc59-b96896e696f5","nextPostId":"2c16f7a0-cbee-5136-ba32-15494ed95659"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}