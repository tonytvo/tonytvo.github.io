{"componentChunkName":"component---src-templates-blog-post-js","path":"/software-telemetry/","result":{"data":{"site":{"siteMetadata":{"title":"Conversations on agile technical practices and investments","disqus":{"shortName":"trungvo"}}},"markdownRemark":{"id":"9e25c639-a265-5d66-a174-1bd30b5708a4","excerpt":"Excellent — let’s expand Part 1 – Telemetry System Architecture (Chapter 1: Introduction) from Software Telemetry by Jamie Riedesel in rich, detailed form with…","html":"<p>Excellent — let’s expand <strong>Part 1 – Telemetry System Architecture (Chapter 1: Introduction)</strong> from <em>Software Telemetry</em> by <strong>Jamie Riedesel</strong> in rich, detailed form with <strong>bolded key phrases</strong>, contextual explanations, and practical insights, as you requested.</p>\n<hr>\n<h1 id=\"-telemetry-system-architecture\" style=\"position:relative;\"><a href=\"#-telemetry-system-architecture\" aria-label=\" telemetry system architecture permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧱 <strong>Telemetry System Architecture</strong></h1>\n<h2 id=\"-focus\" style=\"position:relative;\"><a href=\"#-focus\" aria-label=\" focus permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 <strong>Focus:</strong></h2>\n<p>This part of the book establishes the <strong>conceptual foundation</strong> of all telemetry systems — explaining how <strong>telemetry underpins decision-making</strong> in software systems by converting raw operational data into <strong>actionable insight</strong>.</p>\n<p>Riedesel emphasizes that <strong>telemetry is not just monitoring</strong>:</p>\n<blockquote>\n<p><strong>“Telemetry is the art and science of collecting, transporting, and interpreting operational data so humans and machines can make better decisions.”</strong></p>\n</blockquote>\n<p>It spans everything from <strong>low-level system metrics</strong> (CPU, memory, disk I/O) to <strong>business outcomes</strong> (user conversion rates, revenue per second), forming the <strong>nervous system</strong> of modern software.</p>\n<hr>\n<h2 id=\"-introduction\" style=\"position:relative;\"><a href=\"#-introduction\" aria-label=\" introduction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📘 <strong>Introduction</strong></h2>\n<h3 id=\"-1-what-is-telemetry\" style=\"position:relative;\"><a href=\"#-1-what-is-telemetry\" aria-label=\" 1 what is telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 1. What Is Telemetry?</h3>\n<ul>\n<li><strong>Telemetry</strong> originates from aerospace and industrial systems, meaning <strong>“measurement at a distance.”</strong></li>\n<li>In software, it refers to <strong>automated, continuous collection of operational data</strong> about code, infrastructure, and user interactions.</li>\n<li>The goal: enable teams to <strong>observe, diagnose, and improve systems</strong> without manual intervention or guesswork.</li>\n</ul>\n<p>Riedesel writes:</p>\n<blockquote>\n<p><strong>“Every decision your organization makes about software operations is either supported or hindered by the quality of your telemetry.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"️-2-the-four-styles-of-telemetry\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-2-the-four-styles-of-telemetry\" aria-label=\"️ 2 the four styles of telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚙️ 2. The Four Styles of Telemetry</h3>\n<p>Riedesel identifies <strong>four major styles</strong>, each addressing a distinct layer of system observability:</p>\n<ol>\n<li>\n<h4 id=\"centralized-logging\" style=\"position:relative;\"><a href=\"#centralized-logging\" aria-label=\"centralized logging permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Centralized Logging</strong></h4>\n<ul>\n<li>\n<p>The most familiar form — <strong>aggregating logs from many systems</strong> into a central store (e.g., Elasticsearch, Splunk, CloudWatch Logs).</p>\n</li>\n<li>\n<p>Provides <strong>contextual event history</strong>, essential for debugging and auditing.</p>\n</li>\n<li>\n<p>Best suited for <strong>qualitative analysis</strong> — “What happened?” or “Why did this fail?”</p>\n</li>\n<li>\n<p>Key challenge: <strong>log volume explosion</strong> and <strong>unstructured formats</strong> leading to storage and parsing overhead.</p>\n</li>\n</ul>\n<blockquote>\n<p><strong>“Logs tell stories — but if everyone writes in a different language, your telemetry system becomes a Tower of Babel.”</strong></p>\n</blockquote>\n</li>\n<li>\n<h4 id=\"metrics\" style=\"position:relative;\"><a href=\"#metrics\" aria-label=\"metrics permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Metrics</strong></h4>\n<ul>\n<li>\n<p>Numeric, time-series data about system performance: <strong>request latency, error rates, CPU usage, queue lengths, etc.</strong></p>\n</li>\n<li>\n<p>Enables <strong>quantitative analysis</strong> — “How fast?”, “How much?”, “How often?”</p>\n</li>\n<li>\n<p>Supports <strong>alerting</strong> and <strong>capacity planning</strong>, and feeds into tools like <strong>Prometheus</strong>, <strong>Datadog</strong>, or <strong>InfluxDB</strong>.</p>\n</li>\n<li>\n<p>The emphasis is on <strong>low cardinality and statistical clarity</strong>, since metrics are designed for aggregation and trend detection.</p>\n</li>\n<li>\n<p>Riedesel:</p>\n<blockquote>\n<p><strong>“Metrics show health at a glance — they’re your system’s vital signs.”</strong></p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>\n<h4 id=\"distributed-tracing\" style=\"position:relative;\"><a href=\"#distributed-tracing\" aria-label=\"distributed tracing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Distributed Tracing</strong></h4>\n<ul>\n<li>\n<p>Focused on <strong>understanding request flow across services</strong>, particularly in microservice architectures.</p>\n</li>\n<li>\n<p>A trace represents the <strong>end-to-end journey of a single transaction</strong>, often through dozens of services.</p>\n</li>\n<li>\n<p>Provides <strong>causal context</strong> and exposes latency bottlenecks or dependency failures.</p>\n</li>\n<li>\n<p>Common tools: <strong>Jaeger</strong>, <strong>Zipkin</strong>, <strong>Honeycomb</strong>, <strong>OpenTelemetry Tracing</strong>.</p>\n</li>\n<li>\n<p>Key insight:</p>\n<blockquote>\n<p><strong>“Traces are the connective tissue that link logs and metrics into a coherent picture of user experience.”</strong></p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>\n<h4 id=\"siem-security-information-and-event-management\" style=\"position:relative;\"><a href=\"#siem-security-information-and-event-management\" aria-label=\"siem security information and event management permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>SIEM (Security Information and Event Management)</strong></h4>\n<ul>\n<li>\n<p>Originally from the <strong>security operations world</strong>, but increasingly integrated into software observability.</p>\n</li>\n<li>\n<p>Collects, correlates, and analyzes security events — logins, privilege escalations, file access, API misuse, etc.</p>\n</li>\n<li>\n<p>Used to <strong>detect intrusions</strong>, <strong>comply with audits</strong>, and <strong>respond to incidents</strong>.</p>\n</li>\n<li>\n<p>The author highlights that SIEM often operates <strong>parallel</strong> to engineering telemetry, but ideally should <strong>share the same data sources</strong>.</p>\n</li>\n<li>\n<p>Key warning:</p>\n<blockquote>\n<p><strong>“When security and operations collect telemetry separately, you pay twice and see half.”</strong></p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"-3-who-uses-telemetry--and-why\" style=\"position:relative;\"><a href=\"#-3-who-uses-telemetry--and-why\" aria-label=\" 3 who uses telemetry  and why permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👥 3. Who Uses Telemetry — and Why</h3>\n<p>Riedesel underscores that <strong>telemetry systems serve multiple stakeholders</strong> beyond developers:</p>\n<table>\n<thead>\n<tr>\n<th>Stakeholder</th>\n<th>Purpose</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>DevOps &#x26; SRE Teams</strong></td>\n<td>To maintain <strong>reliability, uptime, and incident response</strong>. They need <strong>real-time metrics, alerts, and traces</strong> to identify and remediate outages quickly.</td>\n</tr>\n<tr>\n<td><strong>Security &#x26; Compliance</strong></td>\n<td>To monitor for <strong>suspicious activity, audit trails, and regulatory evidence</strong>. Telemetry must support <strong>immutability, access control, and data lineage.</strong></td>\n</tr>\n<tr>\n<td><strong>Customer Support</strong></td>\n<td>Uses telemetry to <strong>reproduce customer issues</strong>, validate bug reports, and monitor <strong>service-level agreements (SLAs)</strong>.</td>\n</tr>\n<tr>\n<td><strong>Business Intelligence (BI)</strong></td>\n<td>Leverages telemetry to <strong>correlate system behavior with business outcomes</strong>, such as user engagement or transaction volume.</td>\n</tr>\n</tbody>\n</table>\n<p>The book’s central idea:</p>\n<blockquote>\n<p><strong>“A well-designed telemetry system speaks all these dialects fluently.”</strong></p>\n</blockquote>\n<p>This means the same underlying pipeline can feed <strong>Grafana dashboards</strong>, <strong>security alerts</strong>, and <strong>business KPIs</strong> — if structured correctly.</p>\n<hr>\n<h3 id=\"️-4-common-challenges\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-4-common-challenges\" aria-label=\"️ 4 common challenges permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚠️ 4. Common Challenges</h3>\n<p>The introduction closes by confronting <strong>why telemetry often fails in real-world organizations</strong>, even though it’s so essential.</p>\n<ol>\n<li>\n<p><strong>Underinvestment and Neglect</strong></p>\n<ul>\n<li>\n<p>Telemetry is <strong>“invisible until it breaks”</strong>, leading to chronic underfunding.</p>\n</li>\n<li>\n<p>Riedesel warns:</p>\n<blockquote>\n<p><strong>“Organizations treat telemetry as plumbing, not infrastructure — until the leak floods the house.”</strong></p>\n</blockquote>\n</li>\n<li>\n<p>Result: reactive firefighting, missing context during incidents, poor data quality.</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Lack of Standardization</strong></p>\n<ul>\n<li>Inconsistent event formats, naming conventions, or timestamp handling cause fragmentation.</li>\n<li>Teams build parallel telemetry stacks that <strong>cannot interoperate</strong>, increasing cost and cognitive load.</li>\n<li>Remedy: adopt <strong>common schemas</strong> and <strong>shared context identifiers</strong> (like correlation IDs or trace IDs).</li>\n</ul>\n</li>\n<li>\n<p><strong>Data Leaks and Toxic Telemetry</strong></p>\n<ul>\n<li>\n<p>Many systems inadvertently log <strong>sensitive data</strong> (PII, credentials, financial information).</p>\n</li>\n<li>\n<p>This creates <strong>security, privacy, and compliance liabilities</strong>.</p>\n</li>\n<li>\n<p>Later chapters discuss <strong>redaction pipelines</strong> and <strong>telemetry classification frameworks</strong>.</p>\n</li>\n<li>\n<p>Quote:</p>\n<blockquote>\n<p><strong>“Telemetry can betray you if it captures what it shouldn’t — and keeps it longer than it should.”</strong></p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Legal and Regulatory Disruptions</strong></p>\n<ul>\n<li>With GDPR, CCPA, and similar laws, telemetry systems are now subject to <strong>the same scrutiny as customer databases</strong>.</li>\n<li>Retention policies, data residency, and right-to-erasure requests directly affect design choices.</li>\n<li>Example: an innocuous log containing IP addresses can be considered <strong>personal data</strong> under GDPR.</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"-5-chapter-summary--core-mindset\" style=\"position:relative;\"><a href=\"#-5-chapter-summary--core-mindset\" aria-label=\" 5 chapter summary  core mindset permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧠 5. Chapter Summary — Core Mindset</h3>\n<p>The introduction sets the mental model for the rest of the book:</p>\n<ul>\n<li>Think of telemetry as a <strong>living ecosystem</strong>, not a static product.</li>\n<li>Design pipelines that are <strong>observable, auditable, and evolvable</strong>.</li>\n<li>Treat telemetry as a <strong>first-class citizen</strong> of your system’s architecture — on par with APIs, databases, and CI/CD pipelines.</li>\n</ul>\n<blockquote>\n<p><strong>“Telemetry is both mirror and microscope — it reflects what your system does and reveals what you didn’t know.”</strong></p>\n</blockquote>\n<hr>\n<h2 id=\"️-emitting-stage-creating-and-submitting-telemetry\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-emitting-stage-creating-and-submitting-telemetry\" aria-label=\"️ emitting stage creating and submitting telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚙️ <strong>Emitting Stage: Creating and Submitting Telemetry</strong></h2>\n<h3 id=\"-purpose-of-the-emitting-stage\" style=\"position:relative;\"><a href=\"#-purpose-of-the-emitting-stage\" aria-label=\" purpose of the emitting stage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 <strong>Purpose of the Emitting Stage</strong></h3>\n<p>Riedesel opens this chapter by defining <strong>“emission”</strong> as the <strong>birthplace of all telemetry data</strong> — the point where <strong>systems, code, or services</strong> first produce raw information about what’s happening.</p>\n<blockquote>\n<p><strong>“Emission is where the data begins its life. If this stage is noisy, inconsistent, or incomplete, everything downstream inherits that flaw.”</strong></p>\n</blockquote>\n<p>This is the <strong>foundation layer</strong> of the entire telemetry pipeline. Every log line, metric point, or event captured later originates from <strong>emitters</strong> — whether that’s a web server, a sensor, a cloud service, or an API gateway.</p>\n<p>Riedesel emphasizes that:</p>\n<blockquote>\n<p><strong>“A telemetry system is only as trustworthy as its emitters.”</strong></p>\n</blockquote>\n<p>Even the best visualization and analysis tools cannot fix <strong>badly structured, uncorrelated, or incomplete emissions</strong>.</p>\n<hr>\n<h3 id=\"-1-major-sources-of-telemetry\" style=\"position:relative;\"><a href=\"#-1-major-sources-of-telemetry\" aria-label=\" 1 major sources of telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 <strong>1. Major Sources of Telemetry</strong></h3>\n<p>The author divides telemetry sources into <strong>three main families</strong>, each with its own emission model, reliability concerns, and legal considerations.</p>\n<h4 id=\"a-production-code\" style=\"position:relative;\"><a href=\"#a-production-code\" aria-label=\"a production code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(a) <strong>Production Code</strong></h4>\n<ul>\n<li>\n<p>The most <strong>common and controllable source</strong> of telemetry.</p>\n</li>\n<li>\n<p>Developers insert <strong>logging, tracing, and metrics instrumentation</strong> directly into application code.</p>\n</li>\n<li>\n<p>Examples:</p>\n<ul>\n<li><code class=\"language-text\">logger.info(\"User login successful\", user_id=...)</code></li>\n<li><code class=\"language-text\">statsd.increment(\"checkout.completed\")</code></li>\n<li><code class=\"language-text\">trace.start_span(\"database.query\")</code></li>\n</ul>\n</li>\n<li>\n<p>Purpose: capture <strong>application-level insights</strong> (business events, user actions, error conditions).</p>\n</li>\n<li>\n<p>Emphasis: use <strong>structured, semantic logs</strong> instead of ad-hoc text.</p>\n</li>\n</ul>\n<p>Riedesel’s warning:</p>\n<blockquote>\n<p><strong>“If your logs require grep, you’ve already lost half the battle.”</strong></p>\n</blockquote>\n<p>Structured emission (e.g., JSON logs) allows automation, parsing, and analytics — while unstructured logs create brittle regex filters later in the pipeline.</p>\n<h4 id=\"b-hardware-devices\" style=\"position:relative;\"><a href=\"#b-hardware-devices\" aria-label=\"b hardware devices permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(b) <strong>Hardware Devices</strong></h4>\n<ul>\n<li>\n<p>Network devices, routers, switches, and IoT sensors emit telemetry via <strong>standardized protocols</strong>.</p>\n</li>\n<li>\n<p>The most common example: <strong>SNMP (Simple Network Management Protocol)</strong>.</p>\n<ul>\n<li>Used by <strong>Cisco, Juniper, HP</strong>, and most network vendors.</li>\n<li>Emits status information like port errors, bandwidth usage, temperature, and voltage.</li>\n</ul>\n</li>\n<li>\n<p>Hardware telemetry is often <strong>event-driven</strong> or <strong>poll-based</strong> — meaning the monitoring system queries for data at intervals.</p>\n</li>\n<li>\n<p>Problems arise when <strong>SNMP traps</strong> flood systems during outages — “the storm of events when things fail.”</p>\n</li>\n</ul>\n<p>Quote:</p>\n<blockquote>\n<p><strong>“Hardware telemetry speaks the oldest dialect — terse, numeric, and cryptic — but it still tells critical truths about the health of the foundation.”</strong></p>\n</blockquote>\n<h4 id=\"c-saas-and-iaas-systems\" style=\"position:relative;\"><a href=\"#c-saas-and-iaas-systems\" aria-label=\"c saas and iaas systems permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(c) <strong>SaaS and IaaS Systems</strong></h4>\n<ul>\n<li>\n<p>In the cloud era, much telemetry originates from <strong>external services</strong> you don’t fully control.</p>\n</li>\n<li>\n<p>Examples:</p>\n<ul>\n<li>AWS CloudWatch events</li>\n<li>GCP Stackdriver logs</li>\n<li>Azure Monitor metrics</li>\n<li>Stripe, Twilio, or GitHub webhook events</li>\n</ul>\n</li>\n<li>\n<p>These systems often emit telemetry via <strong>HTTP event streams, JSON APIs, or audit logs</strong>.</p>\n</li>\n<li>\n<p>Integration challenge: <strong>normalize foreign schemas</strong> and <strong>timestamps</strong> to fit your unified telemetry model.</p>\n</li>\n</ul>\n<p>Riedesel notes:</p>\n<blockquote>\n<p><strong>“Your telemetry doesn’t stop at your servers anymore. Every SaaS product your business depends on is now part of your observability surface.”</strong></p>\n</blockquote>\n<p>This means telemetry design must consider <strong>external integrations, rate limits, and API schema drift</strong>.</p>\n<hr>\n<h3 id=\"-2-methods-of-emission\" style=\"position:relative;\"><a href=\"#-2-methods-of-emission\" aria-label=\" 2 methods of emission permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔄 <strong>2. Methods of Emission</strong></h3>\n<p>After identifying sources, Riedesel describes <strong>common emission methods</strong>, mapping each to real-world use cases.</p>\n<h4 id=\"1-log-files\" style=\"position:relative;\"><a href=\"#1-log-files\" aria-label=\"1 log files permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(1) Log Files</strong></h4>\n<ul>\n<li>\n<p>Traditional method: applications write events to files on disk (<code class=\"language-text\">/var/log/...</code>).</p>\n</li>\n<li>\n<p>Advantages: easy to implement, human-readable, durable.</p>\n</li>\n<li>\n<p>Disadvantages: difficult for <strong>containerized or ephemeral systems</strong>, since log files vanish when the container dies.</p>\n</li>\n<li>\n<p>Modern guidance:</p>\n<blockquote>\n<p><strong>“Logs should go to streams, not disks — because disks are pets, streams are cattle.”</strong></p>\n</blockquote>\n</li>\n</ul>\n<p>Hence, newer architectures redirect logs to <strong>stdout/stderr</strong>, enabling collection by sidecar agents (Fluentd, Logstash, etc.).</p>\n<h4 id=\"2-system-logs\" style=\"position:relative;\"><a href=\"#2-system-logs\" aria-label=\"2 system logs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(2) System Logs</strong></h4>\n<ul>\n<li>OS-level telemetry like <strong>syslog</strong>, <strong>journalctl</strong>, or <strong>event logs</strong>.</li>\n<li>These often capture <strong>kernel, network, authentication, and daemon messages</strong>.</li>\n<li>They provide context that application logs alone can’t (e.g., hardware errors, restarts).</li>\n<li>The book encourages integrating these with application telemetry for <strong>complete incident timelines</strong>.</li>\n</ul>\n<blockquote>\n<p><strong>“System logs are your black box recorder — they capture what your app didn’t notice.”</strong></p>\n</blockquote>\n<h4 id=\"3-standard-output-streams\" style=\"position:relative;\"><a href=\"#3-standard-output-streams\" aria-label=\"3 standard output streams permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(3) Standard Output Streams</strong></h4>\n<ul>\n<li>Common in <strong>cloud-native</strong> environments such as Kubernetes or AWS Lambda.</li>\n<li>Instead of writing to disk, applications write logs to <strong>stdout</strong>.</li>\n<li>Log collectors (sidecars, daemons, or host agents) then stream this output to central systems.</li>\n<li>This avoids file permission issues, supports auto-scaling, and simplifies container lifecycle management.</li>\n<li>Example: Docker captures stdout and sends it to the logging driver (Fluentd, Loki, etc.).</li>\n</ul>\n<p>Riedesel emphasizes:</p>\n<blockquote>\n<p><strong>“Emitters in a stateless world must speak over ephemeral channels.”</strong></p>\n</blockquote>\n<h4 id=\"4-snmp-and-device-telemetry\" style=\"position:relative;\"><a href=\"#4-snmp-and-device-telemetry\" aria-label=\"4 snmp and device telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(4) SNMP and Device Telemetry</strong></h4>\n<ul>\n<li>As mentioned, SNMP traps and polls remain the backbone for physical device telemetry.</li>\n<li>SNMPv3 introduced encryption and authentication, addressing prior risks of <strong>plain-text community strings</strong>.</li>\n<li>Still, hardware telemetry must be <strong>rate-limited</strong> and <strong>filtered</strong>, since storms of events can overwhelm ingest pipelines.</li>\n</ul>\n<h4 id=\"5-saas-and-iaas-event-streams\" style=\"position:relative;\"><a href=\"#5-saas-and-iaas-event-streams\" aria-label=\"5 saas and iaas event streams permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(5) SaaS and IaaS Event Streams</strong></h4>\n<ul>\n<li>\n<p>Modern SaaS platforms expose <strong>event hooks</strong>, <strong>audit APIs</strong>, or <strong>change streams</strong>.</p>\n</li>\n<li>\n<p>Examples:</p>\n<ul>\n<li><strong>AWS CloudTrail</strong> → records API activity.</li>\n<li><strong>GitHub Audit Log</strong> → developer behavior telemetry.</li>\n<li><strong>Okta or GSuite logs</strong> → identity and access telemetry.</li>\n</ul>\n</li>\n<li>\n<p>Integration pattern:</p>\n<ul>\n<li>Use <strong>webhooks</strong> or <strong>scheduled API polling</strong>.</li>\n<li>Ingest via an <strong>event collector microservice</strong> or message queue.</li>\n<li>Apply <strong>schema normalization</strong> before storage.</li>\n</ul>\n</li>\n</ul>\n<p>Riedesel highlights:</p>\n<blockquote>\n<p><strong>“Every vendor speaks a different dialect of JSON — your telemetry platform must be multilingual.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-3-key-concept-markup-and-formatting\" style=\"position:relative;\"><a href=\"#-3-key-concept-markup-and-formatting\" aria-label=\" 3 key concept markup and formatting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧠 <strong>3. Key Concept: “Markup” and “Formatting”</strong></h3>\n<p>This section is one of the chapter’s most critical and nuanced discussions. Riedesel introduces <strong>markup</strong> and <strong>formatting</strong> as the <strong>hidden architecture</strong> of successful telemetry emission.</p>\n<blockquote>\n<p><strong>“How you format your telemetry determines how expensive it will be to process, store, and understand — forever.”</strong></p>\n</blockquote>\n<h4 id=\"a-markup--structural-context\" style=\"position:relative;\"><a href=\"#a-markup--structural-context\" aria-label=\"a markup  structural context permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) Markup = Structural Context</strong></h4>\n<ul>\n<li>\n<p>Markup refers to <strong>embedding structure or metadata</strong> into telemetry events.</p>\n</li>\n<li>\n<p>Examples:</p>\n<ul>\n<li>Adding fields like <code class=\"language-text\">service_name</code>, <code class=\"language-text\">environment</code>, <code class=\"language-text\">region</code>, <code class=\"language-text\">trace_id</code>, <code class=\"language-text\">severity</code>, <code class=\"language-text\">user_id</code>.</li>\n<li>Encoding events in <strong>JSON</strong>, <strong>Protocol Buffers</strong>, or <strong>structured key-value pairs</strong>.</li>\n</ul>\n</li>\n<li>\n<p>Purpose:</p>\n<ul>\n<li>Enables <strong>machine parsing</strong>.</li>\n<li>Preserves <strong>contextual meaning</strong> (who, what, where, when).</li>\n<li>Allows correlation across systems (e.g., linking user activity to backend traces).</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p><strong>“Good markup is like a passport — it lets your telemetry cross system borders without losing its identity.”</strong></p>\n</blockquote>\n<h4 id=\"b-formatting--syntax-consistency\" style=\"position:relative;\"><a href=\"#b-formatting--syntax-consistency\" aria-label=\"b formatting  syntax consistency permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Formatting = Syntax Consistency</strong></h4>\n<ul>\n<li>\n<p>Formatting defines <strong>how</strong> the structured data is represented — e.g., JSON vs. plain text vs. key-value pairs.</p>\n</li>\n<li>\n<p>Consistent formatting allows:</p>\n<ul>\n<li>Simplified ingestion pipelines.</li>\n<li>Easier versioning and backward compatibility.</li>\n<li>Predictable storage and indexing.</li>\n</ul>\n</li>\n<li>\n<p>The book recommends <strong>human-readable structured formats</strong> (JSON, YAML) over binary formats, unless efficiency is critical.</p>\n</li>\n<li>\n<p>Quote:</p>\n<blockquote>\n<p><strong>“Human-readable formats cost storage; binary formats cost debugging.”</strong></p>\n</blockquote>\n</li>\n</ul>\n<h4 id=\"c-avoiding-anti-patterns\" style=\"position:relative;\"><a href=\"#c-avoiding-anti-patterns\" aria-label=\"c avoiding anti patterns permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(c) Avoiding Anti-Patterns</strong></h4>\n<ul>\n<li>\n<p>Common mistakes at the emission stage:</p>\n<ol>\n<li><strong>Over-logging</strong> – flooding telemetry with redundant or verbose data.</li>\n<li><strong>Inconsistent keys</strong> – e.g., using <code class=\"language-text\">userId</code>, <code class=\"language-text\">userid</code>, <code class=\"language-text\">User_ID</code> across services.</li>\n<li><strong>Hidden context</strong> – burying critical identifiers inside message text instead of structured fields.</li>\n<li><strong>Unescaped data</strong> – leaking raw input that breaks JSON or XML parsers.</li>\n<li><strong>Time drift</strong> – relying on system clocks without synchronization.</li>\n</ol>\n</li>\n</ul>\n<p>Riedesel cautions:</p>\n<blockquote>\n<p><strong>“You can’t fix bad markup downstream. You can only regret it.”</strong></p>\n</blockquote>\n<p>Hence, emission is where <strong>discipline and schema governance</strong> begin.</p>\n<hr>\n<h3 id=\"-4-reliability-and-security-at-the-emission-point\" style=\"position:relative;\"><a href=\"#-4-reliability-and-security-at-the-emission-point\" aria-label=\" 4 reliability and security at the emission point permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔐 <strong>4. Reliability and Security at the Emission Point</strong></h3>\n<p>Telemetry can be <strong>compromised or lost</strong> even before it leaves the emitter.</p>\n<ul>\n<li>\n<p><strong>Buffering and Backpressure</strong>\nEmitters must handle temporary network failures gracefully — through <strong>local queues or ring buffers</strong>.</p>\n<blockquote>\n<p><strong>“If emitters block on telemetry, you’re monitoring less to protect uptime — that’s a false economy.”</strong></p>\n</blockquote>\n</li>\n<li>\n<p><strong>Security and Least Privilege</strong>\nEmitters should <strong>authenticate with telemetry collectors</strong> using API keys, service accounts, or signed payloads.</p>\n<blockquote>\n<p><strong>“Telemetry should not become an attack vector; every log line is a potential leak.”</strong></p>\n</blockquote>\n</li>\n<li>\n<p><strong>Data Minimization</strong>\nAvoid logging secrets, tokens, or sensitive identifiers.\nAdopt a <strong>telemetry classification policy</strong> (public, internal, confidential).</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"-summary--emission-as-architecture\" style=\"position:relative;\"><a href=\"#-summary--emission-as-architecture\" aria-label=\" summary  emission as architecture permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 <strong>Summary — Emission as Architecture</strong></h3>\n<p>Riedesel closes with a powerful framing:</p>\n<blockquote>\n<p><strong>“The emitting stage is where you decide what your organization will ever know about its systems.”</strong></p>\n</blockquote>\n<p>That decision includes:</p>\n<ul>\n<li><strong>Which events exist or vanish forever</strong></li>\n<li><strong>How those events will be interpreted downstream</strong></li>\n<li><strong>How costly it will be to scale or audit later</strong></li>\n</ul>\n<p>She concludes:</p>\n<blockquote>\n<p><strong>“Telemetry begins at the point of emission — and that’s where reliability, legality, and observability are either born or lost.”</strong></p>\n</blockquote>\n<hr>\n<p>✅ <strong>Summary Checklist: Emitting Best Practices</strong></p>\n<table>\n<thead>\n<tr>\n<th>Principle</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Structured Emission</strong></td>\n<td>Use JSON or key-value logs instead of plain text.</td>\n</tr>\n<tr>\n<td><strong>Consistent Markup</strong></td>\n<td>Include standard fields (timestamp, service, trace_id, severity).</td>\n</tr>\n<tr>\n<td><strong>Stateless Output</strong></td>\n<td>Write to stdout for containerized environments.</td>\n</tr>\n<tr>\n<td><strong>Rate Limiting</strong></td>\n<td>Prevent emission storms (e.g., retry floods, SNMP traps).</td>\n</tr>\n<tr>\n<td><strong>Secure Transmission</strong></td>\n<td>Encrypt data, sign payloads, avoid sensitive content.</td>\n</tr>\n<tr>\n<td><strong>Error Tolerance</strong></td>\n<td>Queue locally when network or collector unavailable.</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h1 id=\"quotes\" style=\"position:relative;\"><a href=\"#quotes\" aria-label=\"quotes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Quotes</h1>\n<h1 id=\"references\" style=\"position:relative;\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References</h1>","frontmatter":{"title":"Software Telemetry by Jamie Riedesel summary","date":"October 10, 2025","description":"Software Telemetry by Jamie Riedesel summary"}},"previous":{"fields":{"slug":"/alberta-communities-research/"},"frontmatter":{"title":"alberta communities research"}},"next":null},"pageContext":{"id":"9e25c639-a265-5d66-a174-1bd30b5708a4","previousPostId":"4905164d-d2e5-5564-8ca5-354c50df695f","nextPostId":null}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}