{"componentChunkName":"component---src-templates-blog-post-js","path":"/software-telemetry/","result":{"data":{"site":{"siteMetadata":{"title":"Conversations on agile technical practices and investments","disqus":{"shortName":"trungvo"}}},"markdownRemark":{"id":"9e25c639-a265-5d66-a174-1bd30b5708a4","excerpt":"Excellent — let’s expand Part 1 – Telemetry System Architecture (Chapter 1: Introduction) from Software Telemetry by Jamie Riedesel in rich, detailed form with…","html":"<p>Excellent — let’s expand <strong>Part 1 – Telemetry System Architecture (Chapter 1: Introduction)</strong> from <em>Software Telemetry</em> by <strong>Jamie Riedesel</strong> in rich, detailed form with <strong>bolded key phrases</strong>, contextual explanations, and practical insights, as you requested.</p>\n<hr>\n<h1 id=\"-telemetry-system-architecture\" style=\"position:relative;\"><a href=\"#-telemetry-system-architecture\" aria-label=\" telemetry system architecture permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧱 <strong>Telemetry System Architecture</strong></h1>\n<h2 id=\"-focus\" style=\"position:relative;\"><a href=\"#-focus\" aria-label=\" focus permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 <strong>Focus:</strong></h2>\n<p>This part of the book establishes the <strong>conceptual foundation</strong> of all telemetry systems — explaining how <strong>telemetry underpins decision-making</strong> in software systems by converting raw operational data into <strong>actionable insight</strong>.</p>\n<p>Riedesel emphasizes that <strong>telemetry is not just monitoring</strong>:</p>\n<blockquote>\n<p><strong>“Telemetry is the art and science of collecting, transporting, and interpreting operational data so humans and machines can make better decisions.”</strong></p>\n</blockquote>\n<p>It spans everything from <strong>low-level system metrics</strong> (CPU, memory, disk I/O) to <strong>business outcomes</strong> (user conversion rates, revenue per second), forming the <strong>nervous system</strong> of modern software.</p>\n<hr>\n<h2 id=\"-introduction\" style=\"position:relative;\"><a href=\"#-introduction\" aria-label=\" introduction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📘 <strong>Introduction</strong></h2>\n<h3 id=\"-1-what-is-telemetry\" style=\"position:relative;\"><a href=\"#-1-what-is-telemetry\" aria-label=\" 1 what is telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 1. What Is Telemetry?</h3>\n<ul>\n<li><strong>Telemetry</strong> originates from aerospace and industrial systems, meaning <strong>“measurement at a distance.”</strong></li>\n<li>In software, it refers to <strong>automated, continuous collection of operational data</strong> about code, infrastructure, and user interactions.</li>\n<li>The goal: enable teams to <strong>observe, diagnose, and improve systems</strong> without manual intervention or guesswork.</li>\n</ul>\n<p>Riedesel writes:</p>\n<blockquote>\n<p><strong>“Every decision your organization makes about software operations is either supported or hindered by the quality of your telemetry.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"️-2-the-four-styles-of-telemetry\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-2-the-four-styles-of-telemetry\" aria-label=\"️ 2 the four styles of telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚙️ 2. The Four Styles of Telemetry</h3>\n<p>Riedesel identifies <strong>four major styles</strong>, each addressing a distinct layer of system observability:</p>\n<ol>\n<li>\n<h4 id=\"centralized-logging\" style=\"position:relative;\"><a href=\"#centralized-logging\" aria-label=\"centralized logging permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Centralized Logging</strong></h4>\n<ul>\n<li>\n<p>The most familiar form — <strong>aggregating logs from many systems</strong> into a central store (e.g., Elasticsearch, Splunk, CloudWatch Logs).</p>\n</li>\n<li>\n<p>Provides <strong>contextual event history</strong>, essential for debugging and auditing.</p>\n</li>\n<li>\n<p>Best suited for <strong>qualitative analysis</strong> — “What happened?” or “Why did this fail?”</p>\n</li>\n<li>\n<p>Key challenge: <strong>log volume explosion</strong> and <strong>unstructured formats</strong> leading to storage and parsing overhead.</p>\n</li>\n</ul>\n<blockquote>\n<p><strong>“Logs tell stories — but if everyone writes in a different language, your telemetry system becomes a Tower of Babel.”</strong></p>\n</blockquote>\n</li>\n<li>\n<h4 id=\"metrics\" style=\"position:relative;\"><a href=\"#metrics\" aria-label=\"metrics permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Metrics</strong></h4>\n<ul>\n<li>\n<p>Numeric, time-series data about system performance: <strong>request latency, error rates, CPU usage, queue lengths, etc.</strong></p>\n</li>\n<li>\n<p>Enables <strong>quantitative analysis</strong> — “How fast?”, “How much?”, “How often?”</p>\n</li>\n<li>\n<p>Supports <strong>alerting</strong> and <strong>capacity planning</strong>, and feeds into tools like <strong>Prometheus</strong>, <strong>Datadog</strong>, or <strong>InfluxDB</strong>.</p>\n</li>\n<li>\n<p>The emphasis is on <strong>low cardinality and statistical clarity</strong>, since metrics are designed for aggregation and trend detection.</p>\n</li>\n<li>\n<p>Riedesel:</p>\n<blockquote>\n<p><strong>“Metrics show health at a glance — they’re your system’s vital signs.”</strong></p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>\n<h4 id=\"distributed-tracing\" style=\"position:relative;\"><a href=\"#distributed-tracing\" aria-label=\"distributed tracing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Distributed Tracing</strong></h4>\n<ul>\n<li>\n<p>Focused on <strong>understanding request flow across services</strong>, particularly in microservice architectures.</p>\n</li>\n<li>\n<p>A trace represents the <strong>end-to-end journey of a single transaction</strong>, often through dozens of services.</p>\n</li>\n<li>\n<p>Provides <strong>causal context</strong> and exposes latency bottlenecks or dependency failures.</p>\n</li>\n<li>\n<p>Common tools: <strong>Jaeger</strong>, <strong>Zipkin</strong>, <strong>Honeycomb</strong>, <strong>OpenTelemetry Tracing</strong>.</p>\n</li>\n<li>\n<p>Key insight:</p>\n<blockquote>\n<p><strong>“Traces are the connective tissue that link logs and metrics into a coherent picture of user experience.”</strong></p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>\n<h4 id=\"siem-security-information-and-event-management\" style=\"position:relative;\"><a href=\"#siem-security-information-and-event-management\" aria-label=\"siem security information and event management permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>SIEM (Security Information and Event Management)</strong></h4>\n<ul>\n<li>\n<p>Originally from the <strong>security operations world</strong>, but increasingly integrated into software observability.</p>\n</li>\n<li>\n<p>Collects, correlates, and analyzes security events — logins, privilege escalations, file access, API misuse, etc.</p>\n</li>\n<li>\n<p>Used to <strong>detect intrusions</strong>, <strong>comply with audits</strong>, and <strong>respond to incidents</strong>.</p>\n</li>\n<li>\n<p>The author highlights that SIEM often operates <strong>parallel</strong> to engineering telemetry, but ideally should <strong>share the same data sources</strong>.</p>\n</li>\n<li>\n<p>Key warning:</p>\n<blockquote>\n<p><strong>“When security and operations collect telemetry separately, you pay twice and see half.”</strong></p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"-3-who-uses-telemetry--and-why\" style=\"position:relative;\"><a href=\"#-3-who-uses-telemetry--and-why\" aria-label=\" 3 who uses telemetry  and why permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👥 3. Who Uses Telemetry — and Why</h3>\n<p>Riedesel underscores that <strong>telemetry systems serve multiple stakeholders</strong> beyond developers:</p>\n<table>\n<thead>\n<tr>\n<th>Stakeholder</th>\n<th>Purpose</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>DevOps &#x26; SRE Teams</strong></td>\n<td>To maintain <strong>reliability, uptime, and incident response</strong>. They need <strong>real-time metrics, alerts, and traces</strong> to identify and remediate outages quickly.</td>\n</tr>\n<tr>\n<td><strong>Security &#x26; Compliance</strong></td>\n<td>To monitor for <strong>suspicious activity, audit trails, and regulatory evidence</strong>. Telemetry must support <strong>immutability, access control, and data lineage.</strong></td>\n</tr>\n<tr>\n<td><strong>Customer Support</strong></td>\n<td>Uses telemetry to <strong>reproduce customer issues</strong>, validate bug reports, and monitor <strong>service-level agreements (SLAs)</strong>.</td>\n</tr>\n<tr>\n<td><strong>Business Intelligence (BI)</strong></td>\n<td>Leverages telemetry to <strong>correlate system behavior with business outcomes</strong>, such as user engagement or transaction volume.</td>\n</tr>\n</tbody>\n</table>\n<p>The book’s central idea:</p>\n<blockquote>\n<p><strong>“A well-designed telemetry system speaks all these dialects fluently.”</strong></p>\n</blockquote>\n<p>This means the same underlying pipeline can feed <strong>Grafana dashboards</strong>, <strong>security alerts</strong>, and <strong>business KPIs</strong> — if structured correctly.</p>\n<hr>\n<h3 id=\"️-4-common-challenges\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-4-common-challenges\" aria-label=\"️ 4 common challenges permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚠️ 4. Common Challenges</h3>\n<p>The introduction closes by confronting <strong>why telemetry often fails in real-world organizations</strong>, even though it’s so essential.</p>\n<ol>\n<li>\n<p><strong>Underinvestment and Neglect</strong></p>\n<ul>\n<li>\n<p>Telemetry is <strong>“invisible until it breaks”</strong>, leading to chronic underfunding.</p>\n</li>\n<li>\n<p>Riedesel warns:</p>\n<blockquote>\n<p><strong>“Organizations treat telemetry as plumbing, not infrastructure — until the leak floods the house.”</strong></p>\n</blockquote>\n</li>\n<li>\n<p>Result: reactive firefighting, missing context during incidents, poor data quality.</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Lack of Standardization</strong></p>\n<ul>\n<li>Inconsistent event formats, naming conventions, or timestamp handling cause fragmentation.</li>\n<li>Teams build parallel telemetry stacks that <strong>cannot interoperate</strong>, increasing cost and cognitive load.</li>\n<li>Remedy: adopt <strong>common schemas</strong> and <strong>shared context identifiers</strong> (like correlation IDs or trace IDs).</li>\n</ul>\n</li>\n<li>\n<p><strong>Data Leaks and Toxic Telemetry</strong></p>\n<ul>\n<li>\n<p>Many systems inadvertently log <strong>sensitive data</strong> (PII, credentials, financial information).</p>\n</li>\n<li>\n<p>This creates <strong>security, privacy, and compliance liabilities</strong>.</p>\n</li>\n<li>\n<p>Later chapters discuss <strong>redaction pipelines</strong> and <strong>telemetry classification frameworks</strong>.</p>\n</li>\n<li>\n<p>Quote:</p>\n<blockquote>\n<p><strong>“Telemetry can betray you if it captures what it shouldn’t — and keeps it longer than it should.”</strong></p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Legal and Regulatory Disruptions</strong></p>\n<ul>\n<li>With GDPR, CCPA, and similar laws, telemetry systems are now subject to <strong>the same scrutiny as customer databases</strong>.</li>\n<li>Retention policies, data residency, and right-to-erasure requests directly affect design choices.</li>\n<li>Example: an innocuous log containing IP addresses can be considered <strong>personal data</strong> under GDPR.</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"-5-chapter-summary--core-mindset\" style=\"position:relative;\"><a href=\"#-5-chapter-summary--core-mindset\" aria-label=\" 5 chapter summary  core mindset permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧠 5. Chapter Summary — Core Mindset</h3>\n<p>The introduction sets the mental model for the rest of the book:</p>\n<ul>\n<li>Think of telemetry as a <strong>living ecosystem</strong>, not a static product.</li>\n<li>Design pipelines that are <strong>observable, auditable, and evolvable</strong>.</li>\n<li>Treat telemetry as a <strong>first-class citizen</strong> of your system’s architecture — on par with APIs, databases, and CI/CD pipelines.</li>\n</ul>\n<blockquote>\n<p><strong>“Telemetry is both mirror and microscope — it reflects what your system does and reveals what you didn’t know.”</strong></p>\n</blockquote>\n<hr>\n<h2 id=\"️-emitting-stage-creating-and-submitting-telemetry\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-emitting-stage-creating-and-submitting-telemetry\" aria-label=\"️ emitting stage creating and submitting telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚙️ <strong>Emitting Stage: Creating and Submitting Telemetry</strong></h2>\n<h3 id=\"-purpose-of-the-emitting-stage\" style=\"position:relative;\"><a href=\"#-purpose-of-the-emitting-stage\" aria-label=\" purpose of the emitting stage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 <strong>Purpose of the Emitting Stage</strong></h3>\n<p>Riedesel opens this chapter by defining <strong>“emission”</strong> as the <strong>birthplace of all telemetry data</strong> — the point where <strong>systems, code, or services</strong> first produce raw information about what’s happening.</p>\n<blockquote>\n<p><strong>“Emission is where the data begins its life. If this stage is noisy, inconsistent, or incomplete, everything downstream inherits that flaw.”</strong></p>\n</blockquote>\n<p>This is the <strong>foundation layer</strong> of the entire telemetry pipeline. Every log line, metric point, or event captured later originates from <strong>emitters</strong> — whether that’s a web server, a sensor, a cloud service, or an API gateway.</p>\n<p>Riedesel emphasizes that:</p>\n<blockquote>\n<p><strong>“A telemetry system is only as trustworthy as its emitters.”</strong></p>\n</blockquote>\n<p>Even the best visualization and analysis tools cannot fix <strong>badly structured, uncorrelated, or incomplete emissions</strong>.</p>\n<hr>\n<h3 id=\"-1-major-sources-of-telemetry\" style=\"position:relative;\"><a href=\"#-1-major-sources-of-telemetry\" aria-label=\" 1 major sources of telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 <strong>1. Major Sources of Telemetry</strong></h3>\n<p>The author divides telemetry sources into <strong>three main families</strong>, each with its own emission model, reliability concerns, and legal considerations.</p>\n<h4 id=\"a-production-code\" style=\"position:relative;\"><a href=\"#a-production-code\" aria-label=\"a production code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(a) <strong>Production Code</strong></h4>\n<ul>\n<li>\n<p>The most <strong>common and controllable source</strong> of telemetry.</p>\n</li>\n<li>\n<p>Developers insert <strong>logging, tracing, and metrics instrumentation</strong> directly into application code.</p>\n</li>\n<li>\n<p>Examples:</p>\n<ul>\n<li><code class=\"language-text\">logger.info(\"User login successful\", user_id=...)</code></li>\n<li><code class=\"language-text\">statsd.increment(\"checkout.completed\")</code></li>\n<li><code class=\"language-text\">trace.start_span(\"database.query\")</code></li>\n</ul>\n</li>\n<li>\n<p>Purpose: capture <strong>application-level insights</strong> (business events, user actions, error conditions).</p>\n</li>\n<li>\n<p>Emphasis: use <strong>structured, semantic logs</strong> instead of ad-hoc text.</p>\n</li>\n</ul>\n<p>Riedesel’s warning:</p>\n<blockquote>\n<p><strong>“If your logs require grep, you’ve already lost half the battle.”</strong></p>\n</blockquote>\n<p>Structured emission (e.g., JSON logs) allows automation, parsing, and analytics — while unstructured logs create brittle regex filters later in the pipeline.</p>\n<h4 id=\"b-hardware-devices\" style=\"position:relative;\"><a href=\"#b-hardware-devices\" aria-label=\"b hardware devices permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(b) <strong>Hardware Devices</strong></h4>\n<ul>\n<li>\n<p>Network devices, routers, switches, and IoT sensors emit telemetry via <strong>standardized protocols</strong>.</p>\n</li>\n<li>\n<p>The most common example: <strong>SNMP (Simple Network Management Protocol)</strong>.</p>\n<ul>\n<li>Used by <strong>Cisco, Juniper, HP</strong>, and most network vendors.</li>\n<li>Emits status information like port errors, bandwidth usage, temperature, and voltage.</li>\n</ul>\n</li>\n<li>\n<p>Hardware telemetry is often <strong>event-driven</strong> or <strong>poll-based</strong> — meaning the monitoring system queries for data at intervals.</p>\n</li>\n<li>\n<p>Problems arise when <strong>SNMP traps</strong> flood systems during outages — “the storm of events when things fail.”</p>\n</li>\n</ul>\n<p>Quote:</p>\n<blockquote>\n<p><strong>“Hardware telemetry speaks the oldest dialect — terse, numeric, and cryptic — but it still tells critical truths about the health of the foundation.”</strong></p>\n</blockquote>\n<h4 id=\"c-saas-and-iaas-systems\" style=\"position:relative;\"><a href=\"#c-saas-and-iaas-systems\" aria-label=\"c saas and iaas systems permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(c) <strong>SaaS and IaaS Systems</strong></h4>\n<ul>\n<li>\n<p>In the cloud era, much telemetry originates from <strong>external services</strong> you don’t fully control.</p>\n</li>\n<li>\n<p>Examples:</p>\n<ul>\n<li>AWS CloudWatch events</li>\n<li>GCP Stackdriver logs</li>\n<li>Azure Monitor metrics</li>\n<li>Stripe, Twilio, or GitHub webhook events</li>\n</ul>\n</li>\n<li>\n<p>These systems often emit telemetry via <strong>HTTP event streams, JSON APIs, or audit logs</strong>.</p>\n</li>\n<li>\n<p>Integration challenge: <strong>normalize foreign schemas</strong> and <strong>timestamps</strong> to fit your unified telemetry model.</p>\n</li>\n</ul>\n<p>Riedesel notes:</p>\n<blockquote>\n<p><strong>“Your telemetry doesn’t stop at your servers anymore. Every SaaS product your business depends on is now part of your observability surface.”</strong></p>\n</blockquote>\n<p>This means telemetry design must consider <strong>external integrations, rate limits, and API schema drift</strong>.</p>\n<hr>\n<h3 id=\"-2-methods-of-emission\" style=\"position:relative;\"><a href=\"#-2-methods-of-emission\" aria-label=\" 2 methods of emission permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔄 <strong>2. Methods of Emission</strong></h3>\n<p>After identifying sources, Riedesel describes <strong>common emission methods</strong>, mapping each to real-world use cases.</p>\n<h4 id=\"1-log-files\" style=\"position:relative;\"><a href=\"#1-log-files\" aria-label=\"1 log files permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(1) Log Files</strong></h4>\n<ul>\n<li>\n<p>Traditional method: applications write events to files on disk (<code class=\"language-text\">/var/log/...</code>).</p>\n</li>\n<li>\n<p>Advantages: easy to implement, human-readable, durable.</p>\n</li>\n<li>\n<p>Disadvantages: difficult for <strong>containerized or ephemeral systems</strong>, since log files vanish when the container dies.</p>\n</li>\n<li>\n<p>Modern guidance:</p>\n<blockquote>\n<p><strong>“Logs should go to streams, not disks — because disks are pets, streams are cattle.”</strong></p>\n</blockquote>\n</li>\n</ul>\n<p>Hence, newer architectures redirect logs to <strong>stdout/stderr</strong>, enabling collection by sidecar agents (Fluentd, Logstash, etc.).</p>\n<h4 id=\"2-system-logs\" style=\"position:relative;\"><a href=\"#2-system-logs\" aria-label=\"2 system logs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(2) System Logs</strong></h4>\n<ul>\n<li>OS-level telemetry like <strong>syslog</strong>, <strong>journalctl</strong>, or <strong>event logs</strong>.</li>\n<li>These often capture <strong>kernel, network, authentication, and daemon messages</strong>.</li>\n<li>They provide context that application logs alone can’t (e.g., hardware errors, restarts).</li>\n<li>The book encourages integrating these with application telemetry for <strong>complete incident timelines</strong>.</li>\n</ul>\n<blockquote>\n<p><strong>“System logs are your black box recorder — they capture what your app didn’t notice.”</strong></p>\n</blockquote>\n<h4 id=\"3-standard-output-streams\" style=\"position:relative;\"><a href=\"#3-standard-output-streams\" aria-label=\"3 standard output streams permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(3) Standard Output Streams</strong></h4>\n<ul>\n<li>Common in <strong>cloud-native</strong> environments such as Kubernetes or AWS Lambda.</li>\n<li>Instead of writing to disk, applications write logs to <strong>stdout</strong>.</li>\n<li>Log collectors (sidecars, daemons, or host agents) then stream this output to central systems.</li>\n<li>This avoids file permission issues, supports auto-scaling, and simplifies container lifecycle management.</li>\n<li>Example: Docker captures stdout and sends it to the logging driver (Fluentd, Loki, etc.).</li>\n</ul>\n<p>Riedesel emphasizes:</p>\n<blockquote>\n<p><strong>“Emitters in a stateless world must speak over ephemeral channels.”</strong></p>\n</blockquote>\n<h4 id=\"4-snmp-and-device-telemetry\" style=\"position:relative;\"><a href=\"#4-snmp-and-device-telemetry\" aria-label=\"4 snmp and device telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(4) SNMP and Device Telemetry</strong></h4>\n<ul>\n<li>As mentioned, SNMP traps and polls remain the backbone for physical device telemetry.</li>\n<li>SNMPv3 introduced encryption and authentication, addressing prior risks of <strong>plain-text community strings</strong>.</li>\n<li>Still, hardware telemetry must be <strong>rate-limited</strong> and <strong>filtered</strong>, since storms of events can overwhelm ingest pipelines.</li>\n</ul>\n<h4 id=\"5-saas-and-iaas-event-streams\" style=\"position:relative;\"><a href=\"#5-saas-and-iaas-event-streams\" aria-label=\"5 saas and iaas event streams permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(5) SaaS and IaaS Event Streams</strong></h4>\n<ul>\n<li>\n<p>Modern SaaS platforms expose <strong>event hooks</strong>, <strong>audit APIs</strong>, or <strong>change streams</strong>.</p>\n</li>\n<li>\n<p>Examples:</p>\n<ul>\n<li><strong>AWS CloudTrail</strong> → records API activity.</li>\n<li><strong>GitHub Audit Log</strong> → developer behavior telemetry.</li>\n<li><strong>Okta or GSuite logs</strong> → identity and access telemetry.</li>\n</ul>\n</li>\n<li>\n<p>Integration pattern:</p>\n<ul>\n<li>Use <strong>webhooks</strong> or <strong>scheduled API polling</strong>.</li>\n<li>Ingest via an <strong>event collector microservice</strong> or message queue.</li>\n<li>Apply <strong>schema normalization</strong> before storage.</li>\n</ul>\n</li>\n</ul>\n<p>Riedesel highlights:</p>\n<blockquote>\n<p><strong>“Every vendor speaks a different dialect of JSON — your telemetry platform must be multilingual.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-3-key-concept-markup-and-formatting\" style=\"position:relative;\"><a href=\"#-3-key-concept-markup-and-formatting\" aria-label=\" 3 key concept markup and formatting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧠 <strong>3. Key Concept: “Markup” and “Formatting”</strong></h3>\n<p>This section is one of the chapter’s most critical and nuanced discussions. Riedesel introduces <strong>markup</strong> and <strong>formatting</strong> as the <strong>hidden architecture</strong> of successful telemetry emission.</p>\n<blockquote>\n<p><strong>“How you format your telemetry determines how expensive it will be to process, store, and understand — forever.”</strong></p>\n</blockquote>\n<h4 id=\"a-markup--structural-context\" style=\"position:relative;\"><a href=\"#a-markup--structural-context\" aria-label=\"a markup  structural context permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) Markup = Structural Context</strong></h4>\n<ul>\n<li>\n<p>Markup refers to <strong>embedding structure or metadata</strong> into telemetry events.</p>\n</li>\n<li>\n<p>Examples:</p>\n<ul>\n<li>Adding fields like <code class=\"language-text\">service_name</code>, <code class=\"language-text\">environment</code>, <code class=\"language-text\">region</code>, <code class=\"language-text\">trace_id</code>, <code class=\"language-text\">severity</code>, <code class=\"language-text\">user_id</code>.</li>\n<li>Encoding events in <strong>JSON</strong>, <strong>Protocol Buffers</strong>, or <strong>structured key-value pairs</strong>.</li>\n</ul>\n</li>\n<li>\n<p>Purpose:</p>\n<ul>\n<li>Enables <strong>machine parsing</strong>.</li>\n<li>Preserves <strong>contextual meaning</strong> (who, what, where, when).</li>\n<li>Allows correlation across systems (e.g., linking user activity to backend traces).</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p><strong>“Good markup is like a passport — it lets your telemetry cross system borders without losing its identity.”</strong></p>\n</blockquote>\n<h4 id=\"b-formatting--syntax-consistency\" style=\"position:relative;\"><a href=\"#b-formatting--syntax-consistency\" aria-label=\"b formatting  syntax consistency permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Formatting = Syntax Consistency</strong></h4>\n<ul>\n<li>\n<p>Formatting defines <strong>how</strong> the structured data is represented — e.g., JSON vs. plain text vs. key-value pairs.</p>\n</li>\n<li>\n<p>Consistent formatting allows:</p>\n<ul>\n<li>Simplified ingestion pipelines.</li>\n<li>Easier versioning and backward compatibility.</li>\n<li>Predictable storage and indexing.</li>\n</ul>\n</li>\n<li>\n<p>The book recommends <strong>human-readable structured formats</strong> (JSON, YAML) over binary formats, unless efficiency is critical.</p>\n</li>\n<li>\n<p>Quote:</p>\n<blockquote>\n<p><strong>“Human-readable formats cost storage; binary formats cost debugging.”</strong></p>\n</blockquote>\n</li>\n</ul>\n<h4 id=\"c-avoiding-anti-patterns\" style=\"position:relative;\"><a href=\"#c-avoiding-anti-patterns\" aria-label=\"c avoiding anti patterns permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(c) Avoiding Anti-Patterns</strong></h4>\n<ul>\n<li>\n<p>Common mistakes at the emission stage:</p>\n<ol>\n<li><strong>Over-logging</strong> – flooding telemetry with redundant or verbose data.</li>\n<li><strong>Inconsistent keys</strong> – e.g., using <code class=\"language-text\">userId</code>, <code class=\"language-text\">userid</code>, <code class=\"language-text\">User_ID</code> across services.</li>\n<li><strong>Hidden context</strong> – burying critical identifiers inside message text instead of structured fields.</li>\n<li><strong>Unescaped data</strong> – leaking raw input that breaks JSON or XML parsers.</li>\n<li><strong>Time drift</strong> – relying on system clocks without synchronization.</li>\n</ol>\n</li>\n</ul>\n<p>Riedesel cautions:</p>\n<blockquote>\n<p><strong>“You can’t fix bad markup downstream. You can only regret it.”</strong></p>\n</blockquote>\n<p>Hence, emission is where <strong>discipline and schema governance</strong> begin.</p>\n<hr>\n<h3 id=\"-4-reliability-and-security-at-the-emission-point\" style=\"position:relative;\"><a href=\"#-4-reliability-and-security-at-the-emission-point\" aria-label=\" 4 reliability and security at the emission point permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔐 <strong>4. Reliability and Security at the Emission Point</strong></h3>\n<p>Telemetry can be <strong>compromised or lost</strong> even before it leaves the emitter.</p>\n<ul>\n<li>\n<p><strong>Buffering and Backpressure</strong>\nEmitters must handle temporary network failures gracefully — through <strong>local queues or ring buffers</strong>.</p>\n<blockquote>\n<p><strong>“If emitters block on telemetry, you’re monitoring less to protect uptime — that’s a false economy.”</strong></p>\n</blockquote>\n</li>\n<li>\n<p><strong>Security and Least Privilege</strong>\nEmitters should <strong>authenticate with telemetry collectors</strong> using API keys, service accounts, or signed payloads.</p>\n<blockquote>\n<p><strong>“Telemetry should not become an attack vector; every log line is a potential leak.”</strong></p>\n</blockquote>\n</li>\n<li>\n<p><strong>Data Minimization</strong>\nAvoid logging secrets, tokens, or sensitive identifiers.\nAdopt a <strong>telemetry classification policy</strong> (public, internal, confidential).</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"-summary--emission-as-architecture\" style=\"position:relative;\"><a href=\"#-summary--emission-as-architecture\" aria-label=\" summary  emission as architecture permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 <strong>Summary — Emission as Architecture</strong></h3>\n<p>Riedesel closes with a powerful framing:</p>\n<blockquote>\n<p><strong>“The emitting stage is where you decide what your organization will ever know about its systems.”</strong></p>\n</blockquote>\n<p>That decision includes:</p>\n<ul>\n<li><strong>Which events exist or vanish forever</strong></li>\n<li><strong>How those events will be interpreted downstream</strong></li>\n<li><strong>How costly it will be to scale or audit later</strong></li>\n</ul>\n<p>She concludes:</p>\n<blockquote>\n<p><strong>“Telemetry begins at the point of emission — and that’s where reliability, legality, and observability are either born or lost.”</strong></p>\n</blockquote>\n<hr>\n<p>✅ <strong>Summary Checklist: Emitting Best Practices</strong></p>\n<table>\n<thead>\n<tr>\n<th>Principle</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Structured Emission</strong></td>\n<td>Use JSON or key-value logs instead of plain text.</td>\n</tr>\n<tr>\n<td><strong>Consistent Markup</strong></td>\n<td>Include standard fields (timestamp, service, trace_id, severity).</td>\n</tr>\n<tr>\n<td><strong>Stateless Output</strong></td>\n<td>Write to stdout for containerized environments.</td>\n</tr>\n<tr>\n<td><strong>Rate Limiting</strong></td>\n<td>Prevent emission storms (e.g., retry floods, SNMP traps).</td>\n</tr>\n<tr>\n<td><strong>Secure Transmission</strong></td>\n<td>Encrypt data, sign payloads, avoid sensitive content.</td>\n</tr>\n<tr>\n<td><strong>Error Tolerance</strong></td>\n<td>Queue locally when network or collector unavailable.</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"️-transporting-telemetry-from-emitters-to-storage\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-transporting-telemetry-from-emitters-to-storage\" aria-label=\"️ transporting telemetry from emitters to storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚙️ <strong>Transporting Telemetry from Emitters to Storage</strong></h2>\n<h3 id=\"-purpose-of-the-shipping-stage\" style=\"position:relative;\"><a href=\"#-purpose-of-the-shipping-stage\" aria-label=\" purpose of the shipping stage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 <strong>Purpose of the Shipping Stage</strong></h3>\n<p>After telemetry is <strong>emitted</strong> (created), it must be <strong>transported safely, efficiently, and predictably</strong> to a central storage or processing system.</p>\n<p>Jamie Riedesel frames this stage as the <strong>circulatory system</strong> of software telemetry:</p>\n<blockquote>\n<p><strong>“If emitters are the organs that produce telemetry, the shipping layer is the bloodstream — carrying vital information to where it can be understood.”</strong></p>\n</blockquote>\n<p>She warns:</p>\n<blockquote>\n<p><strong>“Telemetry shipping failures are invisible disasters — the system looks healthy, but you’ve gone blind.”</strong></p>\n</blockquote>\n<p>This stage decides whether <strong>data is lost, delayed, duplicated, or corrupted</strong> before reaching its destination.</p>\n<hr>\n<h3 id=\"-1-direct-vs-queued-shipping\" style=\"position:relative;\"><a href=\"#-1-direct-vs-queued-shipping\" aria-label=\" 1 direct vs queued shipping permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 <strong>1. Direct vs. Queued Shipping</strong></h3>\n<p>Telemetry can be delivered in two architectural patterns: <strong>direct</strong> or <strong>queued</strong>. Each comes with trade-offs in <strong>latency, reliability, cost, and operational complexity</strong>.</p>\n<h4 id=\"a-direct-shipping\" style=\"position:relative;\"><a href=\"#a-direct-shipping\" aria-label=\"a direct shipping permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(a) <strong>Direct Shipping</strong></h4>\n<ul>\n<li>\n<p>Emitters <strong>send telemetry straight to the destination system</strong> (e.g., Elasticsearch, Prometheus, Splunk, or a cloud collector).</p>\n</li>\n<li>\n<p>Common in <strong>small systems</strong> or <strong>serverless functions</strong> where simplicity matters more than resilience.</p>\n</li>\n<li>\n<p>Example:</p>\n<ul>\n<li>An NGINX log stream sent directly to <strong>Elasticsearch</strong>.</li>\n<li>A microservice posting metrics directly to <strong>Prometheus PushGateway</strong>.</li>\n</ul>\n</li>\n</ul>\n<p><strong>Advantages:</strong></p>\n<ul>\n<li>Simpler pipeline (fewer moving parts).</li>\n<li>Lower latency (no intermediate queue).</li>\n<li>Easier debugging (fewer hops).</li>\n</ul>\n<p><strong>Disadvantages:</strong></p>\n<ul>\n<li><strong>Backpressure risk:</strong> if the destination is overloaded, emitters may block or drop data.</li>\n<li><strong>Tight coupling:</strong> changes in the storage schema or endpoint can break emitters.</li>\n<li><strong>No replay:</strong> lost data is unrecoverable.</li>\n</ul>\n<p>Riedesel warns:</p>\n<blockquote>\n<p><strong>“Direct shipping is like driving without a seatbelt — fine until the crash.”</strong></p>\n</blockquote>\n<p>It’s acceptable for prototypes or low-volume systems, but not for <strong>production-grade telemetry</strong>.</p>\n<hr>\n<h4 id=\"b-queued-shipping\" style=\"position:relative;\"><a href=\"#b-queued-shipping\" aria-label=\"b queued shipping permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(b) <strong>Queued Shipping</strong></h4>\n<ul>\n<li>Telemetry is sent first to a <strong>buffering or queuing layer</strong> (e.g., <strong>Kafka</strong>, <strong>RabbitMQ</strong>, <strong>AWS Kinesis</strong>, <strong>Google Pub/Sub</strong>, or <strong>Fluentd</strong>).</li>\n<li>This intermediate layer <strong>decouples emitters from consumers</strong>, providing resilience, ordering, and backpressure handling.</li>\n</ul>\n<p><strong>Flow Example:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Emitters → Fluent Bit → Kafka → Logstash → Elasticsearch</code></pre></div>\n<p><strong>Advantages:</strong></p>\n<ul>\n<li><strong>Durability:</strong> queues can store messages until downstream systems recover.</li>\n<li><strong>Scalability:</strong> emitters can continue sending even during heavy load.</li>\n<li><strong>Flexibility:</strong> multiple consumers can process the same stream differently (e.g., metrics vs. security analysis).</li>\n<li><strong>Replay capability:</strong> past telemetry can be reprocessed for incident investigation or schema changes.</li>\n</ul>\n<p><strong>Disadvantages:</strong></p>\n<ul>\n<li>Added complexity (more components to operate).</li>\n<li>Higher latency (milliseconds to seconds).</li>\n<li>Potential for data duplication or out-of-order messages.</li>\n</ul>\n<p>Riedesel emphasizes:</p>\n<blockquote>\n<p><strong>“Queues turn telemetry from a fragile stream into a resilient river — but you must control the flood.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-2-backpressure-and-flow-control\" style=\"position:relative;\"><a href=\"#-2-backpressure-and-flow-control\" aria-label=\" 2 backpressure and flow control permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚦 <strong>2. Backpressure and Flow Control</strong></h3>\n<p>A crucial design theme in this chapter is <strong>backpressure</strong> — what happens when telemetry is produced faster than it can be stored or analyzed.</p>\n<ul>\n<li>Emitters can <strong>block</strong>, <strong>drop</strong>, or <strong>buffer</strong> data.</li>\n<li>Intermediate queues can <strong>fill up</strong> and cause <strong>network congestion</strong>.</li>\n<li>Overloaded collectors can <strong>throttle</strong> incoming streams.</li>\n</ul>\n<p>Riedesel’s principle:</p>\n<blockquote>\n<p><strong>“Telemetry that blocks application progress becomes a self-inflicted denial of service.”</strong></p>\n</blockquote>\n<p><strong>Best Practices:</strong></p>\n<ol>\n<li>Use <strong>asynchronous emission</strong> wherever possible.</li>\n<li>Implement <strong>bounded buffers</strong> to avoid unbounded memory growth.</li>\n<li>Employ <strong>drop policies</strong> for non-critical telemetry under load.</li>\n<li>Monitor queue depth as a <strong>first-class metric</strong> — it’s the heartbeat of your telemetry system.</li>\n</ol>\n<hr>\n<h3 id=\"️-3-shipping-between-saas-systems\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-3-shipping-between-saas-systems\" aria-label=\"️ 3 shipping between saas systems permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>☁️ <strong>3. Shipping Between SaaS Systems</strong></h3>\n<p>Modern organizations operate across multiple SaaS environments — AWS, Datadog, GitHub, Cloudflare, Okta, etc.</p>\n<p>These systems each emit <strong>telemetry-as-a-service</strong>, but <strong>interconnecting them</strong> is complex.</p>\n<p>Riedesel observes:</p>\n<blockquote>\n<p><strong>“In the cloud era, telemetry has gone federated — no single system owns the truth anymore.”</strong></p>\n</blockquote>\n<h4 id=\"challenges\" style=\"position:relative;\"><a href=\"#challenges\" aria-label=\"challenges permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Challenges:</strong></h4>\n<ul>\n<li><strong>Diverse formats:</strong> JSON schemas differ between vendors.</li>\n<li><strong>Rate limits:</strong> APIs often throttle requests.</li>\n<li><strong>Data latency:</strong> events may arrive hours after emission.</li>\n<li><strong>Security &#x26; credentials:</strong> API keys, webhooks, and IAM roles all need secure rotation.</li>\n</ul>\n<h4 id=\"integration-patterns\" style=\"position:relative;\"><a href=\"#integration-patterns\" aria-label=\"integration patterns permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Integration Patterns:</strong></h4>\n<ol>\n<li><strong>Webhook relays:</strong> immediate push of telemetry to your collector (e.g., Stripe → HTTP endpoint).</li>\n<li><strong>Scheduled API pulls:</strong> periodic retrieval (e.g., GitHub audit logs via REST).</li>\n<li><strong>Cloud-native bridges:</strong> AWS EventBridge, GCP Pub/Sub connectors.</li>\n</ol>\n<h4 id=\"best-practice\" style=\"position:relative;\"><a href=\"#best-practice\" aria-label=\"best practice permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Best Practice:</strong></h4>\n<blockquote>\n<p><strong>“Don’t build your own SaaS bridge when the vendor already offers an export stream — consume, don’t scrape.”</strong></p>\n</blockquote>\n<p>Use <strong>vendor-supported streaming APIs</strong> or <strong>ETL services</strong> (like Snowflake connectors, Datadog forwarders) to maintain reliability and schema consistency.</p>\n<hr>\n<h3 id=\"-4-tipping-points-for-architecture-change\" style=\"position:relative;\"><a href=\"#-4-tipping-points-for-architecture-change\" aria-label=\" 4 tipping points for architecture change permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧭 <strong>4. Tipping Points for Architecture Change</strong></h3>\n<p>As telemetry grows, systems reach <strong>scaling inflection points</strong> that force architectural evolution.</p>\n<p>Riedesel frames these <strong>tipping points</strong> as natural transitions every organization eventually faces:</p>\n<table>\n<thead>\n<tr>\n<th>Stage</th>\n<th>Symptoms</th>\n<th>Needed Shift</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Local Logging</strong></td>\n<td>Manual file collection, missing events</td>\n<td>Adopt centralized logging via syslog or Fluentd</td>\n</tr>\n<tr>\n<td><strong>Direct Shipping</strong></td>\n<td>Collector overload, data loss</td>\n<td>Introduce buffering (Kafka, Kinesis)</td>\n</tr>\n<tr>\n<td><strong>Buffered Shipping</strong></td>\n<td>Queue lag, cost explosion</td>\n<td>Introduce <strong>data retention policies</strong> and <strong>aggregation</strong></td>\n</tr>\n<tr>\n<td><strong>Federated Telemetry</strong></td>\n<td>Multiple SaaS systems, siloed analytics</td>\n<td>Deploy <strong>unified schema governance</strong> and <strong>cross-domain correlation IDs</strong></td>\n</tr>\n</tbody>\n</table>\n<p>She warns:</p>\n<blockquote>\n<p><strong>“Every telemetry system outgrows its first architecture — the tragedy is not noticing it until data is gone.”</strong></p>\n</blockquote>\n<hr>\n<h2 id=\"-unifying-formats-and-encoding-telemetry\" style=\"position:relative;\"><a href=\"#-unifying-formats-and-encoding-telemetry\" aria-label=\" unifying formats and encoding telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧱 <strong>Unifying Formats and Encoding Telemetry</strong></h2>\n<h3 id=\"-purpose\" style=\"position:relative;\"><a href=\"#-purpose\" aria-label=\" purpose permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 <strong>Purpose</strong></h3>\n<p>Once telemetry reaches the collector, it must be <strong>normalized, encoded, and made uniform</strong> so it can be indexed, visualized, and correlated across systems.</p>\n<p>Riedesel introduces this chapter with a central idea:</p>\n<blockquote>\n<p><strong>“Telemetry that cannot be unified cannot be trusted.”</strong></p>\n</blockquote>\n<p>Even if data is collected flawlessly, <strong>inconsistent encoding or schema mismatch</strong> makes it impossible to query effectively or perform cross-system analytics.</p>\n<hr>\n<h3 id=\"-1-the-problem-of-format-fragmentation\" style=\"position:relative;\"><a href=\"#-1-the-problem-of-format-fragmentation\" aria-label=\" 1 the problem of format fragmentation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔄 <strong>1. The Problem of Format Fragmentation</strong></h3>\n<p>Every emitter speaks its own dialect:</p>\n<ul>\n<li>One app writes <strong>plain text logs</strong></li>\n<li>Another emits <strong>JSON</strong></li>\n<li>A third sends <strong>Syslog-formatted lines</strong></li>\n<li>A SaaS product sends <strong>nested JSON objects</strong></li>\n</ul>\n<p>Result:</p>\n<blockquote>\n<p><strong>“Without translation, your telemetry warehouse becomes a Babel tower of half-truths.”</strong></p>\n</blockquote>\n<p>Thus, the <strong>unifying stage</strong> converts all formats into a <strong>normalized schema</strong> for storage.</p>\n<hr>\n<h3 id=\"️-2-converting-between-syslog-json-and-object-encodings\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-2-converting-between-syslog-json-and-object-encodings\" aria-label=\"️ 2 converting between syslog json and object encodings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚙️ <strong>2. Converting Between Syslog, JSON, and Object Encodings</strong></h3>\n<p>Riedesel presents practical examples of how telemetry data transforms across formats:</p>\n<h4 id=\"a-syslog--json\" style=\"position:relative;\"><a href=\"#a-syslog--json\" aria-label=\"a syslog  json permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(a) <strong>Syslog → JSON</strong></h4>\n<ul>\n<li>Syslog is a legacy standard for event messages in networked systems.</li>\n<li>Contains a <strong>priority</strong>, <strong>timestamp</strong>, <strong>hostname</strong>, <strong>process name</strong>, and <strong>message</strong>.</li>\n<li>However, the “message” part is often unstructured text.</li>\n</ul>\n<p>To make it machine-readable, we wrap it in JSON or extract key fields:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;34>1 2024-01-01T12:00:00Z web01 nginx[123]: request_path=/home status=200</code></pre></div>\n<p>➡️</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"timestamp\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-01-01T12:00:00Z\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"host\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"web01\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"app\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"nginx\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"request_path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/home\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"status\"</span><span class=\"token operator\">:</span> <span class=\"token number\">200</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p><strong>“Translating Syslog to structured JSON is the single most powerful upgrade a telemetry pipeline can make.”</strong></p>\n</blockquote>\n<h4 id=\"b-json--object-encodings\" style=\"position:relative;\"><a href=\"#b-json--object-encodings\" aria-label=\"b json  object encodings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(b) <strong>JSON → Object Encodings</strong></h4>\n<ul>\n<li>JSON is widely supported but inefficient for <strong>high-volume metrics</strong>.</li>\n<li>Alternatives: <strong>Protocol Buffers</strong>, <strong>Avro</strong>, or <strong>MessagePack</strong> — more compact and schema-driven.</li>\n<li>These enable <strong>binary serialization</strong>, saving bandwidth and storage at scale.</li>\n</ul>\n<p>Riedesel cautions:</p>\n<blockquote>\n<p><strong>“Choose binary formats for machines, not for humans — you can’t grep a protobuf.”</strong></p>\n</blockquote>\n<p>She suggests a <strong>hybrid approach</strong>:</p>\n<ul>\n<li>Use JSON for ingestion and debugging.</li>\n<li>Convert to binary encodings for long-term archival or analytics.</li>\n</ul>\n<hr>\n<h3 id=\"-3-schema-governance-and-field-consistency\" style=\"position:relative;\"><a href=\"#-3-schema-governance-and-field-consistency\" aria-label=\" 3 schema governance and field consistency permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 <strong>3. Schema Governance and Field Consistency</strong></h3>\n<p>Beyond syntax, <strong>semantic alignment</strong> is essential:</p>\n<ul>\n<li>Standardize field names: always use <code class=\"language-text\">service</code>, not <code class=\"language-text\">svc_name</code> or <code class=\"language-text\">app_name</code>.</li>\n<li>Enforce timestamp formats (e.g., <strong>ISO 8601 in UTC</strong>).</li>\n<li>Maintain <strong>type discipline</strong> — don’t let <code class=\"language-text\">user_id</code> be a string in one service and an integer in another.</li>\n</ul>\n<blockquote>\n<p><strong>“A telemetry schema is a contract between your systems and your sanity.”</strong></p>\n</blockquote>\n<p>To enforce this, organizations adopt:</p>\n<ul>\n<li><strong>OpenTelemetry semantic conventions</strong></li>\n<li><strong>JSON schema validation pipelines</strong></li>\n<li><strong>CI/CD schema linting tools</strong></li>\n</ul>\n<hr>\n<h3 id=\"-4-designing-for-cardinality-scalability\" style=\"position:relative;\"><a href=\"#-4-designing-for-cardinality-scalability\" aria-label=\" 4 designing for cardinality scalability permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📊 <strong>4. Designing for Cardinality Scalability</strong></h3>\n<p>Perhaps the most important section in this chapter deals with <strong>cardinality</strong> — the number of unique combinations of metric labels.</p>\n<h4 id=\"what-is-cardinality\" style=\"position:relative;\"><a href=\"#what-is-cardinality\" aria-label=\"what is cardinality permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>What is Cardinality?</strong></h4>\n<ul>\n<li>A metric with labels (e.g., <code class=\"language-text\">requests_total{region=\"us-east\", user_id=\"12345\"}</code>) has high cardinality if <strong>too many unique label values exist</strong>.</li>\n<li>Each unique combination creates a <strong>new time-series</strong> in systems like Prometheus.</li>\n</ul>\n<p>Riedesel explains:</p>\n<blockquote>\n<p><strong>“Cardinality is the hidden tax of telemetry — you pay it in memory, CPU, and time.”</strong></p>\n</blockquote>\n<h4 id=\"symptoms-of-cardinality-explosion\" style=\"position:relative;\"><a href=\"#symptoms-of-cardinality-explosion\" aria-label=\"symptoms of cardinality explosion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Symptoms of Cardinality Explosion</strong></h4>\n<ul>\n<li>Prometheus OOMs or slows down.</li>\n<li>Dashboards become sluggish.</li>\n<li>Query engines timeout.</li>\n<li>Costs skyrocket for hosted monitoring.</li>\n</ul>\n<h4 id=\"best-practices\" style=\"position:relative;\"><a href=\"#best-practices\" aria-label=\"best practices permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Best Practices</strong></h4>\n<ol>\n<li><strong>Avoid user-specific labels</strong> (e.g., <code class=\"language-text\">user_id</code>, <code class=\"language-text\">session_id</code>).</li>\n<li><strong>Bucketize values</strong> (e.g., latency buckets instead of per-request times).</li>\n<li><strong>Aggregate early</strong> (e.g., sum per-region, not per-instance).</li>\n<li><strong>Implement cardinality budgets</strong> — define acceptable series counts per service.</li>\n</ol>\n<blockquote>\n<p><strong>“Every new label combination should earn its keep — if you can’t justify it, remove it.”</strong></p>\n</blockquote>\n<p>She also stresses <strong>instrumentation discipline</strong>:</p>\n<ul>\n<li>Developers should understand that adding a single new label can multiply storage costs.</li>\n<li>Create <strong>shared review processes</strong> for new metrics.</li>\n</ul>\n<h4 id=\"rule-of-thumb\" style=\"position:relative;\"><a href=\"#rule-of-thumb\" aria-label=\"rule of thumb permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Rule of Thumb:</strong></h4>\n<blockquote>\n<p><strong>“A telemetry system dies not from too little data, but from too much uniqueness.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-5-end-to-end-encoding-pipeline-example\" style=\"position:relative;\"><a href=\"#-5-end-to-end-encoding-pipeline-example\" aria-label=\" 5 end to end encoding pipeline example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📦 <strong>5. End-to-End Encoding Pipeline Example</strong></h3>\n<p>Riedesel outlines a realistic data path combining both chapters’ ideas:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Emitters (Apps, Devices, SaaS)\n   ↓\nFluent Bit Agents\n   ↓\nKafka Topics (JSON)\n   ↓\nLogstash Processors\n   ↓\nElasticsearch (normalized JSON)\n   ↓\nData Warehouse / SIEM (binary compressed objects)</code></pre></div>\n<p>Each step either <strong>translates</strong> (e.g., Syslog → JSON) or <strong>reformats</strong> (JSON → Protobuf), balancing <strong>human readability</strong> with <strong>machine efficiency</strong>.</p>\n<hr>\n<h3 id=\"-summary--unification-is-understanding\" style=\"position:relative;\"><a href=\"#-summary--unification-is-understanding\" aria-label=\" summary  unification is understanding permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧠 <strong>Summary — “Unification Is Understanding”</strong></h3>\n<blockquote>\n<p><strong>“You can’t correlate what you can’t normalize.”</strong></p>\n</blockquote>\n<p>In Riedesel’s framework, <strong>unifying formats and controlling cardinality</strong> are what transform telemetry from <em>data</em> into <em>knowledge</em>.</p>\n<p>Without schema governance, telemetry becomes noise.\nWithout cardinality discipline, it becomes cost.</p>\n<p>The ultimate design goal:</p>\n<blockquote>\n<p><strong>“Emit structured data, ship it safely, unify it consistently, and scale it responsibly — that’s the architecture of trustworthy telemetry.”</strong></p>\n</blockquote>\n<hr>\n<p>✅ <strong>Summary Checklist: Shipping + Encoding Best Practices</strong></p>\n<table>\n<thead>\n<tr>\n<th>Principle</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Use Queues</strong></td>\n<td>Always buffer between emitters and storage to handle spikes and outages.</td>\n</tr>\n<tr>\n<td><strong>Monitor Queue Depth</strong></td>\n<td>Treat backlog as a leading indicator of telemetry health.</td>\n</tr>\n<tr>\n<td><strong>Normalize Formats Early</strong></td>\n<td>Convert Syslog/plaintext to structured JSON at ingestion.</td>\n</tr>\n<tr>\n<td><strong>Govern Schemas</strong></td>\n<td>Enforce consistent field names and data types.</td>\n</tr>\n<tr>\n<td><strong>Control Cardinality</strong></td>\n<td>Eliminate unnecessary metric labels and aggregate early.</td>\n</tr>\n<tr>\n<td><strong>Plan Architecture Transitions</strong></td>\n<td>Watch for tipping points as data volume or team count grows.</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"-presentation-stage-visualizing-and-aggregating-telemetry\" style=\"position:relative;\"><a href=\"#-presentation-stage-visualizing-and-aggregating-telemetry\" aria-label=\" presentation stage visualizing and aggregating telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📊 <strong>Presentation Stage: Visualizing and Aggregating Telemetry</strong></h2>\n<h3 id=\"-purpose-of-the-presentation-stage\" style=\"position:relative;\"><a href=\"#-purpose-of-the-presentation-stage\" aria-label=\" purpose of the presentation stage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 <strong>Purpose of the Presentation Stage</strong></h3>\n<p>In previous chapters, Riedesel covered the <strong>emission</strong> (creation) and <strong>shipping</strong> (transport) of telemetry data. Now, she focuses on what she calls <strong>“the final mile”</strong> — the stage where data <strong>meets human cognition</strong>.</p>\n<blockquote>\n<p><strong>“The presentation stage is where telemetry leaves the machine world and enters the human world.”</strong></p>\n</blockquote>\n<p>At this point, the system’s success depends not just on performance or schema — but on <strong>how clearly people can interpret what’s shown</strong>.</p>\n<p>The author makes an essential distinction:</p>\n<blockquote>\n<p><strong>“Raw telemetry tells you what happened. Presentation tells you what it means.”</strong></p>\n</blockquote>\n<p>This chapter is not just about pretty dashboards — it’s about <strong>transforming telemetry into decision support systems</strong> for engineers, analysts, executives, and compliance teams.</p>\n<hr>\n<h3 id=\"-1-from-data-to-understanding-the-role-of-presentation\" style=\"position:relative;\"><a href=\"#-1-from-data-to-understanding-the-role-of-presentation\" aria-label=\" 1 from data to understanding the role of presentation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 <strong>1. From Data to Understanding: The Role of Presentation</strong></h3>\n<p>Riedesel opens with a core principle:</p>\n<blockquote>\n<p><strong>“A telemetry system that doesn’t present well is a silent system — it’s talking, but no one understands it.”</strong></p>\n</blockquote>\n<p>Even if your collection and storage layers are perfect, poor presentation creates:</p>\n<ul>\n<li><strong>Information overload</strong></li>\n<li><strong>False confidence in averages</strong></li>\n<li><strong>Ignored warnings</strong></li>\n<li><strong>Unquestioned dashboards that mislead</strong></li>\n</ul>\n<p>Thus, the presentation stage is about designing <strong>“clarity pipelines”</strong>, not just dashboards.</p>\n<h4 id=\"key-goals\" style=\"position:relative;\"><a href=\"#key-goals\" aria-label=\"key goals permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Key Goals:</h4>\n<ol>\n<li><strong>Visualize</strong> — Turn complex datasets into intuitive, interactive visual models.</li>\n<li><strong>Aggregate</strong> — Summarize raw data to reveal trends, patterns, and anomalies.</li>\n<li><strong>Link</strong> — Connect telemetry signals to <strong>decisions and actions</strong>.</li>\n</ol>\n<hr>\n<h3 id=\"️-2-visualizing-telemetry-dashboards-and-human-factors\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-2-visualizing-telemetry-dashboards-and-human-factors\" aria-label=\"️ 2 visualizing telemetry dashboards and human factors permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🖥️ <strong>2. Visualizing Telemetry: Dashboards and Human Factors</strong></h3>\n<p>Telemetry visualization tools like <strong>Grafana, Kibana, Datadog, Splunk, and New Relic</strong> are central to this stage.\nRiedesel argues that <strong>dashboards are the “storytellers” of telemetry</strong>, but only if designed deliberately.</p>\n<blockquote>\n<p><strong>“Good dashboards explain, not impress.”</strong></p>\n</blockquote>\n<h4 id=\"a-grafana-and-kibana-as-exemplars\" style=\"position:relative;\"><a href=\"#a-grafana-and-kibana-as-exemplars\" aria-label=\"a grafana and kibana as exemplars permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) Grafana and Kibana as Exemplars</strong></h4>\n<ul>\n<li>\n<p><strong>Grafana</strong> excels at <strong>numerical and time-series visualization</strong>, built on metrics like Prometheus or InfluxDB.</p>\n<ul>\n<li>Ideal for <strong>SRE and operations dashboards</strong> (e.g., latency, CPU, error rates).</li>\n<li>Provides strong alerting and panel templating.</li>\n</ul>\n</li>\n<li>\n<p><strong>Kibana</strong>, part of the <strong>ELK (Elasticsearch, Logstash, Kibana)</strong> stack, is optimized for <strong>exploratory log analytics</strong> and <strong>ad hoc querying</strong>.</p>\n<ul>\n<li>Ideal for debugging and tracing.</li>\n<li>Enables slicing by text, metadata, or fields (e.g., <code class=\"language-text\">status_code:500 AND region:us-west</code>).</li>\n</ul>\n</li>\n</ul>\n<p><strong>Integration pattern example:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Fluentd → Elasticsearch → Kibana\nPrometheus → Grafana\nJaeger → Grafana/Tempo (for traces)</code></pre></div>\n<p>Each tool sits on top of the telemetry stack, turning <strong>streams of data into human-friendly visuals</strong>.</p>\n<hr>\n<h4 id=\"b-dashboard-design-principles\" style=\"position:relative;\"><a href=\"#b-dashboard-design-principles\" aria-label=\"b dashboard design principles permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Dashboard Design Principles</strong></h4>\n<p>Riedesel draws on cognitive ergonomics — how humans perceive information under stress — especially during <strong>incident response</strong>.</p>\n<blockquote>\n<p><strong>“Dashboards are not for beauty contests; they’re for firefights.”</strong></p>\n</blockquote>\n<p><strong>Principles:</strong></p>\n<ol>\n<li><strong>Clarity over completeness.</strong> Avoid overloading with too many panels or metrics.</li>\n<li><strong>Layered storytelling.</strong> Start with high-level status, then drill into details.</li>\n<li><strong>Color with purpose.</strong> Red = urgency, green = normal, gray = unknown. Avoid rainbow palettes that dilute meaning.</li>\n<li><strong>Context first.</strong> Always show <strong>time window</strong>, <strong>environment</strong>, and <strong>version</strong> metadata.</li>\n<li><strong>Annotations and correlation.</strong> Overlay deploy events, config changes, or feature flags on metric graphs.</li>\n</ol>\n<blockquote>\n<p><strong>“If your dashboard can’t tell you when the last deploy happened, it’s missing the most important annotation of all.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-3-aggregation-making-sense-of-volume\" style=\"position:relative;\"><a href=\"#-3-aggregation-making-sense-of-volume\" aria-label=\" 3 aggregation making sense of volume permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📈 <strong>3. Aggregation: Making Sense of Volume</strong></h3>\n<p>After visualization comes <strong>aggregation</strong> — the mathematical condensation of billions of telemetry points into meaningful summaries.</p>\n<p>Riedesel stresses:</p>\n<blockquote>\n<p><strong>“Aggregation is the act of asking better questions of your data.”</strong></p>\n</blockquote>\n<p>Without aggregation, telemetry is just noise — a firehose of irrelevant detail.</p>\n<h4 id=\"a-types-of-aggregation-functions\" style=\"position:relative;\"><a href=\"#a-types-of-aggregation-functions\" aria-label=\"a types of aggregation functions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) Types of Aggregation Functions</strong></h4>\n<p>Different telemetry types require different summarization strategies:</p>\n<table>\n<thead>\n<tr>\n<th>Telemetry Type</th>\n<th>Common Aggregations</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Metrics</strong></td>\n<td>Average, percentile, rate, sum, count</td>\n<td><code class=\"language-text\">avg(request_latency)</code></td>\n</tr>\n<tr>\n<td><strong>Logs</strong></td>\n<td>Count by severity, group by message</td>\n<td><code class=\"language-text\">count(*) WHERE level='error'</code></td>\n</tr>\n<tr>\n<td><strong>Traces</strong></td>\n<td>Average span duration, top N slowest paths</td>\n<td><code class=\"language-text\">p95(span.duration)</code></td>\n</tr>\n</tbody>\n</table>\n<p>Riedesel distinguishes between <strong>descriptive</strong> and <strong>diagnostic</strong> aggregations:</p>\n<ul>\n<li><em>Descriptive:</em> what’s happening now (e.g., average latency).</li>\n<li><em>Diagnostic:</em> why it’s happening (e.g., correlation between latency and region).</li>\n</ul>\n<blockquote>\n<p><strong>“Every aggregation hides detail — make sure you’re hiding the right details.”</strong></p>\n</blockquote>\n<hr>\n<h4 id=\"b-temporal-aggregation\" style=\"position:relative;\"><a href=\"#b-temporal-aggregation\" aria-label=\"b temporal aggregation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Temporal Aggregation</strong></h4>\n<p>Telemetry data is inherently <strong>time-based</strong>, so <strong>temporal aggregation</strong> is critical:</p>\n<ul>\n<li><strong>Minute/hour/day windows</strong> reveal trends and patterns.</li>\n<li><strong>Moving averages</strong> smooth volatility but can hide spikes.</li>\n<li><strong>Percentiles</strong> (p50, p90, p99) expose outliers and tail latency.</li>\n</ul>\n<p>Riedesel warns:</p>\n<blockquote>\n<p><strong>“Averages are comfort food — easy to digest, but nutritionally empty.”</strong></p>\n</blockquote>\n<p><strong>Example:</strong>\nIf your 99th percentile latency is 5 seconds while the average is 200ms, you’re misleading yourself with the average.\nUse <strong>histograms</strong> or <strong>quantile-based aggregation</strong> for operational truth.</p>\n<hr>\n<h4 id=\"c-dimensional-aggregation-and-cardinality-awareness\" style=\"position:relative;\"><a href=\"#c-dimensional-aggregation-and-cardinality-awareness\" aria-label=\"c dimensional aggregation and cardinality awareness permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(c) Dimensional Aggregation and Cardinality Awareness</strong></h4>\n<p>When aggregating, it’s easy to accidentally reintroduce <strong>cardinality explosion</strong> (see Chapter 4).</p>\n<p>For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"promql\"><pre class=\"language-promql\"><code class=\"language-promql\"><span class=\"token keyword\">sum</span><span class=\"token punctuation\">(</span><span class=\"token function\">rate</span><span class=\"token punctuation\">(</span>http_requests_total<span class=\"token context-range\"><span class=\"token punctuation\">[</span><span class=\"token range-duration number\">5m</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">by</span> <span class=\"token vector-match\"><span class=\"token punctuation\">(</span><span class=\"token label-key attr-name\">region</span><span class=\"token punctuation\">,</span> <span class=\"token label-key attr-name\">service</span><span class=\"token punctuation\">)</span></span></code></pre></div>\n<p>is good — but adding <code class=\"language-text\">by (region, service, user_id)</code> will <strong>multiply series exponentially</strong>.</p>\n<blockquote>\n<p><strong>“Aggregation is a compression algorithm — not a multiplication algorithm.”</strong></p>\n</blockquote>\n<p>Always aggregate along <strong>business-relevant dimensions</strong>, not arbitrary identifiers.</p>\n<hr>\n<h3 id=\"-4-statistical-validity-in-telemetry\" style=\"position:relative;\"><a href=\"#-4-statistical-validity-in-telemetry\" aria-label=\" 4 statistical validity in telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📊 <strong>4. Statistical Validity in Telemetry</strong></h3>\n<p>One of the book’s most insightful sections discusses <strong>the dangers of misusing telemetry statistics</strong>.</p>\n<p>Riedesel writes:</p>\n<blockquote>\n<p><strong>“Dashboards lie — not because they want to, but because we ask the wrong questions.”</strong></p>\n</blockquote>\n<h4 id=\"a-sampling-bias\" style=\"position:relative;\"><a href=\"#a-sampling-bias\" aria-label=\"a sampling bias permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) Sampling Bias</strong></h4>\n<p>Telemetry often represents only what’s <strong>instrumented</strong>, not what’s <strong>experienced</strong>.\nFor instance, a log-based metric may exclude events from services that failed silently.</p>\n<blockquote>\n<p><strong>“Telemetry shows the observable universe — not the entire one.”</strong></p>\n</blockquote>\n<p>Mitigation:</p>\n<ul>\n<li>Ensure uniform instrumentation across services.</li>\n<li>Use synthetic monitoring to fill visibility gaps.</li>\n</ul>\n<h4 id=\"b-aggregation-distortion\" style=\"position:relative;\"><a href=\"#b-aggregation-distortion\" aria-label=\"b aggregation distortion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Aggregation Distortion</strong></h4>\n<p>Improper aggregation can distort truth:</p>\n<ul>\n<li>Averaging across dissimilar metrics (e.g., combining batch and interactive workloads).</li>\n<li>Merging time zones or misaligned intervals.</li>\n<li>Using <strong>non-weighted averages</strong> for metrics like cost or duration.</li>\n</ul>\n<blockquote>\n<p><strong>“Statistics without context are worse than no statistics at all.”</strong></p>\n</blockquote>\n<h4 id=\"c-false-correlations\" style=\"position:relative;\"><a href=\"#c-false-correlations\" aria-label=\"c false correlations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(c) False Correlations</strong></h4>\n<p>With large telemetry datasets, it’s easy to “discover” meaningless patterns.\nExample: CPU spikes correlating with user logins — but actually caused by a background cache warmup.</p>\n<p>Riedesel warns:</p>\n<blockquote>\n<p><strong>“The more telemetry you have, the more coincidences you’ll mistake for causes.”</strong></p>\n</blockquote>\n<p>Mitigation: Always <strong>verify correlation through causality tests</strong> — link metrics to traces and logs.</p>\n<hr>\n<h3 id=\"-5-linking-raw-data-to-decision-support\" style=\"position:relative;\"><a href=\"#-5-linking-raw-data-to-decision-support\" aria-label=\" 5 linking raw data to decision support permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧠 <strong>5. Linking Raw Data to Decision Support</strong></h3>\n<p>This section marks the philosophical heart of the chapter — transforming telemetry from operational feedback into <strong>organizational intelligence</strong>.</p>\n<blockquote>\n<p><strong>“Telemetry is not the goal. Decision-making is.”</strong></p>\n</blockquote>\n<h4 id=\"a-multi-layered-feedback-loops\" style=\"position:relative;\"><a href=\"#a-multi-layered-feedback-loops\" aria-label=\"a multi layered feedback loops permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) Multi-Layered Feedback Loops</strong></h4>\n<p>Riedesel describes telemetry as the backbone of <strong>multiple feedback loops</strong>:</p>\n<ul>\n<li><strong>Real-time:</strong> alerting, anomaly detection, incident response.</li>\n<li><strong>Tactical:</strong> post-incident analysis, sprint retrospectives.</li>\n<li><strong>Strategic:</strong> capacity planning, feature adoption, cost optimization.</li>\n</ul>\n<p>She compares it to <strong>business nervous systems</strong>:</p>\n<blockquote>\n<p><strong>“Telemetry tells you when to flinch, when to heal, and when to grow.”</strong></p>\n</blockquote>\n<h4 id=\"b-bridging-engineering-and-business\" style=\"position:relative;\"><a href=\"#b-bridging-engineering-and-business\" aria-label=\"b bridging engineering and business permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Bridging Engineering and Business</strong></h4>\n<p>Telemetry presentation must serve both <strong>technical and non-technical stakeholders</strong>:</p>\n<ul>\n<li>Engineers: need detailed traces and metrics for debugging.</li>\n<li>Executives: need KPI dashboards showing uptime, cost, and user satisfaction.</li>\n<li>Compliance officers: need verifiable logs of access and retention.</li>\n</ul>\n<p>The same data supports all these roles through <strong>different aggregation and visualization layers</strong>.</p>\n<blockquote>\n<p><strong>“If your telemetry only serves engineers, it’s observability. When it serves decisions, it’s intelligence.”</strong></p>\n</blockquote>\n<h4 id=\"c-from-dashboards-to-automation\" style=\"position:relative;\"><a href=\"#c-from-dashboards-to-automation\" aria-label=\"c from dashboards to automation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(c) From Dashboards to Automation</strong></h4>\n<p>The most advanced organizations go beyond manual dashboards into <strong>automated telemetry-driven decision systems</strong>:</p>\n<ul>\n<li><strong>Autoscaling policies</strong> driven by metrics.</li>\n<li><strong>Canary deployment rollbacks</strong> based on telemetry thresholds.</li>\n<li><strong>Security incident responses</strong> triggered by SIEM telemetry.</li>\n</ul>\n<p>This is telemetry maturing into <strong>“autonomic feedback”</strong> — the system self-correcting based on what it sees.</p>\n<blockquote>\n<p><strong>“Mature telemetry systems don’t just inform humans — they empower systems to react faster than humans can.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-6-the-cost-of-presentation\" style=\"position:relative;\"><a href=\"#-6-the-cost-of-presentation\" aria-label=\" 6 the cost of presentation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔐 <strong>6. The Cost of Presentation</strong></h3>\n<p>Riedesel closes with a sober reminder: visualization layers are <strong>expensive and fragile</strong> if mismanaged.</p>\n<ul>\n<li><strong>Query costs</strong> grow exponentially as users run interactive dashboards.</li>\n<li><strong>Retention policies</strong> must filter what’s visualized vs. what’s archived.</li>\n<li><strong>Security</strong>: dashboards often expose sensitive fields (user IDs, IPs, PII).</li>\n</ul>\n<p>Hence:</p>\n<blockquote>\n<p><strong>“Every pixel you show has a cost — in compute, in clarity, and in confidentiality.”</strong></p>\n</blockquote>\n<p>She encourages building <strong>tiered access dashboards</strong>:</p>\n<ul>\n<li>Ops dashboards → detailed, low-level metrics.</li>\n<li>Management dashboards → aggregated KPIs only.</li>\n<li>Security dashboards → anonymized and access-controlled.</li>\n</ul>\n<hr>\n<h3 id=\"-summary--presentation-as-decision-infrastructure\" style=\"position:relative;\"><a href=\"#-summary--presentation-as-decision-infrastructure\" aria-label=\" summary  presentation as decision infrastructure permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ <strong>Summary — Presentation as Decision Infrastructure</strong></h3>\n<blockquote>\n<p><strong>“The value of telemetry is realized not when it’s collected, but when it’s understood.”</strong></p>\n</blockquote>\n<p>Riedesel’s closing insight reframes telemetry systems as <strong>decision infrastructure</strong> — the bridge between <strong>observation and action</strong>.</p>\n<p><strong>Summary Principles:</strong></p>\n<ol>\n<li><strong>Design dashboards for cognition, not decoration.</strong></li>\n<li><strong>Aggregate carefully — never hide pain behind averages.</strong></li>\n<li><strong>Validate statistical soundness</strong> — telemetry lies if misunderstood.</li>\n<li><strong>Align presentation with decisions</strong> — every graph should answer “so what?”.</li>\n<li><strong>Protect and optimize visual data</strong> — clarity, privacy, and cost all matter.</li>\n</ol>\n<blockquote>\n<p><strong>“A telemetry system’s purpose is to make invisible problems visible — and visible truths actionable.”</strong></p>\n</blockquote>\n<hr>\n<p>✅ <strong>Summary Checklist: Presentation Stage Best Practices</strong></p>\n<table>\n<thead>\n<tr>\n<th>Category</th>\n<th>Best Practice</th>\n<th>Key Insight</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Visualization</strong></td>\n<td>Use Grafana/Kibana with consistent design patterns</td>\n<td><em>“Dashboards explain, not impress.”</em></td>\n</tr>\n<tr>\n<td><strong>Aggregation</strong></td>\n<td>Favor percentiles and context-based grouping</td>\n<td><em>“Averages comfort, percentiles reveal.”</em></td>\n</tr>\n<tr>\n<td><strong>Statistical Integrity</strong></td>\n<td>Avoid bias, validate sampling, and ensure causality</td>\n<td><em>“Telemetry shows what’s observable, not everything.”</em></td>\n</tr>\n<tr>\n<td><strong>Decision Alignment</strong></td>\n<td>Tailor dashboards to user roles and goals</td>\n<td><em>“When telemetry informs action, it fulfills its purpose.”</em></td>\n</tr>\n<tr>\n<td><strong>Governance &#x26; Security</strong></td>\n<td>Control dashboard access, anonymize sensitive data</td>\n<td><em>“Every pixel you show has a cost.”</em></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h1 id=\"quotes\" style=\"position:relative;\"><a href=\"#quotes\" aria-label=\"quotes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Quotes</h1>\n<h1 id=\"references\" style=\"position:relative;\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References</h1>","frontmatter":{"title":"Software Telemetry by Jamie Riedesel summary","date":"October 10, 2025","description":"Software Telemetry by Jamie Riedesel summary"}},"previous":{"fields":{"slug":"/alberta-communities-research/"},"frontmatter":{"title":"alberta communities research"}},"next":null},"pageContext":{"id":"9e25c639-a265-5d66-a174-1bd30b5708a4","previousPostId":"4905164d-d2e5-5564-8ca5-354c50df695f","nextPostId":null}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}