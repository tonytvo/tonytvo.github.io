{"componentChunkName":"component---src-templates-blog-post-js","path":"/software-telemetry/","result":{"data":{"site":{"siteMetadata":{"title":"Conversations on agile technical practices and investments","disqus":{"shortName":"trungvo"}}},"markdownRemark":{"id":"9e25c639-a265-5d66-a174-1bd30b5708a4","excerpt":"Excellent — let’s expand Part 1 – Telemetry System Architecture (Chapter 1: Introduction) from Software Telemetry by Jamie Riedesel in rich, detailed form with…","html":"<p>Excellent — let’s expand <strong>Part 1 – Telemetry System Architecture (Chapter 1: Introduction)</strong> from <em>Software Telemetry</em> by <strong>Jamie Riedesel</strong> in rich, detailed form with <strong>bolded key phrases</strong>, contextual explanations, and practical insights, as you requested.</p>\n<hr>\n<h1 id=\"-telemetry-system-architecture\" style=\"position:relative;\"><a href=\"#-telemetry-system-architecture\" aria-label=\" telemetry system architecture permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧱 <strong>Telemetry System Architecture</strong></h1>\n<h2 id=\"-focus\" style=\"position:relative;\"><a href=\"#-focus\" aria-label=\" focus permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 <strong>Focus:</strong></h2>\n<p>This part of the book establishes the <strong>conceptual foundation</strong> of all telemetry systems — explaining how <strong>telemetry underpins decision-making</strong> in software systems by converting raw operational data into <strong>actionable insight</strong>.</p>\n<p>Riedesel emphasizes that <strong>telemetry is not just monitoring</strong>:</p>\n<blockquote>\n<p><strong>“Telemetry is the art and science of collecting, transporting, and interpreting operational data so humans and machines can make better decisions.”</strong></p>\n</blockquote>\n<p>It spans everything from <strong>low-level system metrics</strong> (CPU, memory, disk I/O) to <strong>business outcomes</strong> (user conversion rates, revenue per second), forming the <strong>nervous system</strong> of modern software.</p>\n<hr>\n<h2 id=\"-introduction\" style=\"position:relative;\"><a href=\"#-introduction\" aria-label=\" introduction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📘 <strong>Introduction</strong></h2>\n<h3 id=\"-1-what-is-telemetry\" style=\"position:relative;\"><a href=\"#-1-what-is-telemetry\" aria-label=\" 1 what is telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 1. What Is Telemetry?</h3>\n<ul>\n<li><strong>Telemetry</strong> originates from aerospace and industrial systems, meaning <strong>“measurement at a distance.”</strong></li>\n<li>In software, it refers to <strong>automated, continuous collection of operational data</strong> about code, infrastructure, and user interactions.</li>\n<li>The goal: enable teams to <strong>observe, diagnose, and improve systems</strong> without manual intervention or guesswork.</li>\n</ul>\n<p>Riedesel writes:</p>\n<blockquote>\n<p><strong>“Every decision your organization makes about software operations is either supported or hindered by the quality of your telemetry.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"️-2-the-four-styles-of-telemetry\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-2-the-four-styles-of-telemetry\" aria-label=\"️ 2 the four styles of telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚙️ 2. The Four Styles of Telemetry</h3>\n<p>Riedesel identifies <strong>four major styles</strong>, each addressing a distinct layer of system observability:</p>\n<ol>\n<li>\n<h4 id=\"centralized-logging\" style=\"position:relative;\"><a href=\"#centralized-logging\" aria-label=\"centralized logging permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Centralized Logging</strong></h4>\n<ul>\n<li>\n<p>The most familiar form — <strong>aggregating logs from many systems</strong> into a central store (e.g., Elasticsearch, Splunk, CloudWatch Logs).</p>\n</li>\n<li>\n<p>Provides <strong>contextual event history</strong>, essential for debugging and auditing.</p>\n</li>\n<li>\n<p>Best suited for <strong>qualitative analysis</strong> — “What happened?” or “Why did this fail?”</p>\n</li>\n<li>\n<p>Key challenge: <strong>log volume explosion</strong> and <strong>unstructured formats</strong> leading to storage and parsing overhead.</p>\n</li>\n</ul>\n<blockquote>\n<p><strong>“Logs tell stories — but if everyone writes in a different language, your telemetry system becomes a Tower of Babel.”</strong></p>\n</blockquote>\n</li>\n<li>\n<h4 id=\"metrics\" style=\"position:relative;\"><a href=\"#metrics\" aria-label=\"metrics permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Metrics</strong></h4>\n<ul>\n<li>\n<p>Numeric, time-series data about system performance: <strong>request latency, error rates, CPU usage, queue lengths, etc.</strong></p>\n</li>\n<li>\n<p>Enables <strong>quantitative analysis</strong> — “How fast?”, “How much?”, “How often?”</p>\n</li>\n<li>\n<p>Supports <strong>alerting</strong> and <strong>capacity planning</strong>, and feeds into tools like <strong>Prometheus</strong>, <strong>Datadog</strong>, or <strong>InfluxDB</strong>.</p>\n</li>\n<li>\n<p>The emphasis is on <strong>low cardinality and statistical clarity</strong>, since metrics are designed for aggregation and trend detection.</p>\n</li>\n<li>\n<p>Riedesel:</p>\n<blockquote>\n<p><strong>“Metrics show health at a glance — they’re your system’s vital signs.”</strong></p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>\n<h4 id=\"distributed-tracing\" style=\"position:relative;\"><a href=\"#distributed-tracing\" aria-label=\"distributed tracing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Distributed Tracing</strong></h4>\n<ul>\n<li>\n<p>Focused on <strong>understanding request flow across services</strong>, particularly in microservice architectures.</p>\n</li>\n<li>\n<p>A trace represents the <strong>end-to-end journey of a single transaction</strong>, often through dozens of services.</p>\n</li>\n<li>\n<p>Provides <strong>causal context</strong> and exposes latency bottlenecks or dependency failures.</p>\n</li>\n<li>\n<p>Common tools: <strong>Jaeger</strong>, <strong>Zipkin</strong>, <strong>Honeycomb</strong>, <strong>OpenTelemetry Tracing</strong>.</p>\n</li>\n<li>\n<p>Key insight:</p>\n<blockquote>\n<p><strong>“Traces are the connective tissue that link logs and metrics into a coherent picture of user experience.”</strong></p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>\n<h4 id=\"siem-security-information-and-event-management\" style=\"position:relative;\"><a href=\"#siem-security-information-and-event-management\" aria-label=\"siem security information and event management permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>SIEM (Security Information and Event Management)</strong></h4>\n<ul>\n<li>\n<p>Originally from the <strong>security operations world</strong>, but increasingly integrated into software observability.</p>\n</li>\n<li>\n<p>Collects, correlates, and analyzes security events — logins, privilege escalations, file access, API misuse, etc.</p>\n</li>\n<li>\n<p>Used to <strong>detect intrusions</strong>, <strong>comply with audits</strong>, and <strong>respond to incidents</strong>.</p>\n</li>\n<li>\n<p>The author highlights that SIEM often operates <strong>parallel</strong> to engineering telemetry, but ideally should <strong>share the same data sources</strong>.</p>\n</li>\n<li>\n<p>Key warning:</p>\n<blockquote>\n<p><strong>“When security and operations collect telemetry separately, you pay twice and see half.”</strong></p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"-3-who-uses-telemetry--and-why\" style=\"position:relative;\"><a href=\"#-3-who-uses-telemetry--and-why\" aria-label=\" 3 who uses telemetry  and why permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👥 3. Who Uses Telemetry — and Why</h3>\n<p>Riedesel underscores that <strong>telemetry systems serve multiple stakeholders</strong> beyond developers:</p>\n<table>\n<thead>\n<tr>\n<th>Stakeholder</th>\n<th>Purpose</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>DevOps &#x26; SRE Teams</strong></td>\n<td>To maintain <strong>reliability, uptime, and incident response</strong>. They need <strong>real-time metrics, alerts, and traces</strong> to identify and remediate outages quickly.</td>\n</tr>\n<tr>\n<td><strong>Security &#x26; Compliance</strong></td>\n<td>To monitor for <strong>suspicious activity, audit trails, and regulatory evidence</strong>. Telemetry must support <strong>immutability, access control, and data lineage.</strong></td>\n</tr>\n<tr>\n<td><strong>Customer Support</strong></td>\n<td>Uses telemetry to <strong>reproduce customer issues</strong>, validate bug reports, and monitor <strong>service-level agreements (SLAs)</strong>.</td>\n</tr>\n<tr>\n<td><strong>Business Intelligence (BI)</strong></td>\n<td>Leverages telemetry to <strong>correlate system behavior with business outcomes</strong>, such as user engagement or transaction volume.</td>\n</tr>\n</tbody>\n</table>\n<p>The book’s central idea:</p>\n<blockquote>\n<p><strong>“A well-designed telemetry system speaks all these dialects fluently.”</strong></p>\n</blockquote>\n<p>This means the same underlying pipeline can feed <strong>Grafana dashboards</strong>, <strong>security alerts</strong>, and <strong>business KPIs</strong> — if structured correctly.</p>\n<hr>\n<h3 id=\"️-4-common-challenges\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-4-common-challenges\" aria-label=\"️ 4 common challenges permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚠️ 4. Common Challenges</h3>\n<p>The introduction closes by confronting <strong>why telemetry often fails in real-world organizations</strong>, even though it’s so essential.</p>\n<ol>\n<li>\n<p><strong>Underinvestment and Neglect</strong></p>\n<ul>\n<li>\n<p>Telemetry is <strong>“invisible until it breaks”</strong>, leading to chronic underfunding.</p>\n</li>\n<li>\n<p>Riedesel warns:</p>\n<blockquote>\n<p><strong>“Organizations treat telemetry as plumbing, not infrastructure — until the leak floods the house.”</strong></p>\n</blockquote>\n</li>\n<li>\n<p>Result: reactive firefighting, missing context during incidents, poor data quality.</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Lack of Standardization</strong></p>\n<ul>\n<li>Inconsistent event formats, naming conventions, or timestamp handling cause fragmentation.</li>\n<li>Teams build parallel telemetry stacks that <strong>cannot interoperate</strong>, increasing cost and cognitive load.</li>\n<li>Remedy: adopt <strong>common schemas</strong> and <strong>shared context identifiers</strong> (like correlation IDs or trace IDs).</li>\n</ul>\n</li>\n<li>\n<p><strong>Data Leaks and Toxic Telemetry</strong></p>\n<ul>\n<li>\n<p>Many systems inadvertently log <strong>sensitive data</strong> (PII, credentials, financial information).</p>\n</li>\n<li>\n<p>This creates <strong>security, privacy, and compliance liabilities</strong>.</p>\n</li>\n<li>\n<p>Later chapters discuss <strong>redaction pipelines</strong> and <strong>telemetry classification frameworks</strong>.</p>\n</li>\n<li>\n<p>Quote:</p>\n<blockquote>\n<p><strong>“Telemetry can betray you if it captures what it shouldn’t — and keeps it longer than it should.”</strong></p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Legal and Regulatory Disruptions</strong></p>\n<ul>\n<li>With GDPR, CCPA, and similar laws, telemetry systems are now subject to <strong>the same scrutiny as customer databases</strong>.</li>\n<li>Retention policies, data residency, and right-to-erasure requests directly affect design choices.</li>\n<li>Example: an innocuous log containing IP addresses can be considered <strong>personal data</strong> under GDPR.</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"-5-chapter-summary--core-mindset\" style=\"position:relative;\"><a href=\"#-5-chapter-summary--core-mindset\" aria-label=\" 5 chapter summary  core mindset permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧠 5. Chapter Summary — Core Mindset</h3>\n<p>The introduction sets the mental model for the rest of the book:</p>\n<ul>\n<li>Think of telemetry as a <strong>living ecosystem</strong>, not a static product.</li>\n<li>Design pipelines that are <strong>observable, auditable, and evolvable</strong>.</li>\n<li>Treat telemetry as a <strong>first-class citizen</strong> of your system’s architecture — on par with APIs, databases, and CI/CD pipelines.</li>\n</ul>\n<blockquote>\n<p><strong>“Telemetry is both mirror and microscope — it reflects what your system does and reveals what you didn’t know.”</strong></p>\n</blockquote>\n<hr>\n<h2 id=\"️-emitting-stage-creating-and-submitting-telemetry\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-emitting-stage-creating-and-submitting-telemetry\" aria-label=\"️ emitting stage creating and submitting telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚙️ <strong>Emitting Stage: Creating and Submitting Telemetry</strong></h2>\n<h3 id=\"-purpose-of-the-emitting-stage\" style=\"position:relative;\"><a href=\"#-purpose-of-the-emitting-stage\" aria-label=\" purpose of the emitting stage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 <strong>Purpose of the Emitting Stage</strong></h3>\n<p>Riedesel opens this chapter by defining <strong>“emission”</strong> as the <strong>birthplace of all telemetry data</strong> — the point where <strong>systems, code, or services</strong> first produce raw information about what’s happening.</p>\n<blockquote>\n<p><strong>“Emission is where the data begins its life. If this stage is noisy, inconsistent, or incomplete, everything downstream inherits that flaw.”</strong></p>\n</blockquote>\n<p>This is the <strong>foundation layer</strong> of the entire telemetry pipeline. Every log line, metric point, or event captured later originates from <strong>emitters</strong> — whether that’s a web server, a sensor, a cloud service, or an API gateway.</p>\n<p>Riedesel emphasizes that:</p>\n<blockquote>\n<p><strong>“A telemetry system is only as trustworthy as its emitters.”</strong></p>\n</blockquote>\n<p>Even the best visualization and analysis tools cannot fix <strong>badly structured, uncorrelated, or incomplete emissions</strong>.</p>\n<hr>\n<h3 id=\"-1-major-sources-of-telemetry\" style=\"position:relative;\"><a href=\"#-1-major-sources-of-telemetry\" aria-label=\" 1 major sources of telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 <strong>1. Major Sources of Telemetry</strong></h3>\n<p>The author divides telemetry sources into <strong>three main families</strong>, each with its own emission model, reliability concerns, and legal considerations.</p>\n<h4 id=\"a-production-code\" style=\"position:relative;\"><a href=\"#a-production-code\" aria-label=\"a production code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(a) <strong>Production Code</strong></h4>\n<ul>\n<li>\n<p>The most <strong>common and controllable source</strong> of telemetry.</p>\n</li>\n<li>\n<p>Developers insert <strong>logging, tracing, and metrics instrumentation</strong> directly into application code.</p>\n</li>\n<li>\n<p>Examples:</p>\n<ul>\n<li><code class=\"language-text\">logger.info(\"User login successful\", user_id=...)</code></li>\n<li><code class=\"language-text\">statsd.increment(\"checkout.completed\")</code></li>\n<li><code class=\"language-text\">trace.start_span(\"database.query\")</code></li>\n</ul>\n</li>\n<li>\n<p>Purpose: capture <strong>application-level insights</strong> (business events, user actions, error conditions).</p>\n</li>\n<li>\n<p>Emphasis: use <strong>structured, semantic logs</strong> instead of ad-hoc text.</p>\n</li>\n</ul>\n<p>Riedesel’s warning:</p>\n<blockquote>\n<p><strong>“If your logs require grep, you’ve already lost half the battle.”</strong></p>\n</blockquote>\n<p>Structured emission (e.g., JSON logs) allows automation, parsing, and analytics — while unstructured logs create brittle regex filters later in the pipeline.</p>\n<h4 id=\"b-hardware-devices\" style=\"position:relative;\"><a href=\"#b-hardware-devices\" aria-label=\"b hardware devices permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(b) <strong>Hardware Devices</strong></h4>\n<ul>\n<li>\n<p>Network devices, routers, switches, and IoT sensors emit telemetry via <strong>standardized protocols</strong>.</p>\n</li>\n<li>\n<p>The most common example: <strong>SNMP (Simple Network Management Protocol)</strong>.</p>\n<ul>\n<li>Used by <strong>Cisco, Juniper, HP</strong>, and most network vendors.</li>\n<li>Emits status information like port errors, bandwidth usage, temperature, and voltage.</li>\n</ul>\n</li>\n<li>\n<p>Hardware telemetry is often <strong>event-driven</strong> or <strong>poll-based</strong> — meaning the monitoring system queries for data at intervals.</p>\n</li>\n<li>\n<p>Problems arise when <strong>SNMP traps</strong> flood systems during outages — “the storm of events when things fail.”</p>\n</li>\n</ul>\n<p>Quote:</p>\n<blockquote>\n<p><strong>“Hardware telemetry speaks the oldest dialect — terse, numeric, and cryptic — but it still tells critical truths about the health of the foundation.”</strong></p>\n</blockquote>\n<h4 id=\"c-saas-and-iaas-systems\" style=\"position:relative;\"><a href=\"#c-saas-and-iaas-systems\" aria-label=\"c saas and iaas systems permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(c) <strong>SaaS and IaaS Systems</strong></h4>\n<ul>\n<li>\n<p>In the cloud era, much telemetry originates from <strong>external services</strong> you don’t fully control.</p>\n</li>\n<li>\n<p>Examples:</p>\n<ul>\n<li>AWS CloudWatch events</li>\n<li>GCP Stackdriver logs</li>\n<li>Azure Monitor metrics</li>\n<li>Stripe, Twilio, or GitHub webhook events</li>\n</ul>\n</li>\n<li>\n<p>These systems often emit telemetry via <strong>HTTP event streams, JSON APIs, or audit logs</strong>.</p>\n</li>\n<li>\n<p>Integration challenge: <strong>normalize foreign schemas</strong> and <strong>timestamps</strong> to fit your unified telemetry model.</p>\n</li>\n</ul>\n<p>Riedesel notes:</p>\n<blockquote>\n<p><strong>“Your telemetry doesn’t stop at your servers anymore. Every SaaS product your business depends on is now part of your observability surface.”</strong></p>\n</blockquote>\n<p>This means telemetry design must consider <strong>external integrations, rate limits, and API schema drift</strong>.</p>\n<hr>\n<h3 id=\"-2-methods-of-emission\" style=\"position:relative;\"><a href=\"#-2-methods-of-emission\" aria-label=\" 2 methods of emission permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔄 <strong>2. Methods of Emission</strong></h3>\n<p>After identifying sources, Riedesel describes <strong>common emission methods</strong>, mapping each to real-world use cases.</p>\n<h4 id=\"1-log-files\" style=\"position:relative;\"><a href=\"#1-log-files\" aria-label=\"1 log files permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(1) Log Files</strong></h4>\n<ul>\n<li>\n<p>Traditional method: applications write events to files on disk (<code class=\"language-text\">/var/log/...</code>).</p>\n</li>\n<li>\n<p>Advantages: easy to implement, human-readable, durable.</p>\n</li>\n<li>\n<p>Disadvantages: difficult for <strong>containerized or ephemeral systems</strong>, since log files vanish when the container dies.</p>\n</li>\n<li>\n<p>Modern guidance:</p>\n<blockquote>\n<p><strong>“Logs should go to streams, not disks — because disks are pets, streams are cattle.”</strong></p>\n</blockquote>\n</li>\n</ul>\n<p>Hence, newer architectures redirect logs to <strong>stdout/stderr</strong>, enabling collection by sidecar agents (Fluentd, Logstash, etc.).</p>\n<h4 id=\"2-system-logs\" style=\"position:relative;\"><a href=\"#2-system-logs\" aria-label=\"2 system logs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(2) System Logs</strong></h4>\n<ul>\n<li>OS-level telemetry like <strong>syslog</strong>, <strong>journalctl</strong>, or <strong>event logs</strong>.</li>\n<li>These often capture <strong>kernel, network, authentication, and daemon messages</strong>.</li>\n<li>They provide context that application logs alone can’t (e.g., hardware errors, restarts).</li>\n<li>The book encourages integrating these with application telemetry for <strong>complete incident timelines</strong>.</li>\n</ul>\n<blockquote>\n<p><strong>“System logs are your black box recorder — they capture what your app didn’t notice.”</strong></p>\n</blockquote>\n<h4 id=\"3-standard-output-streams\" style=\"position:relative;\"><a href=\"#3-standard-output-streams\" aria-label=\"3 standard output streams permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(3) Standard Output Streams</strong></h4>\n<ul>\n<li>Common in <strong>cloud-native</strong> environments such as Kubernetes or AWS Lambda.</li>\n<li>Instead of writing to disk, applications write logs to <strong>stdout</strong>.</li>\n<li>Log collectors (sidecars, daemons, or host agents) then stream this output to central systems.</li>\n<li>This avoids file permission issues, supports auto-scaling, and simplifies container lifecycle management.</li>\n<li>Example: Docker captures stdout and sends it to the logging driver (Fluentd, Loki, etc.).</li>\n</ul>\n<p>Riedesel emphasizes:</p>\n<blockquote>\n<p><strong>“Emitters in a stateless world must speak over ephemeral channels.”</strong></p>\n</blockquote>\n<h4 id=\"4-snmp-and-device-telemetry\" style=\"position:relative;\"><a href=\"#4-snmp-and-device-telemetry\" aria-label=\"4 snmp and device telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(4) SNMP and Device Telemetry</strong></h4>\n<ul>\n<li>As mentioned, SNMP traps and polls remain the backbone for physical device telemetry.</li>\n<li>SNMPv3 introduced encryption and authentication, addressing prior risks of <strong>plain-text community strings</strong>.</li>\n<li>Still, hardware telemetry must be <strong>rate-limited</strong> and <strong>filtered</strong>, since storms of events can overwhelm ingest pipelines.</li>\n</ul>\n<h4 id=\"5-saas-and-iaas-event-streams\" style=\"position:relative;\"><a href=\"#5-saas-and-iaas-event-streams\" aria-label=\"5 saas and iaas event streams permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(5) SaaS and IaaS Event Streams</strong></h4>\n<ul>\n<li>\n<p>Modern SaaS platforms expose <strong>event hooks</strong>, <strong>audit APIs</strong>, or <strong>change streams</strong>.</p>\n</li>\n<li>\n<p>Examples:</p>\n<ul>\n<li><strong>AWS CloudTrail</strong> → records API activity.</li>\n<li><strong>GitHub Audit Log</strong> → developer behavior telemetry.</li>\n<li><strong>Okta or GSuite logs</strong> → identity and access telemetry.</li>\n</ul>\n</li>\n<li>\n<p>Integration pattern:</p>\n<ul>\n<li>Use <strong>webhooks</strong> or <strong>scheduled API polling</strong>.</li>\n<li>Ingest via an <strong>event collector microservice</strong> or message queue.</li>\n<li>Apply <strong>schema normalization</strong> before storage.</li>\n</ul>\n</li>\n</ul>\n<p>Riedesel highlights:</p>\n<blockquote>\n<p><strong>“Every vendor speaks a different dialect of JSON — your telemetry platform must be multilingual.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-3-key-concept-markup-and-formatting\" style=\"position:relative;\"><a href=\"#-3-key-concept-markup-and-formatting\" aria-label=\" 3 key concept markup and formatting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧠 <strong>3. Key Concept: “Markup” and “Formatting”</strong></h3>\n<p>This section is one of the chapter’s most critical and nuanced discussions. Riedesel introduces <strong>markup</strong> and <strong>formatting</strong> as the <strong>hidden architecture</strong> of successful telemetry emission.</p>\n<blockquote>\n<p><strong>“How you format your telemetry determines how expensive it will be to process, store, and understand — forever.”</strong></p>\n</blockquote>\n<h4 id=\"a-markup--structural-context\" style=\"position:relative;\"><a href=\"#a-markup--structural-context\" aria-label=\"a markup  structural context permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) Markup = Structural Context</strong></h4>\n<ul>\n<li>\n<p>Markup refers to <strong>embedding structure or metadata</strong> into telemetry events.</p>\n</li>\n<li>\n<p>Examples:</p>\n<ul>\n<li>Adding fields like <code class=\"language-text\">service_name</code>, <code class=\"language-text\">environment</code>, <code class=\"language-text\">region</code>, <code class=\"language-text\">trace_id</code>, <code class=\"language-text\">severity</code>, <code class=\"language-text\">user_id</code>.</li>\n<li>Encoding events in <strong>JSON</strong>, <strong>Protocol Buffers</strong>, or <strong>structured key-value pairs</strong>.</li>\n</ul>\n</li>\n<li>\n<p>Purpose:</p>\n<ul>\n<li>Enables <strong>machine parsing</strong>.</li>\n<li>Preserves <strong>contextual meaning</strong> (who, what, where, when).</li>\n<li>Allows correlation across systems (e.g., linking user activity to backend traces).</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p><strong>“Good markup is like a passport — it lets your telemetry cross system borders without losing its identity.”</strong></p>\n</blockquote>\n<h4 id=\"b-formatting--syntax-consistency\" style=\"position:relative;\"><a href=\"#b-formatting--syntax-consistency\" aria-label=\"b formatting  syntax consistency permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Formatting = Syntax Consistency</strong></h4>\n<ul>\n<li>\n<p>Formatting defines <strong>how</strong> the structured data is represented — e.g., JSON vs. plain text vs. key-value pairs.</p>\n</li>\n<li>\n<p>Consistent formatting allows:</p>\n<ul>\n<li>Simplified ingestion pipelines.</li>\n<li>Easier versioning and backward compatibility.</li>\n<li>Predictable storage and indexing.</li>\n</ul>\n</li>\n<li>\n<p>The book recommends <strong>human-readable structured formats</strong> (JSON, YAML) over binary formats, unless efficiency is critical.</p>\n</li>\n<li>\n<p>Quote:</p>\n<blockquote>\n<p><strong>“Human-readable formats cost storage; binary formats cost debugging.”</strong></p>\n</blockquote>\n</li>\n</ul>\n<h4 id=\"c-avoiding-anti-patterns\" style=\"position:relative;\"><a href=\"#c-avoiding-anti-patterns\" aria-label=\"c avoiding anti patterns permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(c) Avoiding Anti-Patterns</strong></h4>\n<ul>\n<li>\n<p>Common mistakes at the emission stage:</p>\n<ol>\n<li><strong>Over-logging</strong> – flooding telemetry with redundant or verbose data.</li>\n<li><strong>Inconsistent keys</strong> – e.g., using <code class=\"language-text\">userId</code>, <code class=\"language-text\">userid</code>, <code class=\"language-text\">User_ID</code> across services.</li>\n<li><strong>Hidden context</strong> – burying critical identifiers inside message text instead of structured fields.</li>\n<li><strong>Unescaped data</strong> – leaking raw input that breaks JSON or XML parsers.</li>\n<li><strong>Time drift</strong> – relying on system clocks without synchronization.</li>\n</ol>\n</li>\n</ul>\n<p>Riedesel cautions:</p>\n<blockquote>\n<p><strong>“You can’t fix bad markup downstream. You can only regret it.”</strong></p>\n</blockquote>\n<p>Hence, emission is where <strong>discipline and schema governance</strong> begin.</p>\n<hr>\n<h3 id=\"-4-reliability-and-security-at-the-emission-point\" style=\"position:relative;\"><a href=\"#-4-reliability-and-security-at-the-emission-point\" aria-label=\" 4 reliability and security at the emission point permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔐 <strong>4. Reliability and Security at the Emission Point</strong></h3>\n<p>Telemetry can be <strong>compromised or lost</strong> even before it leaves the emitter.</p>\n<ul>\n<li>\n<p><strong>Buffering and Backpressure</strong>\nEmitters must handle temporary network failures gracefully — through <strong>local queues or ring buffers</strong>.</p>\n<blockquote>\n<p><strong>“If emitters block on telemetry, you’re monitoring less to protect uptime — that’s a false economy.”</strong></p>\n</blockquote>\n</li>\n<li>\n<p><strong>Security and Least Privilege</strong>\nEmitters should <strong>authenticate with telemetry collectors</strong> using API keys, service accounts, or signed payloads.</p>\n<blockquote>\n<p><strong>“Telemetry should not become an attack vector; every log line is a potential leak.”</strong></p>\n</blockquote>\n</li>\n<li>\n<p><strong>Data Minimization</strong>\nAvoid logging secrets, tokens, or sensitive identifiers.\nAdopt a <strong>telemetry classification policy</strong> (public, internal, confidential).</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"-summary--emission-as-architecture\" style=\"position:relative;\"><a href=\"#-summary--emission-as-architecture\" aria-label=\" summary  emission as architecture permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 <strong>Summary — Emission as Architecture</strong></h3>\n<p>Riedesel closes with a powerful framing:</p>\n<blockquote>\n<p><strong>“The emitting stage is where you decide what your organization will ever know about its systems.”</strong></p>\n</blockquote>\n<p>That decision includes:</p>\n<ul>\n<li><strong>Which events exist or vanish forever</strong></li>\n<li><strong>How those events will be interpreted downstream</strong></li>\n<li><strong>How costly it will be to scale or audit later</strong></li>\n</ul>\n<p>She concludes:</p>\n<blockquote>\n<p><strong>“Telemetry begins at the point of emission — and that’s where reliability, legality, and observability are either born or lost.”</strong></p>\n</blockquote>\n<hr>\n<p>✅ <strong>Summary Checklist: Emitting Best Practices</strong></p>\n<table>\n<thead>\n<tr>\n<th>Principle</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Structured Emission</strong></td>\n<td>Use JSON or key-value logs instead of plain text.</td>\n</tr>\n<tr>\n<td><strong>Consistent Markup</strong></td>\n<td>Include standard fields (timestamp, service, trace_id, severity).</td>\n</tr>\n<tr>\n<td><strong>Stateless Output</strong></td>\n<td>Write to stdout for containerized environments.</td>\n</tr>\n<tr>\n<td><strong>Rate Limiting</strong></td>\n<td>Prevent emission storms (e.g., retry floods, SNMP traps).</td>\n</tr>\n<tr>\n<td><strong>Secure Transmission</strong></td>\n<td>Encrypt data, sign payloads, avoid sensitive content.</td>\n</tr>\n<tr>\n<td><strong>Error Tolerance</strong></td>\n<td>Queue locally when network or collector unavailable.</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"️-transporting-telemetry-from-emitters-to-storage\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-transporting-telemetry-from-emitters-to-storage\" aria-label=\"️ transporting telemetry from emitters to storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚙️ <strong>Transporting Telemetry from Emitters to Storage</strong></h2>\n<h3 id=\"-purpose-of-the-shipping-stage\" style=\"position:relative;\"><a href=\"#-purpose-of-the-shipping-stage\" aria-label=\" purpose of the shipping stage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 <strong>Purpose of the Shipping Stage</strong></h3>\n<p>After telemetry is <strong>emitted</strong> (created), it must be <strong>transported safely, efficiently, and predictably</strong> to a central storage or processing system.</p>\n<p>Jamie Riedesel frames this stage as the <strong>circulatory system</strong> of software telemetry:</p>\n<blockquote>\n<p><strong>“If emitters are the organs that produce telemetry, the shipping layer is the bloodstream — carrying vital information to where it can be understood.”</strong></p>\n</blockquote>\n<p>She warns:</p>\n<blockquote>\n<p><strong>“Telemetry shipping failures are invisible disasters — the system looks healthy, but you’ve gone blind.”</strong></p>\n</blockquote>\n<p>This stage decides whether <strong>data is lost, delayed, duplicated, or corrupted</strong> before reaching its destination.</p>\n<hr>\n<h3 id=\"-1-direct-vs-queued-shipping\" style=\"position:relative;\"><a href=\"#-1-direct-vs-queued-shipping\" aria-label=\" 1 direct vs queued shipping permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 <strong>1. Direct vs. Queued Shipping</strong></h3>\n<p>Telemetry can be delivered in two architectural patterns: <strong>direct</strong> or <strong>queued</strong>. Each comes with trade-offs in <strong>latency, reliability, cost, and operational complexity</strong>.</p>\n<h4 id=\"a-direct-shipping\" style=\"position:relative;\"><a href=\"#a-direct-shipping\" aria-label=\"a direct shipping permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(a) <strong>Direct Shipping</strong></h4>\n<ul>\n<li>\n<p>Emitters <strong>send telemetry straight to the destination system</strong> (e.g., Elasticsearch, Prometheus, Splunk, or a cloud collector).</p>\n</li>\n<li>\n<p>Common in <strong>small systems</strong> or <strong>serverless functions</strong> where simplicity matters more than resilience.</p>\n</li>\n<li>\n<p>Example:</p>\n<ul>\n<li>An NGINX log stream sent directly to <strong>Elasticsearch</strong>.</li>\n<li>A microservice posting metrics directly to <strong>Prometheus PushGateway</strong>.</li>\n</ul>\n</li>\n</ul>\n<p><strong>Advantages:</strong></p>\n<ul>\n<li>Simpler pipeline (fewer moving parts).</li>\n<li>Lower latency (no intermediate queue).</li>\n<li>Easier debugging (fewer hops).</li>\n</ul>\n<p><strong>Disadvantages:</strong></p>\n<ul>\n<li><strong>Backpressure risk:</strong> if the destination is overloaded, emitters may block or drop data.</li>\n<li><strong>Tight coupling:</strong> changes in the storage schema or endpoint can break emitters.</li>\n<li><strong>No replay:</strong> lost data is unrecoverable.</li>\n</ul>\n<p>Riedesel warns:</p>\n<blockquote>\n<p><strong>“Direct shipping is like driving without a seatbelt — fine until the crash.”</strong></p>\n</blockquote>\n<p>It’s acceptable for prototypes or low-volume systems, but not for <strong>production-grade telemetry</strong>.</p>\n<hr>\n<h4 id=\"b-queued-shipping\" style=\"position:relative;\"><a href=\"#b-queued-shipping\" aria-label=\"b queued shipping permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(b) <strong>Queued Shipping</strong></h4>\n<ul>\n<li>Telemetry is sent first to a <strong>buffering or queuing layer</strong> (e.g., <strong>Kafka</strong>, <strong>RabbitMQ</strong>, <strong>AWS Kinesis</strong>, <strong>Google Pub/Sub</strong>, or <strong>Fluentd</strong>).</li>\n<li>This intermediate layer <strong>decouples emitters from consumers</strong>, providing resilience, ordering, and backpressure handling.</li>\n</ul>\n<p><strong>Flow Example:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Emitters → Fluent Bit → Kafka → Logstash → Elasticsearch</code></pre></div>\n<p><strong>Advantages:</strong></p>\n<ul>\n<li><strong>Durability:</strong> queues can store messages until downstream systems recover.</li>\n<li><strong>Scalability:</strong> emitters can continue sending even during heavy load.</li>\n<li><strong>Flexibility:</strong> multiple consumers can process the same stream differently (e.g., metrics vs. security analysis).</li>\n<li><strong>Replay capability:</strong> past telemetry can be reprocessed for incident investigation or schema changes.</li>\n</ul>\n<p><strong>Disadvantages:</strong></p>\n<ul>\n<li>Added complexity (more components to operate).</li>\n<li>Higher latency (milliseconds to seconds).</li>\n<li>Potential for data duplication or out-of-order messages.</li>\n</ul>\n<p>Riedesel emphasizes:</p>\n<blockquote>\n<p><strong>“Queues turn telemetry from a fragile stream into a resilient river — but you must control the flood.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-2-backpressure-and-flow-control\" style=\"position:relative;\"><a href=\"#-2-backpressure-and-flow-control\" aria-label=\" 2 backpressure and flow control permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚦 <strong>2. Backpressure and Flow Control</strong></h3>\n<p>A crucial design theme in this chapter is <strong>backpressure</strong> — what happens when telemetry is produced faster than it can be stored or analyzed.</p>\n<ul>\n<li>Emitters can <strong>block</strong>, <strong>drop</strong>, or <strong>buffer</strong> data.</li>\n<li>Intermediate queues can <strong>fill up</strong> and cause <strong>network congestion</strong>.</li>\n<li>Overloaded collectors can <strong>throttle</strong> incoming streams.</li>\n</ul>\n<p>Riedesel’s principle:</p>\n<blockquote>\n<p><strong>“Telemetry that blocks application progress becomes a self-inflicted denial of service.”</strong></p>\n</blockquote>\n<p><strong>Best Practices:</strong></p>\n<ol>\n<li>Use <strong>asynchronous emission</strong> wherever possible.</li>\n<li>Implement <strong>bounded buffers</strong> to avoid unbounded memory growth.</li>\n<li>Employ <strong>drop policies</strong> for non-critical telemetry under load.</li>\n<li>Monitor queue depth as a <strong>first-class metric</strong> — it’s the heartbeat of your telemetry system.</li>\n</ol>\n<hr>\n<h3 id=\"️-3-shipping-between-saas-systems\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-3-shipping-between-saas-systems\" aria-label=\"️ 3 shipping between saas systems permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>☁️ <strong>3. Shipping Between SaaS Systems</strong></h3>\n<p>Modern organizations operate across multiple SaaS environments — AWS, Datadog, GitHub, Cloudflare, Okta, etc.</p>\n<p>These systems each emit <strong>telemetry-as-a-service</strong>, but <strong>interconnecting them</strong> is complex.</p>\n<p>Riedesel observes:</p>\n<blockquote>\n<p><strong>“In the cloud era, telemetry has gone federated — no single system owns the truth anymore.”</strong></p>\n</blockquote>\n<h4 id=\"challenges\" style=\"position:relative;\"><a href=\"#challenges\" aria-label=\"challenges permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Challenges:</strong></h4>\n<ul>\n<li><strong>Diverse formats:</strong> JSON schemas differ between vendors.</li>\n<li><strong>Rate limits:</strong> APIs often throttle requests.</li>\n<li><strong>Data latency:</strong> events may arrive hours after emission.</li>\n<li><strong>Security &#x26; credentials:</strong> API keys, webhooks, and IAM roles all need secure rotation.</li>\n</ul>\n<h4 id=\"integration-patterns\" style=\"position:relative;\"><a href=\"#integration-patterns\" aria-label=\"integration patterns permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Integration Patterns:</strong></h4>\n<ol>\n<li><strong>Webhook relays:</strong> immediate push of telemetry to your collector (e.g., Stripe → HTTP endpoint).</li>\n<li><strong>Scheduled API pulls:</strong> periodic retrieval (e.g., GitHub audit logs via REST).</li>\n<li><strong>Cloud-native bridges:</strong> AWS EventBridge, GCP Pub/Sub connectors.</li>\n</ol>\n<h4 id=\"best-practice\" style=\"position:relative;\"><a href=\"#best-practice\" aria-label=\"best practice permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Best Practice:</strong></h4>\n<blockquote>\n<p><strong>“Don’t build your own SaaS bridge when the vendor already offers an export stream — consume, don’t scrape.”</strong></p>\n</blockquote>\n<p>Use <strong>vendor-supported streaming APIs</strong> or <strong>ETL services</strong> (like Snowflake connectors, Datadog forwarders) to maintain reliability and schema consistency.</p>\n<hr>\n<h3 id=\"-4-tipping-points-for-architecture-change\" style=\"position:relative;\"><a href=\"#-4-tipping-points-for-architecture-change\" aria-label=\" 4 tipping points for architecture change permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧭 <strong>4. Tipping Points for Architecture Change</strong></h3>\n<p>As telemetry grows, systems reach <strong>scaling inflection points</strong> that force architectural evolution.</p>\n<p>Riedesel frames these <strong>tipping points</strong> as natural transitions every organization eventually faces:</p>\n<table>\n<thead>\n<tr>\n<th>Stage</th>\n<th>Symptoms</th>\n<th>Needed Shift</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Local Logging</strong></td>\n<td>Manual file collection, missing events</td>\n<td>Adopt centralized logging via syslog or Fluentd</td>\n</tr>\n<tr>\n<td><strong>Direct Shipping</strong></td>\n<td>Collector overload, data loss</td>\n<td>Introduce buffering (Kafka, Kinesis)</td>\n</tr>\n<tr>\n<td><strong>Buffered Shipping</strong></td>\n<td>Queue lag, cost explosion</td>\n<td>Introduce <strong>data retention policies</strong> and <strong>aggregation</strong></td>\n</tr>\n<tr>\n<td><strong>Federated Telemetry</strong></td>\n<td>Multiple SaaS systems, siloed analytics</td>\n<td>Deploy <strong>unified schema governance</strong> and <strong>cross-domain correlation IDs</strong></td>\n</tr>\n</tbody>\n</table>\n<p>She warns:</p>\n<blockquote>\n<p><strong>“Every telemetry system outgrows its first architecture — the tragedy is not noticing it until data is gone.”</strong></p>\n</blockquote>\n<hr>\n<h2 id=\"-unifying-formats-and-encoding-telemetry\" style=\"position:relative;\"><a href=\"#-unifying-formats-and-encoding-telemetry\" aria-label=\" unifying formats and encoding telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧱 <strong>Unifying Formats and Encoding Telemetry</strong></h2>\n<h3 id=\"-purpose\" style=\"position:relative;\"><a href=\"#-purpose\" aria-label=\" purpose permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 <strong>Purpose</strong></h3>\n<p>Once telemetry reaches the collector, it must be <strong>normalized, encoded, and made uniform</strong> so it can be indexed, visualized, and correlated across systems.</p>\n<p>Riedesel introduces this chapter with a central idea:</p>\n<blockquote>\n<p><strong>“Telemetry that cannot be unified cannot be trusted.”</strong></p>\n</blockquote>\n<p>Even if data is collected flawlessly, <strong>inconsistent encoding or schema mismatch</strong> makes it impossible to query effectively or perform cross-system analytics.</p>\n<hr>\n<h3 id=\"-1-the-problem-of-format-fragmentation\" style=\"position:relative;\"><a href=\"#-1-the-problem-of-format-fragmentation\" aria-label=\" 1 the problem of format fragmentation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔄 <strong>1. The Problem of Format Fragmentation</strong></h3>\n<p>Every emitter speaks its own dialect:</p>\n<ul>\n<li>One app writes <strong>plain text logs</strong></li>\n<li>Another emits <strong>JSON</strong></li>\n<li>A third sends <strong>Syslog-formatted lines</strong></li>\n<li>A SaaS product sends <strong>nested JSON objects</strong></li>\n</ul>\n<p>Result:</p>\n<blockquote>\n<p><strong>“Without translation, your telemetry warehouse becomes a Babel tower of half-truths.”</strong></p>\n</blockquote>\n<p>Thus, the <strong>unifying stage</strong> converts all formats into a <strong>normalized schema</strong> for storage.</p>\n<hr>\n<h3 id=\"️-2-converting-between-syslog-json-and-object-encodings\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-2-converting-between-syslog-json-and-object-encodings\" aria-label=\"️ 2 converting between syslog json and object encodings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚙️ <strong>2. Converting Between Syslog, JSON, and Object Encodings</strong></h3>\n<p>Riedesel presents practical examples of how telemetry data transforms across formats:</p>\n<h4 id=\"a-syslog--json\" style=\"position:relative;\"><a href=\"#a-syslog--json\" aria-label=\"a syslog  json permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(a) <strong>Syslog → JSON</strong></h4>\n<ul>\n<li>Syslog is a legacy standard for event messages in networked systems.</li>\n<li>Contains a <strong>priority</strong>, <strong>timestamp</strong>, <strong>hostname</strong>, <strong>process name</strong>, and <strong>message</strong>.</li>\n<li>However, the “message” part is often unstructured text.</li>\n</ul>\n<p>To make it machine-readable, we wrap it in JSON or extract key fields:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;34>1 2024-01-01T12:00:00Z web01 nginx[123]: request_path=/home status=200</code></pre></div>\n<p>➡️</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"timestamp\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2024-01-01T12:00:00Z\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"host\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"web01\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"app\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"nginx\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"request_path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/home\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"status\"</span><span class=\"token operator\">:</span> <span class=\"token number\">200</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p><strong>“Translating Syslog to structured JSON is the single most powerful upgrade a telemetry pipeline can make.”</strong></p>\n</blockquote>\n<h4 id=\"b-json--object-encodings\" style=\"position:relative;\"><a href=\"#b-json--object-encodings\" aria-label=\"b json  object encodings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(b) <strong>JSON → Object Encodings</strong></h4>\n<ul>\n<li>JSON is widely supported but inefficient for <strong>high-volume metrics</strong>.</li>\n<li>Alternatives: <strong>Protocol Buffers</strong>, <strong>Avro</strong>, or <strong>MessagePack</strong> — more compact and schema-driven.</li>\n<li>These enable <strong>binary serialization</strong>, saving bandwidth and storage at scale.</li>\n</ul>\n<p>Riedesel cautions:</p>\n<blockquote>\n<p><strong>“Choose binary formats for machines, not for humans — you can’t grep a protobuf.”</strong></p>\n</blockquote>\n<p>She suggests a <strong>hybrid approach</strong>:</p>\n<ul>\n<li>Use JSON for ingestion and debugging.</li>\n<li>Convert to binary encodings for long-term archival or analytics.</li>\n</ul>\n<hr>\n<h3 id=\"-3-schema-governance-and-field-consistency\" style=\"position:relative;\"><a href=\"#-3-schema-governance-and-field-consistency\" aria-label=\" 3 schema governance and field consistency permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 <strong>3. Schema Governance and Field Consistency</strong></h3>\n<p>Beyond syntax, <strong>semantic alignment</strong> is essential:</p>\n<ul>\n<li>Standardize field names: always use <code class=\"language-text\">service</code>, not <code class=\"language-text\">svc_name</code> or <code class=\"language-text\">app_name</code>.</li>\n<li>Enforce timestamp formats (e.g., <strong>ISO 8601 in UTC</strong>).</li>\n<li>Maintain <strong>type discipline</strong> — don’t let <code class=\"language-text\">user_id</code> be a string in one service and an integer in another.</li>\n</ul>\n<blockquote>\n<p><strong>“A telemetry schema is a contract between your systems and your sanity.”</strong></p>\n</blockquote>\n<p>To enforce this, organizations adopt:</p>\n<ul>\n<li><strong>OpenTelemetry semantic conventions</strong></li>\n<li><strong>JSON schema validation pipelines</strong></li>\n<li><strong>CI/CD schema linting tools</strong></li>\n</ul>\n<hr>\n<h3 id=\"-4-designing-for-cardinality-scalability\" style=\"position:relative;\"><a href=\"#-4-designing-for-cardinality-scalability\" aria-label=\" 4 designing for cardinality scalability permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📊 <strong>4. Designing for Cardinality Scalability</strong></h3>\n<p>Perhaps the most important section in this chapter deals with <strong>cardinality</strong> — the number of unique combinations of metric labels.</p>\n<h4 id=\"what-is-cardinality\" style=\"position:relative;\"><a href=\"#what-is-cardinality\" aria-label=\"what is cardinality permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>What is Cardinality?</strong></h4>\n<ul>\n<li>A metric with labels (e.g., <code class=\"language-text\">requests_total{region=\"us-east\", user_id=\"12345\"}</code>) has high cardinality if <strong>too many unique label values exist</strong>.</li>\n<li>Each unique combination creates a <strong>new time-series</strong> in systems like Prometheus.</li>\n</ul>\n<p>Riedesel explains:</p>\n<blockquote>\n<p><strong>“Cardinality is the hidden tax of telemetry — you pay it in memory, CPU, and time.”</strong></p>\n</blockquote>\n<h4 id=\"symptoms-of-cardinality-explosion\" style=\"position:relative;\"><a href=\"#symptoms-of-cardinality-explosion\" aria-label=\"symptoms of cardinality explosion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Symptoms of Cardinality Explosion</strong></h4>\n<ul>\n<li>Prometheus OOMs or slows down.</li>\n<li>Dashboards become sluggish.</li>\n<li>Query engines timeout.</li>\n<li>Costs skyrocket for hosted monitoring.</li>\n</ul>\n<h4 id=\"best-practices\" style=\"position:relative;\"><a href=\"#best-practices\" aria-label=\"best practices permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Best Practices</strong></h4>\n<ol>\n<li><strong>Avoid user-specific labels</strong> (e.g., <code class=\"language-text\">user_id</code>, <code class=\"language-text\">session_id</code>).</li>\n<li><strong>Bucketize values</strong> (e.g., latency buckets instead of per-request times).</li>\n<li><strong>Aggregate early</strong> (e.g., sum per-region, not per-instance).</li>\n<li><strong>Implement cardinality budgets</strong> — define acceptable series counts per service.</li>\n</ol>\n<blockquote>\n<p><strong>“Every new label combination should earn its keep — if you can’t justify it, remove it.”</strong></p>\n</blockquote>\n<p>She also stresses <strong>instrumentation discipline</strong>:</p>\n<ul>\n<li>Developers should understand that adding a single new label can multiply storage costs.</li>\n<li>Create <strong>shared review processes</strong> for new metrics.</li>\n</ul>\n<h4 id=\"rule-of-thumb\" style=\"position:relative;\"><a href=\"#rule-of-thumb\" aria-label=\"rule of thumb permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Rule of Thumb:</strong></h4>\n<blockquote>\n<p><strong>“A telemetry system dies not from too little data, but from too much uniqueness.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-5-end-to-end-encoding-pipeline-example\" style=\"position:relative;\"><a href=\"#-5-end-to-end-encoding-pipeline-example\" aria-label=\" 5 end to end encoding pipeline example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📦 <strong>5. End-to-End Encoding Pipeline Example</strong></h3>\n<p>Riedesel outlines a realistic data path combining both chapters’ ideas:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Emitters (Apps, Devices, SaaS)\n   ↓\nFluent Bit Agents\n   ↓\nKafka Topics (JSON)\n   ↓\nLogstash Processors\n   ↓\nElasticsearch (normalized JSON)\n   ↓\nData Warehouse / SIEM (binary compressed objects)</code></pre></div>\n<p>Each step either <strong>translates</strong> (e.g., Syslog → JSON) or <strong>reformats</strong> (JSON → Protobuf), balancing <strong>human readability</strong> with <strong>machine efficiency</strong>.</p>\n<hr>\n<h3 id=\"-summary--unification-is-understanding\" style=\"position:relative;\"><a href=\"#-summary--unification-is-understanding\" aria-label=\" summary  unification is understanding permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧠 <strong>Summary — “Unification Is Understanding”</strong></h3>\n<blockquote>\n<p><strong>“You can’t correlate what you can’t normalize.”</strong></p>\n</blockquote>\n<p>In Riedesel’s framework, <strong>unifying formats and controlling cardinality</strong> are what transform telemetry from <em>data</em> into <em>knowledge</em>.</p>\n<p>Without schema governance, telemetry becomes noise.\nWithout cardinality discipline, it becomes cost.</p>\n<p>The ultimate design goal:</p>\n<blockquote>\n<p><strong>“Emit structured data, ship it safely, unify it consistently, and scale it responsibly — that’s the architecture of trustworthy telemetry.”</strong></p>\n</blockquote>\n<hr>\n<p>✅ <strong>Summary Checklist: Shipping + Encoding Best Practices</strong></p>\n<table>\n<thead>\n<tr>\n<th>Principle</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Use Queues</strong></td>\n<td>Always buffer between emitters and storage to handle spikes and outages.</td>\n</tr>\n<tr>\n<td><strong>Monitor Queue Depth</strong></td>\n<td>Treat backlog as a leading indicator of telemetry health.</td>\n</tr>\n<tr>\n<td><strong>Normalize Formats Early</strong></td>\n<td>Convert Syslog/plaintext to structured JSON at ingestion.</td>\n</tr>\n<tr>\n<td><strong>Govern Schemas</strong></td>\n<td>Enforce consistent field names and data types.</td>\n</tr>\n<tr>\n<td><strong>Control Cardinality</strong></td>\n<td>Eliminate unnecessary metric labels and aggregate early.</td>\n</tr>\n<tr>\n<td><strong>Plan Architecture Transitions</strong></td>\n<td>Watch for tipping points as data volume or team count grows.</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"-presentation-stage-visualizing-and-aggregating-telemetry\" style=\"position:relative;\"><a href=\"#-presentation-stage-visualizing-and-aggregating-telemetry\" aria-label=\" presentation stage visualizing and aggregating telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📊 <strong>Presentation Stage: Visualizing and Aggregating Telemetry</strong></h2>\n<h3 id=\"-purpose-of-the-presentation-stage\" style=\"position:relative;\"><a href=\"#-purpose-of-the-presentation-stage\" aria-label=\" purpose of the presentation stage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 <strong>Purpose of the Presentation Stage</strong></h3>\n<p>In previous chapters, Riedesel covered the <strong>emission</strong> (creation) and <strong>shipping</strong> (transport) of telemetry data. Now, she focuses on what she calls <strong>“the final mile”</strong> — the stage where data <strong>meets human cognition</strong>.</p>\n<blockquote>\n<p><strong>“The presentation stage is where telemetry leaves the machine world and enters the human world.”</strong></p>\n</blockquote>\n<p>At this point, the system’s success depends not just on performance or schema — but on <strong>how clearly people can interpret what’s shown</strong>.</p>\n<p>The author makes an essential distinction:</p>\n<blockquote>\n<p><strong>“Raw telemetry tells you what happened. Presentation tells you what it means.”</strong></p>\n</blockquote>\n<p>This chapter is not just about pretty dashboards — it’s about <strong>transforming telemetry into decision support systems</strong> for engineers, analysts, executives, and compliance teams.</p>\n<hr>\n<h3 id=\"-1-from-data-to-understanding-the-role-of-presentation\" style=\"position:relative;\"><a href=\"#-1-from-data-to-understanding-the-role-of-presentation\" aria-label=\" 1 from data to understanding the role of presentation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 <strong>1. From Data to Understanding: The Role of Presentation</strong></h3>\n<p>Riedesel opens with a core principle:</p>\n<blockquote>\n<p><strong>“A telemetry system that doesn’t present well is a silent system — it’s talking, but no one understands it.”</strong></p>\n</blockquote>\n<p>Even if your collection and storage layers are perfect, poor presentation creates:</p>\n<ul>\n<li><strong>Information overload</strong></li>\n<li><strong>False confidence in averages</strong></li>\n<li><strong>Ignored warnings</strong></li>\n<li><strong>Unquestioned dashboards that mislead</strong></li>\n</ul>\n<p>Thus, the presentation stage is about designing <strong>“clarity pipelines”</strong>, not just dashboards.</p>\n<h4 id=\"key-goals\" style=\"position:relative;\"><a href=\"#key-goals\" aria-label=\"key goals permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Key Goals:</h4>\n<ol>\n<li><strong>Visualize</strong> — Turn complex datasets into intuitive, interactive visual models.</li>\n<li><strong>Aggregate</strong> — Summarize raw data to reveal trends, patterns, and anomalies.</li>\n<li><strong>Link</strong> — Connect telemetry signals to <strong>decisions and actions</strong>.</li>\n</ol>\n<hr>\n<h3 id=\"️-2-visualizing-telemetry-dashboards-and-human-factors\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-2-visualizing-telemetry-dashboards-and-human-factors\" aria-label=\"️ 2 visualizing telemetry dashboards and human factors permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🖥️ <strong>2. Visualizing Telemetry: Dashboards and Human Factors</strong></h3>\n<p>Telemetry visualization tools like <strong>Grafana, Kibana, Datadog, Splunk, and New Relic</strong> are central to this stage.\nRiedesel argues that <strong>dashboards are the “storytellers” of telemetry</strong>, but only if designed deliberately.</p>\n<blockquote>\n<p><strong>“Good dashboards explain, not impress.”</strong></p>\n</blockquote>\n<h4 id=\"a-grafana-and-kibana-as-exemplars\" style=\"position:relative;\"><a href=\"#a-grafana-and-kibana-as-exemplars\" aria-label=\"a grafana and kibana as exemplars permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) Grafana and Kibana as Exemplars</strong></h4>\n<ul>\n<li>\n<p><strong>Grafana</strong> excels at <strong>numerical and time-series visualization</strong>, built on metrics like Prometheus or InfluxDB.</p>\n<ul>\n<li>Ideal for <strong>SRE and operations dashboards</strong> (e.g., latency, CPU, error rates).</li>\n<li>Provides strong alerting and panel templating.</li>\n</ul>\n</li>\n<li>\n<p><strong>Kibana</strong>, part of the <strong>ELK (Elasticsearch, Logstash, Kibana)</strong> stack, is optimized for <strong>exploratory log analytics</strong> and <strong>ad hoc querying</strong>.</p>\n<ul>\n<li>Ideal for debugging and tracing.</li>\n<li>Enables slicing by text, metadata, or fields (e.g., <code class=\"language-text\">status_code:500 AND region:us-west</code>).</li>\n</ul>\n</li>\n</ul>\n<p><strong>Integration pattern example:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Fluentd → Elasticsearch → Kibana\nPrometheus → Grafana\nJaeger → Grafana/Tempo (for traces)</code></pre></div>\n<p>Each tool sits on top of the telemetry stack, turning <strong>streams of data into human-friendly visuals</strong>.</p>\n<hr>\n<h4 id=\"b-dashboard-design-principles\" style=\"position:relative;\"><a href=\"#b-dashboard-design-principles\" aria-label=\"b dashboard design principles permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Dashboard Design Principles</strong></h4>\n<p>Riedesel draws on cognitive ergonomics — how humans perceive information under stress — especially during <strong>incident response</strong>.</p>\n<blockquote>\n<p><strong>“Dashboards are not for beauty contests; they’re for firefights.”</strong></p>\n</blockquote>\n<p><strong>Principles:</strong></p>\n<ol>\n<li><strong>Clarity over completeness.</strong> Avoid overloading with too many panels or metrics.</li>\n<li><strong>Layered storytelling.</strong> Start with high-level status, then drill into details.</li>\n<li><strong>Color with purpose.</strong> Red = urgency, green = normal, gray = unknown. Avoid rainbow palettes that dilute meaning.</li>\n<li><strong>Context first.</strong> Always show <strong>time window</strong>, <strong>environment</strong>, and <strong>version</strong> metadata.</li>\n<li><strong>Annotations and correlation.</strong> Overlay deploy events, config changes, or feature flags on metric graphs.</li>\n</ol>\n<blockquote>\n<p><strong>“If your dashboard can’t tell you when the last deploy happened, it’s missing the most important annotation of all.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-3-aggregation-making-sense-of-volume\" style=\"position:relative;\"><a href=\"#-3-aggregation-making-sense-of-volume\" aria-label=\" 3 aggregation making sense of volume permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📈 <strong>3. Aggregation: Making Sense of Volume</strong></h3>\n<p>After visualization comes <strong>aggregation</strong> — the mathematical condensation of billions of telemetry points into meaningful summaries.</p>\n<p>Riedesel stresses:</p>\n<blockquote>\n<p><strong>“Aggregation is the act of asking better questions of your data.”</strong></p>\n</blockquote>\n<p>Without aggregation, telemetry is just noise — a firehose of irrelevant detail.</p>\n<h4 id=\"a-types-of-aggregation-functions\" style=\"position:relative;\"><a href=\"#a-types-of-aggregation-functions\" aria-label=\"a types of aggregation functions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) Types of Aggregation Functions</strong></h4>\n<p>Different telemetry types require different summarization strategies:</p>\n<table>\n<thead>\n<tr>\n<th>Telemetry Type</th>\n<th>Common Aggregations</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Metrics</strong></td>\n<td>Average, percentile, rate, sum, count</td>\n<td><code class=\"language-text\">avg(request_latency)</code></td>\n</tr>\n<tr>\n<td><strong>Logs</strong></td>\n<td>Count by severity, group by message</td>\n<td><code class=\"language-text\">count(*) WHERE level='error'</code></td>\n</tr>\n<tr>\n<td><strong>Traces</strong></td>\n<td>Average span duration, top N slowest paths</td>\n<td><code class=\"language-text\">p95(span.duration)</code></td>\n</tr>\n</tbody>\n</table>\n<p>Riedesel distinguishes between <strong>descriptive</strong> and <strong>diagnostic</strong> aggregations:</p>\n<ul>\n<li><em>Descriptive:</em> what’s happening now (e.g., average latency).</li>\n<li><em>Diagnostic:</em> why it’s happening (e.g., correlation between latency and region).</li>\n</ul>\n<blockquote>\n<p><strong>“Every aggregation hides detail — make sure you’re hiding the right details.”</strong></p>\n</blockquote>\n<hr>\n<h4 id=\"b-temporal-aggregation\" style=\"position:relative;\"><a href=\"#b-temporal-aggregation\" aria-label=\"b temporal aggregation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Temporal Aggregation</strong></h4>\n<p>Telemetry data is inherently <strong>time-based</strong>, so <strong>temporal aggregation</strong> is critical:</p>\n<ul>\n<li><strong>Minute/hour/day windows</strong> reveal trends and patterns.</li>\n<li><strong>Moving averages</strong> smooth volatility but can hide spikes.</li>\n<li><strong>Percentiles</strong> (p50, p90, p99) expose outliers and tail latency.</li>\n</ul>\n<p>Riedesel warns:</p>\n<blockquote>\n<p><strong>“Averages are comfort food — easy to digest, but nutritionally empty.”</strong></p>\n</blockquote>\n<p><strong>Example:</strong>\nIf your 99th percentile latency is 5 seconds while the average is 200ms, you’re misleading yourself with the average.\nUse <strong>histograms</strong> or <strong>quantile-based aggregation</strong> for operational truth.</p>\n<hr>\n<h4 id=\"c-dimensional-aggregation-and-cardinality-awareness\" style=\"position:relative;\"><a href=\"#c-dimensional-aggregation-and-cardinality-awareness\" aria-label=\"c dimensional aggregation and cardinality awareness permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(c) Dimensional Aggregation and Cardinality Awareness</strong></h4>\n<p>When aggregating, it’s easy to accidentally reintroduce <strong>cardinality explosion</strong> (see Chapter 4).</p>\n<p>For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"promql\"><pre class=\"language-promql\"><code class=\"language-promql\"><span class=\"token keyword\">sum</span><span class=\"token punctuation\">(</span><span class=\"token function\">rate</span><span class=\"token punctuation\">(</span>http_requests_total<span class=\"token context-range\"><span class=\"token punctuation\">[</span><span class=\"token range-duration number\">5m</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">by</span> <span class=\"token vector-match\"><span class=\"token punctuation\">(</span><span class=\"token label-key attr-name\">region</span><span class=\"token punctuation\">,</span> <span class=\"token label-key attr-name\">service</span><span class=\"token punctuation\">)</span></span></code></pre></div>\n<p>is good — but adding <code class=\"language-text\">by (region, service, user_id)</code> will <strong>multiply series exponentially</strong>.</p>\n<blockquote>\n<p><strong>“Aggregation is a compression algorithm — not a multiplication algorithm.”</strong></p>\n</blockquote>\n<p>Always aggregate along <strong>business-relevant dimensions</strong>, not arbitrary identifiers.</p>\n<hr>\n<h3 id=\"-4-statistical-validity-in-telemetry\" style=\"position:relative;\"><a href=\"#-4-statistical-validity-in-telemetry\" aria-label=\" 4 statistical validity in telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📊 <strong>4. Statistical Validity in Telemetry</strong></h3>\n<p>One of the book’s most insightful sections discusses <strong>the dangers of misusing telemetry statistics</strong>.</p>\n<p>Riedesel writes:</p>\n<blockquote>\n<p><strong>“Dashboards lie — not because they want to, but because we ask the wrong questions.”</strong></p>\n</blockquote>\n<h4 id=\"a-sampling-bias\" style=\"position:relative;\"><a href=\"#a-sampling-bias\" aria-label=\"a sampling bias permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) Sampling Bias</strong></h4>\n<p>Telemetry often represents only what’s <strong>instrumented</strong>, not what’s <strong>experienced</strong>.\nFor instance, a log-based metric may exclude events from services that failed silently.</p>\n<blockquote>\n<p><strong>“Telemetry shows the observable universe — not the entire one.”</strong></p>\n</blockquote>\n<p>Mitigation:</p>\n<ul>\n<li>Ensure uniform instrumentation across services.</li>\n<li>Use synthetic monitoring to fill visibility gaps.</li>\n</ul>\n<h4 id=\"b-aggregation-distortion\" style=\"position:relative;\"><a href=\"#b-aggregation-distortion\" aria-label=\"b aggregation distortion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Aggregation Distortion</strong></h4>\n<p>Improper aggregation can distort truth:</p>\n<ul>\n<li>Averaging across dissimilar metrics (e.g., combining batch and interactive workloads).</li>\n<li>Merging time zones or misaligned intervals.</li>\n<li>Using <strong>non-weighted averages</strong> for metrics like cost or duration.</li>\n</ul>\n<blockquote>\n<p><strong>“Statistics without context are worse than no statistics at all.”</strong></p>\n</blockquote>\n<h4 id=\"c-false-correlations\" style=\"position:relative;\"><a href=\"#c-false-correlations\" aria-label=\"c false correlations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(c) False Correlations</strong></h4>\n<p>With large telemetry datasets, it’s easy to “discover” meaningless patterns.\nExample: CPU spikes correlating with user logins — but actually caused by a background cache warmup.</p>\n<p>Riedesel warns:</p>\n<blockquote>\n<p><strong>“The more telemetry you have, the more coincidences you’ll mistake for causes.”</strong></p>\n</blockquote>\n<p>Mitigation: Always <strong>verify correlation through causality tests</strong> — link metrics to traces and logs.</p>\n<hr>\n<h3 id=\"-5-linking-raw-data-to-decision-support\" style=\"position:relative;\"><a href=\"#-5-linking-raw-data-to-decision-support\" aria-label=\" 5 linking raw data to decision support permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧠 <strong>5. Linking Raw Data to Decision Support</strong></h3>\n<p>This section marks the philosophical heart of the chapter — transforming telemetry from operational feedback into <strong>organizational intelligence</strong>.</p>\n<blockquote>\n<p><strong>“Telemetry is not the goal. Decision-making is.”</strong></p>\n</blockquote>\n<h4 id=\"a-multi-layered-feedback-loops\" style=\"position:relative;\"><a href=\"#a-multi-layered-feedback-loops\" aria-label=\"a multi layered feedback loops permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) Multi-Layered Feedback Loops</strong></h4>\n<p>Riedesel describes telemetry as the backbone of <strong>multiple feedback loops</strong>:</p>\n<ul>\n<li><strong>Real-time:</strong> alerting, anomaly detection, incident response.</li>\n<li><strong>Tactical:</strong> post-incident analysis, sprint retrospectives.</li>\n<li><strong>Strategic:</strong> capacity planning, feature adoption, cost optimization.</li>\n</ul>\n<p>She compares it to <strong>business nervous systems</strong>:</p>\n<blockquote>\n<p><strong>“Telemetry tells you when to flinch, when to heal, and when to grow.”</strong></p>\n</blockquote>\n<h4 id=\"b-bridging-engineering-and-business\" style=\"position:relative;\"><a href=\"#b-bridging-engineering-and-business\" aria-label=\"b bridging engineering and business permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Bridging Engineering and Business</strong></h4>\n<p>Telemetry presentation must serve both <strong>technical and non-technical stakeholders</strong>:</p>\n<ul>\n<li>Engineers: need detailed traces and metrics for debugging.</li>\n<li>Executives: need KPI dashboards showing uptime, cost, and user satisfaction.</li>\n<li>Compliance officers: need verifiable logs of access and retention.</li>\n</ul>\n<p>The same data supports all these roles through <strong>different aggregation and visualization layers</strong>.</p>\n<blockquote>\n<p><strong>“If your telemetry only serves engineers, it’s observability. When it serves decisions, it’s intelligence.”</strong></p>\n</blockquote>\n<h4 id=\"c-from-dashboards-to-automation\" style=\"position:relative;\"><a href=\"#c-from-dashboards-to-automation\" aria-label=\"c from dashboards to automation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(c) From Dashboards to Automation</strong></h4>\n<p>The most advanced organizations go beyond manual dashboards into <strong>automated telemetry-driven decision systems</strong>:</p>\n<ul>\n<li><strong>Autoscaling policies</strong> driven by metrics.</li>\n<li><strong>Canary deployment rollbacks</strong> based on telemetry thresholds.</li>\n<li><strong>Security incident responses</strong> triggered by SIEM telemetry.</li>\n</ul>\n<p>This is telemetry maturing into <strong>“autonomic feedback”</strong> — the system self-correcting based on what it sees.</p>\n<blockquote>\n<p><strong>“Mature telemetry systems don’t just inform humans — they empower systems to react faster than humans can.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-6-the-cost-of-presentation\" style=\"position:relative;\"><a href=\"#-6-the-cost-of-presentation\" aria-label=\" 6 the cost of presentation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔐 <strong>6. The Cost of Presentation</strong></h3>\n<p>Riedesel closes with a sober reminder: visualization layers are <strong>expensive and fragile</strong> if mismanaged.</p>\n<ul>\n<li><strong>Query costs</strong> grow exponentially as users run interactive dashboards.</li>\n<li><strong>Retention policies</strong> must filter what’s visualized vs. what’s archived.</li>\n<li><strong>Security</strong>: dashboards often expose sensitive fields (user IDs, IPs, PII).</li>\n</ul>\n<p>Hence:</p>\n<blockquote>\n<p><strong>“Every pixel you show has a cost — in compute, in clarity, and in confidentiality.”</strong></p>\n</blockquote>\n<p>She encourages building <strong>tiered access dashboards</strong>:</p>\n<ul>\n<li>Ops dashboards → detailed, low-level metrics.</li>\n<li>Management dashboards → aggregated KPIs only.</li>\n<li>Security dashboards → anonymized and access-controlled.</li>\n</ul>\n<hr>\n<h3 id=\"-summary--presentation-as-decision-infrastructure\" style=\"position:relative;\"><a href=\"#-summary--presentation-as-decision-infrastructure\" aria-label=\" summary  presentation as decision infrastructure permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ <strong>Summary — Presentation as Decision Infrastructure</strong></h3>\n<blockquote>\n<p><strong>“The value of telemetry is realized not when it’s collected, but when it’s understood.”</strong></p>\n</blockquote>\n<p>Riedesel’s closing insight reframes telemetry systems as <strong>decision infrastructure</strong> — the bridge between <strong>observation and action</strong>.</p>\n<p><strong>Summary Principles:</strong></p>\n<ol>\n<li><strong>Design dashboards for cognition, not decoration.</strong></li>\n<li><strong>Aggregate carefully — never hide pain behind averages.</strong></li>\n<li><strong>Validate statistical soundness</strong> — telemetry lies if misunderstood.</li>\n<li><strong>Align presentation with decisions</strong> — every graph should answer “so what?”.</li>\n<li><strong>Protect and optimize visual data</strong> — clarity, privacy, and cost all matter.</li>\n</ol>\n<blockquote>\n<p><strong>“A telemetry system’s purpose is to make invisible problems visible — and visible truths actionable.”</strong></p>\n</blockquote>\n<hr>\n<p>✅ <strong>Summary Checklist: Presentation Stage Best Practices</strong></p>\n<table>\n<thead>\n<tr>\n<th>Category</th>\n<th>Best Practice</th>\n<th>Key Insight</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Visualization</strong></td>\n<td>Use Grafana/Kibana with consistent design patterns</td>\n<td><em>“Dashboards explain, not impress.”</em></td>\n</tr>\n<tr>\n<td><strong>Aggregation</strong></td>\n<td>Favor percentiles and context-based grouping</td>\n<td><em>“Averages comfort, percentiles reveal.”</em></td>\n</tr>\n<tr>\n<td><strong>Statistical Integrity</strong></td>\n<td>Avoid bias, validate sampling, and ensure causality</td>\n<td><em>“Telemetry shows what’s observable, not everything.”</em></td>\n</tr>\n<tr>\n<td><strong>Decision Alignment</strong></td>\n<td>Tailor dashboards to user roles and goals</td>\n<td><em>“When telemetry informs action, it fulfills its purpose.”</em></td>\n</tr>\n<tr>\n<td><strong>Governance &#x26; Security</strong></td>\n<td>Control dashboard access, anonymize sensitive data</td>\n<td><em>“Every pixel you show has a cost.”</em></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"-marking-up-and-enriching-telemetry\" style=\"position:relative;\"><a href=\"#-marking-up-and-enriching-telemetry\" aria-label=\" marking up and enriching telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 <strong>Marking Up and Enriching Telemetry</strong></h2>\n<h3 id=\"-purpose-of-this-chapter\" style=\"position:relative;\"><a href=\"#-purpose-of-this-chapter\" aria-label=\" purpose of this chapter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 <strong>Purpose of This Chapter</strong></h3>\n<p>After understanding how telemetry is <strong>emitted</strong>, <strong>shipped</strong>, and <strong>presented</strong>, Riedesel now focuses on the <strong>middle intelligence layer</strong> — where raw data gains meaning, traceability, and relational depth.</p>\n<p>She opens with one of the most important quotes in the entire book:</p>\n<blockquote>\n<p><strong>“Telemetry without context is trivia. Telemetry with context is knowledge.”</strong></p>\n</blockquote>\n<p>This chapter is about creating that context — transforming a jumble of events, metrics, and traces into a <strong>cohesive story</strong> of what’s really happening in your system.</p>\n<p>Riedesel emphasizes that <strong>markup</strong> and <strong>enrichment</strong> are what enable <strong>cross-system correlation</strong>, <strong>root-cause analysis</strong>, and <strong>observability at scale</strong>.</p>\n<blockquote>\n<p><strong>“You don’t debug single events — you debug stories told by correlated events.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-1-the-difference-between-markup-and-enrichment\" style=\"position:relative;\"><a href=\"#-1-the-difference-between-markup-and-enrichment\" aria-label=\" 1 the difference between markup and enrichment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧠 <strong>1. The Difference Between Markup and Enrichment</strong></h3>\n<p>Riedesel carefully distinguishes between two intertwined but distinct concepts:</p>\n<h4 id=\"a-markup--structure\" style=\"position:relative;\"><a href=\"#a-markup--structure\" aria-label=\"a markup  structure permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) Markup = Structure</strong></h4>\n<p>Markup adds <strong>syntactic clarity</strong> — making each telemetry event <strong>machine-readable, schema-consistent, and self-describing</strong>.</p>\n<blockquote>\n<p><strong>“Markup is about structure — turning a blob of text into an object with meaning.”</strong></p>\n</blockquote>\n<p>Markup examples:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"timestamp\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2025-10-10T17:00:00Z\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"service\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"checkout-api\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"severity\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"message\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Payment gateway timeout\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"trace_id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"abcd1234efgh5678\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"region\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"us-west-2\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Every field is <strong>explicit</strong>, typed, and standardized — enabling systems like Elasticsearch, Prometheus, or Grafana to <strong>index, correlate, and aggregate</strong> effectively.</p>\n<p>Riedesel notes:</p>\n<blockquote>\n<p><strong>“Good markup is the grammar of telemetry. It’s how machines learn to read what humans already understand.”</strong></p>\n</blockquote>\n<hr>\n<h4 id=\"b-enrichment--context\" style=\"position:relative;\"><a href=\"#b-enrichment--context\" aria-label=\"b enrichment  context permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Enrichment = Context</strong></h4>\n<p>Enrichment, by contrast, adds <strong>semantic information</strong> — metadata that <strong>wasn’t originally part of the emitted event</strong>, but helps <strong>explain it</strong>.</p>\n<blockquote>\n<p><strong>“Enrichment doesn’t change the fact — it changes how useful that fact becomes.”</strong></p>\n</blockquote>\n<p>Examples:</p>\n<ul>\n<li>Adding the <strong>deployment version</strong> or <strong>Git commit SHA</strong> to logs.</li>\n<li>Adding <strong>region</strong>, <strong>availability zone</strong>, or <strong>tenant ID</strong>.</li>\n<li>Appending <strong>user tier</strong>, <strong>plan type</strong>, or <strong>business unit</strong> for analytics.</li>\n<li>Linking <strong>trace IDs</strong> to correlate across services.</li>\n</ul>\n<p>Enrichment transforms raw telemetry into <strong>narrative telemetry</strong> — where each data point knows <strong>who</strong>, <strong>what</strong>, <strong>where</strong>, and <strong>why</strong>.</p>\n<blockquote>\n<p><strong>“Telemetry enrichment is how you teach your systems to think like an investigator.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"️-2-the-mechanics-of-markup\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-2-the-mechanics-of-markup\" aria-label=\"️ 2 the mechanics of markup permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚙️ <strong>2. The Mechanics of Markup</strong></h3>\n<p>Riedesel dives into the technical mechanics of how markup works in telemetry pipelines.</p>\n<h4 id=\"a-structural-consistency\" style=\"position:relative;\"><a href=\"#a-structural-consistency\" aria-label=\"a structural consistency permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) Structural Consistency</strong></h4>\n<p>Every telemetry event should follow a consistent schema:</p>\n<ul>\n<li><strong>Required fields</strong> (timestamp, service, severity)</li>\n<li><strong>Optional metadata</strong> (trace_id, environment, user_id)</li>\n<li><strong>Consistent naming</strong> (<code class=\"language-text\">user_id</code>, not <code class=\"language-text\">userid</code> or <code class=\"language-text\">UserID</code>)</li>\n<li><strong>Consistent data types</strong> (<code class=\"language-text\">int</code> for counts, <code class=\"language-text\">string</code> for messages)</li>\n</ul>\n<blockquote>\n<p><strong>“Markup is not about adding fields; it’s about agreeing what the fields mean.”</strong></p>\n</blockquote>\n<p>She recommends adopting <strong>industry-wide conventions</strong>, such as those defined by:</p>\n<ul>\n<li><strong>OpenTelemetry semantic conventions</strong></li>\n<li><strong>Elastic Common Schema (ECS)</strong></li>\n<li><strong>CloudEvents specification</strong></li>\n</ul>\n<p>These frameworks allow <strong>interoperability across vendors and platforms</strong> — essential in hybrid and multi-cloud ecosystems.</p>\n<hr>\n<h4 id=\"b-example-turning-freeform-logs-into-structured-telemetry\" style=\"position:relative;\"><a href=\"#b-example-turning-freeform-logs-into-structured-telemetry\" aria-label=\"b example turning freeform logs into structured telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Example: Turning Freeform Logs into Structured Telemetry</strong></h4>\n<p>Raw log:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[ERROR] 2025-10-10 16:42:05 - Order 12345 failed - timeout talking to payment API</code></pre></div>\n<p>Structured telemetry:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"timestamp\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2025-10-10T16:42:05Z\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"level\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"order_id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">12345</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"error\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"payment_timeout\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"service\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"checkout-api\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"env\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"prod\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"region\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"us-central1\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p><strong>“Structure is compression through meaning — every field saves time downstream.”</strong></p>\n</blockquote>\n<p>Structured markup eliminates the need for regex parsing, allows faster search, and enables aggregation across attributes like service or region.</p>\n<hr>\n<h3 id=\"-3-the-art-of-enrichment-adding-context-intelligently\" style=\"position:relative;\"><a href=\"#-3-the-art-of-enrichment-adding-context-intelligently\" aria-label=\" 3 the art of enrichment adding context intelligently permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧬 <strong>3. The Art of Enrichment: Adding Context Intelligently</strong></h3>\n<p>Riedesel emphasizes that <strong>not all enrichment is good enrichment</strong>.</p>\n<p>Adding context must be <strong>intentional</strong>, <strong>relevant</strong>, and <strong>cost-aware</strong>.</p>\n<blockquote>\n<p><strong>“Every field you add is a new dimension to store, index, and query — treat enrichment like seasoning, not stuffing.”</strong></p>\n</blockquote>\n<h4 id=\"a-sources-of-enrichment\" style=\"position:relative;\"><a href=\"#a-sources-of-enrichment\" aria-label=\"a sources of enrichment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) Sources of Enrichment</strong></h4>\n<p>Enrichment data usually comes from <strong>metadata services</strong>, <strong>infrastructure layers</strong>, or <strong>lookup tables</strong>:</p>\n<table>\n<thead>\n<tr>\n<th>Source</th>\n<th>Example Enrichment</th>\n<th>Use</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Deployment metadata</strong></td>\n<td>app version, build hash</td>\n<td>Track regressions after releases</td>\n</tr>\n<tr>\n<td><strong>Cloud metadata</strong></td>\n<td>region, zone, instance type</td>\n<td>Correlate outages by region</td>\n</tr>\n<tr>\n<td><strong>Business metadata</strong></td>\n<td>tenant ID, plan type</td>\n<td>Analyze impact by customer tier</td>\n</tr>\n<tr>\n<td><strong>CI/CD systems</strong></td>\n<td>pipeline ID, branch name</td>\n<td>Trace issues to deployments</td>\n</tr>\n<tr>\n<td><strong>Infrastructure inventory</strong></td>\n<td>host tags, owner team</td>\n<td>Accountability and escalation</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p><strong>“Enrichment connects telemetry to the human structures that care about it.”</strong></p>\n</blockquote>\n<hr>\n<h4 id=\"b-real-time-vs-offline-enrichment\" style=\"position:relative;\"><a href=\"#b-real-time-vs-offline-enrichment\" aria-label=\"b real time vs offline enrichment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Real-Time vs. Offline Enrichment</strong></h4>\n<p>There are <strong>two main timing models</strong> for enrichment:</p>\n<ol>\n<li>\n<p><strong>Real-Time Enrichment</strong> — applied <strong>in-stream</strong>, as telemetry flows through agents like <strong>Fluentd</strong>, <strong>Logstash</strong>, or <strong>Vector</strong>.\nExample:</p>\n<ul>\n<li>A Fluentd filter injects <code class=\"language-text\">region</code> and <code class=\"language-text\">environment</code> tags from EC2 metadata API.</li>\n<li>Useful for contextual tagging of <strong>live telemetry</strong> for monitoring and alerting.</li>\n</ul>\n</li>\n<li>\n<p><strong>Offline Enrichment</strong> — applied <strong>post-ingestion</strong>, typically through <strong>ETL or batch jobs</strong> in a data warehouse.\nExample:</p>\n<ul>\n<li>Adding customer profile info from CRM or billing database.</li>\n<li>Useful for <strong>forensic analysis, compliance, and business intelligence</strong>.</li>\n</ul>\n</li>\n</ol>\n<blockquote>\n<p><strong>“Real-time enrichment explains the ‘how.’ Offline enrichment explains the ‘why.’”</strong></p>\n</blockquote>\n<p>The most mature telemetry systems use both.</p>\n<hr>\n<h4 id=\"c-correlation-ids--the-backbone-of-observability\" style=\"position:relative;\"><a href=\"#c-correlation-ids--the-backbone-of-observability\" aria-label=\"c correlation ids  the backbone of observability permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(c) Correlation IDs — The Backbone of Observability</strong></h4>\n<p>Riedesel calls <strong>correlation IDs</strong> the <strong>“glue of distributed understanding.”</strong></p>\n<p>In complex microservice systems, a single user action (like submitting an order) may generate telemetry across:</p>\n<ul>\n<li>API Gateway</li>\n<li>Order Service</li>\n<li>Payment Processor</li>\n<li>Notification Queue</li>\n</ul>\n<p>Each service emits logs and metrics — but without correlation, they look unrelated.</p>\n<p>By adding a <strong>shared correlation ID</strong> (e.g., <code class=\"language-text\">trace_id</code>), you can reconstruct the entire request path.</p>\n<blockquote>\n<p><strong>“Correlation IDs turn chaos into choreography.”</strong></p>\n</blockquote>\n<p><strong>Implementation patterns:</strong></p>\n<ul>\n<li>Use <strong>UUIDv4</strong> or <strong>ULID</strong> as unique identifiers.</li>\n<li>Propagate IDs through <strong>HTTP headers</strong> (e.g., <code class=\"language-text\">X-Request-ID</code> or <code class=\"language-text\">traceparent</code> in W3C Trace Context).</li>\n<li>Add the ID to <strong>all logs, metrics, and traces</strong> within that request scope.</li>\n</ul>\n<p><strong>Result:</strong>\nYou can query in Kibana or Grafana for a single correlation ID and see the entire cross-service narrative.</p>\n<hr>\n<h3 id=\"-4-type-conversions-and-data-normalization\" style=\"position:relative;\"><a href=\"#-4-type-conversions-and-data-normalization\" aria-label=\" 4 type conversions and data normalization permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔢 <strong>4. Type Conversions and Data Normalization</strong></h3>\n<p>Once telemetry is enriched, it’s critical that all fields maintain <strong>consistent data types and formats</strong>.</p>\n<p>Riedesel warns:</p>\n<blockquote>\n<p><strong>“A number stored as a string is telemetry’s version of a landmine — it looks safe until you step on it.”</strong></p>\n</blockquote>\n<h4 id=\"common-issues\" style=\"position:relative;\"><a href=\"#common-issues\" aria-label=\"common issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Common Issues:</h4>\n<ul>\n<li><strong>Strings vs. integers:</strong> <code class=\"language-text\">\"200\"</code> vs <code class=\"language-text\">200</code></li>\n<li><strong>Boolean inconsistencies:</strong> <code class=\"language-text\">\"true\"</code> vs <code class=\"language-text\">true</code></li>\n<li><strong>Timestamp chaos:</strong> mixed time zones or unstandardized formats</li>\n<li><strong>Case sensitivity:</strong> <code class=\"language-text\">\"ERROR\"</code>, <code class=\"language-text\">\"Error\"</code>, <code class=\"language-text\">\"error\"</code></li>\n</ul>\n<p>These inconsistencies break aggregations, filters, and visualizations.</p>\n<p><strong>Best Practices:</strong></p>\n<ol>\n<li>Always use <strong>ISO 8601 UTC</strong> for timestamps.</li>\n<li>Standardize units (e.g., milliseconds, bytes).</li>\n<li>Normalize boolean and severity levels (<code class=\"language-text\">info</code>, <code class=\"language-text\">warn</code>, <code class=\"language-text\">error</code>).</li>\n<li>Apply <strong>schema validation</strong> before ingestion (JSON Schema, Avro).</li>\n</ol>\n<blockquote>\n<p><strong>“Normalization is the hygiene of telemetry — invisible when done right, revolting when ignored.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-5-advanced-enrichment-derived-and-synthetic-fields\" style=\"position:relative;\"><a href=\"#-5-advanced-enrichment-derived-and-synthetic-fields\" aria-label=\" 5 advanced enrichment derived and synthetic fields permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 <strong>5. Advanced Enrichment: Derived and Synthetic Fields</strong></h3>\n<p>Beyond metadata, you can add <strong>derived fields</strong> — calculated or inferred values that enhance analysis.</p>\n<p>Examples:</p>\n<ul>\n<li>Compute <strong>latency buckets</strong> from timestamps (<code class=\"language-text\">duration_ms</code>).</li>\n<li>Add <strong>error_category</strong> (network vs. database vs. user).</li>\n<li>Add <strong>geo-location</strong> from IP address.</li>\n<li>Add <strong>business impact</strong> (“premium customer”, “high-value transaction”).</li>\n</ul>\n<p>These are called <strong>synthetic enrichments</strong> — not present in the raw data, but inferred from it.</p>\n<p>Riedesel’s insight:</p>\n<blockquote>\n<p><strong>“Enrichment is not just decoration — it’s transformation. You’re building new meaning from old data.”</strong></p>\n</blockquote>\n<p>However, she warns:</p>\n<blockquote>\n<p><strong>“Every synthetic field adds processing cost — only enrich what improves your ability to decide.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-6-governance-and-safety-in-enrichment\" style=\"position:relative;\"><a href=\"#-6-governance-and-safety-in-enrichment\" aria-label=\" 6 governance and safety in enrichment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧠 <strong>6. Governance and Safety in Enrichment</strong></h3>\n<p>While enrichment adds power, it also increases <strong>risk</strong> — of leaks, privacy violations, and cost bloat.</p>\n<p>Riedesel highlights <strong>three safety principles</strong>:</p>\n<h4 id=\"a-data-minimization\" style=\"position:relative;\"><a href=\"#a-data-minimization\" aria-label=\"a data minimization permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(a) <strong>Data Minimization</strong></h4>\n<p>Only enrich with data that is:</p>\n<ul>\n<li>Necessary for observability or analysis.</li>\n<li>Non-sensitive or anonymized.</li>\n<li>Cleared for use under privacy policy.</li>\n</ul>\n<blockquote>\n<p><strong>“Telemetry enrichment is seductive — it tempts you to add what you don’t need.”</strong></p>\n</blockquote>\n<h4 id=\"b-field-classification\" style=\"position:relative;\"><a href=\"#b-field-classification\" aria-label=\"b field classification permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(b) <strong>Field Classification</strong></h4>\n<p>Establish <strong>data classification</strong> for telemetry fields:</p>\n<ul>\n<li><strong>Public</strong> (non-sensitive)</li>\n<li><strong>Internal</strong> (organizational only)</li>\n<li><strong>Confidential</strong> (user data, PII)</li>\n</ul>\n<p>Use this classification to enforce redaction and access control downstream.</p>\n<h4 id=\"c-immutable-enrichment\" style=\"position:relative;\"><a href=\"#c-immutable-enrichment\" aria-label=\"c immutable enrichment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(c) <strong>Immutable Enrichment</strong></h4>\n<p>Once telemetry is emitted and enriched, <strong>don’t retroactively modify it in-place</strong>.\nInstead, reprocess it through a separate pipeline.</p>\n<blockquote>\n<p><strong>“Telemetry is evidence — never tamper with evidence.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-7-practical-pipeline-example\" style=\"position:relative;\"><a href=\"#-7-practical-pipeline-example\" aria-label=\" 7 practical pipeline example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧭 <strong>7. Practical Pipeline Example</strong></h3>\n<p>Riedesel gives a sample end-to-end enrichment architecture:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Applications (emit JSON logs)\n   ↓\nFluent Bit / Fluentd agent\n   ↓\n→ Enrichment filter (adds region, env, trace_id)\n   ↓\n→ Logstash (schema validation, type conversion)\n   ↓\n→ Kafka topic (structured events)\n   ↓\n→ Elasticsearch / Data Lake\n   ↓\n→ Offline enrichment (business metadata join)\n   ↓\n→ Kibana / Grafana dashboards</code></pre></div>\n<p>Each stage adds <strong>context, safety, and structure</strong>, producing <strong>telemetry that is both technically and semantically consistent</strong>.</p>\n<blockquote>\n<p><strong>“Enrichment is the bridge between the system that emits and the people who must understand.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-summary--context-is-the-multiplier\" style=\"position:relative;\"><a href=\"#-summary--context-is-the-multiplier\" aria-label=\" summary  context is the multiplier permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔍 <strong>Summary — Context Is the Multiplier</strong></h3>\n<p>Riedesel concludes with a central thesis:</p>\n<blockquote>\n<p><strong>“Enrichment doesn’t make telemetry bigger — it makes it smarter.”</strong></p>\n</blockquote>\n<p>The more meaning you attach to your data <strong>without compromising cost, performance, or privacy</strong>, the more <strong>actionable and self-explanatory</strong> your system becomes.</p>\n<hr>\n<p>✅ <strong>Summary Checklist: Markup &#x26; Enrichment Best Practices</strong></p>\n<table>\n<thead>\n<tr>\n<th>Category</th>\n<th>Practice</th>\n<th>Key Insight</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Markup</strong></td>\n<td>Use structured formats (JSON, Avro, OpenTelemetry schema)</td>\n<td><em>“Structure is the grammar of telemetry.”</em></td>\n</tr>\n<tr>\n<td><strong>Metadata</strong></td>\n<td>Add consistent tags: service, env, region, version</td>\n<td><em>“Markup makes data readable; enrichment makes it useful.”</em></td>\n</tr>\n<tr>\n<td><strong>Correlation</strong></td>\n<td>Propagate trace IDs or request IDs across services</td>\n<td><em>“Correlation IDs turn chaos into choreography.”</em></td>\n</tr>\n<tr>\n<td><strong>Type Safety</strong></td>\n<td>Normalize data types and timestamps</td>\n<td><em>“Normalization is telemetry hygiene.”</em></td>\n</tr>\n<tr>\n<td><strong>Selective Enrichment</strong></td>\n<td>Add only meaningful, low-risk context</td>\n<td><em>“Treat enrichment like seasoning — a little goes a long way.”</em></td>\n</tr>\n<tr>\n<td><strong>Governance</strong></td>\n<td>Classify fields, redact sensitive data, prevent retroactive edits</td>\n<td><em>“Telemetry is evidence — never tamper with evidence.”</em></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<p>Excellent — below is a <strong>comprehensive, in-depth expansion</strong> of <strong>Part 2 — Use Cases Revisited</strong> and <strong>Chapter 8 — “Growing Cloud-Based Startup”</strong> from <em>Software Telemetry</em> by <strong>Jamie Riedesel</strong>, written in your preferred <strong>bold-highlighted, technically grounded, and architectural narrative style.</strong></p>\n<p>This section marks the <strong>practical midpoint</strong> of the book — where theory meets reality.\nRiedesel transitions from <strong>architecture blueprints</strong> to <strong>real-world evolution stories</strong>, showing how telemetry systems <strong>grow, break, and mature</strong> in different organizational contexts.</p>\n<hr>\n<h1 id=\"-use-cases-applying-architecture-concepts\" style=\"position:relative;\"><a href=\"#-use-cases-applying-architecture-concepts\" aria-label=\" use cases applying architecture concepts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌐 <strong>Use Cases: Applying Architecture Concepts</strong></h1>\n<h2 id=\"-purpose-of-part-2\" style=\"position:relative;\"><a href=\"#-purpose-of-part-2\" aria-label=\" purpose of part 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 <strong>Purpose of Part 2</strong></h2>\n<p>Riedesel takes the reader through <strong>eleven progressively complex organizational case studies</strong>, each demonstrating how <strong>telemetry architecture evolves with scale, culture, and maturity</strong>.</p>\n<blockquote>\n<p><strong>“Every organization already has telemetry — the question is whether it’s intentional or accidental.”</strong></p>\n</blockquote>\n<p>This part answers:</p>\n<ul>\n<li>How do telemetry systems <strong>start small and scale up</strong>?</li>\n<li>When do they <strong>outgrow vendor dashboards</strong> and build custom pipelines?</li>\n<li>What are the <strong>failure patterns</strong> at each stage of telemetry maturity?</li>\n<li>How do compliance, cost, and chaos shape architectural choices?</li>\n</ul>\n<hr>\n<h2 id=\"-telemetry-maturity-spectrum\" style=\"position:relative;\"><a href=\"#-telemetry-maturity-spectrum\" aria-label=\" telemetry maturity spectrum permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧱 <strong>Telemetry Maturity Spectrum</strong></h2>\n<p>Before diving into case studies, Riedesel introduces a <strong>maturity model</strong>:</p>\n<table>\n<thead>\n<tr>\n<th>Stage</th>\n<th>Description</th>\n<th>Key Risk</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Ad Hoc</strong></td>\n<td>Each engineer logs and monitors independently</td>\n<td>Data fragmentation</td>\n</tr>\n<tr>\n<td><strong>Centralized</strong></td>\n<td>Shared dashboards and metrics</td>\n<td>Scaling bottlenecks</td>\n</tr>\n<tr>\n<td><strong>Automated</strong></td>\n<td>Pipeline-based ingestion and standard schemas</td>\n<td>Complexity growth</td>\n</tr>\n<tr>\n<td><strong>Regulated</strong></td>\n<td>Telemetry treated as compliance evidence</td>\n<td>Cost and governance pressure</td>\n</tr>\n</tbody>\n</table>\n<p>She writes:</p>\n<blockquote>\n<p><strong>“Telemetry maturity doesn’t correlate with company size — it correlates with pain tolerance.”</strong></p>\n</blockquote>\n<p>Even small teams can build sophisticated systems if they experience operational pain early.\nConversely, large enterprises can remain stuck in fragmented chaos if telemetry isn’t prioritized strategically.</p>\n<hr>\n<h2 id=\"-growing-cloud-based-startup\" style=\"position:relative;\"><a href=\"#-growing-cloud-based-startup\" aria-label=\" growing cloud based startup permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚀 <strong>Growing Cloud-Based Startup</strong></h2>\n<h3 id=\"-overview\" style=\"position:relative;\"><a href=\"#-overview\" aria-label=\" overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 <strong>Overview</strong></h3>\n<p>This chapter follows the journey of a <strong>typical cloud-native startup</strong> — a small but fast-growing SaaS company running entirely on <strong>AWS, GCP, or Azure</strong>.</p>\n<p>Riedesel uses this archetype to explore how <strong>telemetry evolves organically</strong> from a handful of dashboards into a <strong>purpose-built internal telemetry platform.</strong></p>\n<blockquote>\n<p><strong>“In startups, telemetry begins as a luxury and ends as a lifeline.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"️-1-phase-1--the-single-dashboard-era-telemetry-by-vendor-defaults\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-1-phase-1--the-single-dashboard-era-telemetry-by-vendor-defaults\" aria-label=\"️ 1 phase 1  the single dashboard era telemetry by vendor defaults permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>☁️ <strong>1. Phase 1 — The “Single Dashboard Era” (Telemetry by Vendor Defaults)</strong></h3>\n<p>At the beginning, the startup’s entire monitoring and observability strategy relies on <strong>whatever their cloud provider gives them out of the box.</strong></p>\n<h4 id=\"common-setup\" style=\"position:relative;\"><a href=\"#common-setup\" aria-label=\"common setup permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Common Setup:</strong></h4>\n<ul>\n<li>AWS CloudWatch / GCP Stackdriver / Azure Monitor</li>\n<li>Application logs written to stdout or Cloud Logging</li>\n<li>Occasional use of vendor dashboards for uptime and CPU metrics</li>\n<li>Alerts configured in email or Slack based on simple thresholds</li>\n</ul>\n<h4 id=\"example\" style=\"position:relative;\"><a href=\"#example\" aria-label=\"example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Example:</strong></h4>\n<blockquote>\n<p>“If CPU > 80% for 5 minutes → send Slack alert to #ops-channel”</p>\n</blockquote>\n<p>Riedesel describes this phase as <strong>“telemetry by convenience”</strong>:</p>\n<blockquote>\n<p><strong>“You’re using telemetry not because you designed for it, but because the cloud makes it impossible not to.”</strong></p>\n</blockquote>\n<p><strong>Benefits:</strong></p>\n<ul>\n<li>Zero infrastructure overhead</li>\n<li>Tight integration with cloud resources</li>\n<li>Easy visualization (managed dashboards)</li>\n</ul>\n<p><strong>Limitations:</strong></p>\n<ul>\n<li>Fragmented between services (Lambda logs in one place, RDS logs in another)</li>\n<li>Poor correlation between components</li>\n<li>No standardized schema or cross-application traceability</li>\n<li>Limited retention and export capability</li>\n<li>Vendor lock-in</li>\n</ul>\n<blockquote>\n<p><strong>“At this stage, telemetry exists — but understanding doesn’t.”</strong></p>\n</blockquote>\n<p>The startup may think it’s observant, but in reality, it’s <strong>staring at disconnected instruments</strong>.</p>\n<hr>\n<h3 id=\"-2-phase-2--the-glue-and-scripting-era-telemetry-chaos-automation\" style=\"position:relative;\"><a href=\"#-2-phase-2--the-glue-and-scripting-era-telemetry-chaos-automation\" aria-label=\" 2 phase 2  the glue and scripting era telemetry chaos automation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧰 <strong>2. Phase 2 — The “Glue and Scripting Era” (Telemetry Chaos Automation)</strong></h3>\n<p>As the startup grows (perhaps from 5 to 25 engineers, or from 1 to 10 services), <strong>manual debugging through logs and dashboards becomes unscalable.</strong></p>\n<p>Engineers begin writing <strong>custom scripts, cron jobs, and glue logic</strong> to stitch together data from multiple cloud services.</p>\n<p><strong>Typical signs of this phase:</strong></p>\n<ul>\n<li>Bash or Python scripts pulling data from CloudWatch APIs</li>\n<li>Ad hoc dashboards combining CloudWatch + Prometheus data</li>\n<li>CSV exports of logs for local analysis</li>\n<li>Alerts manually tuned by individual teams</li>\n<li>“Shadow telemetry” — each team manages its own subset of metrics and logs</li>\n</ul>\n<p>Riedesel calls this:</p>\n<blockquote>\n<p><strong>“The era of telemetry folklore — everyone has a personal script that nobody else understands.”</strong></p>\n</blockquote>\n<h4 id=\"example-failure-pattern\" style=\"position:relative;\"><a href=\"#example-failure-pattern\" aria-label=\"example failure pattern permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example Failure Pattern:</h4>\n<ul>\n<li>A production outage occurs.</li>\n<li>Half the logs are in AWS CloudWatch, half in a Lambda console.</li>\n<li>One engineer remembers they once built a Python script that fetches S3 error logs — but it’s not in Git.</li>\n</ul>\n<blockquote>\n<p><strong>“At this point, your telemetry is more like detective work than engineering.”</strong></p>\n</blockquote>\n<p>The startup is now painfully aware of <strong>visibility debt</strong> — every debugging session costs hours of grep, scroll, and guesswork.</p>\n<hr>\n<h3 id=\"️-3-phase-3--the-internal-pipeline-awakening\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-3-phase-3--the-internal-pipeline-awakening\" aria-label=\"️ 3 phase 3  the internal pipeline awakening permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🏗️ <strong>3. Phase 3 — The “Internal Pipeline Awakening”</strong></h3>\n<p>After the first few painful outages, leadership finally recognizes that <strong>telemetry is infrastructure, not tooling.</strong></p>\n<p>The startup begins building its first <strong>internal telemetry pipeline.</strong></p>\n<p>Riedesel explains:</p>\n<blockquote>\n<p><strong>“This is the turning point where startups evolve from consuming telemetry to producing telemetry.”</strong></p>\n</blockquote>\n<h4 id=\"architecture-transition\" style=\"position:relative;\"><a href=\"#architecture-transition\" aria-label=\"architecture transition permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Architecture Transition:</strong></h4>\n<p>From this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">App Logs → CloudWatch\nMetrics → Prometheus (per service)\nAlerts → Email</code></pre></div>\n<p>To this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">App Logs → Fluent Bit → Kafka → Elasticsearch\nMetrics → Prometheus → Grafana\nTraces → OpenTelemetry → Jaeger</code></pre></div>\n<p>This transition involves three key milestones:</p>\n<hr>\n<h4 id=\"a-adopting-fluentd--fluent-bit-collection-layer\" style=\"position:relative;\"><a href=\"#a-adopting-fluentd--fluent-bit-collection-layer\" aria-label=\"a adopting fluentd  fluent bit collection layer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) Adopting Fluentd / Fluent Bit (Collection Layer)</strong></h4>\n<ul>\n<li>Replace raw CloudWatch logs with structured pipelines.</li>\n<li>Fluent Bit acts as the <strong>first-tier shipper</strong>, aggregating logs locally before sending to Elasticsearch.</li>\n<li>Reduces cost, latency, and dependency on vendor APIs.</li>\n</ul>\n<blockquote>\n<p><strong>“Fluent Bit turns your telemetry from a pile of text into a living stream.”</strong></p>\n</blockquote>\n<p>Key benefits:</p>\n<ul>\n<li>Control over log structure and enrichment</li>\n<li>On-prem or hybrid pipeline compatibility</li>\n<li>Standardization across containers and services</li>\n</ul>\n<hr>\n<h4 id=\"b-building-an-elk-stack-central-storage-and-search-layer\" style=\"position:relative;\"><a href=\"#b-building-an-elk-stack-central-storage-and-search-layer\" aria-label=\"b building an elk stack central storage and search layer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Building an ELK Stack (Central Storage and Search Layer)</strong></h4>\n<ul>\n<li>Elasticsearch for indexing</li>\n<li>Logstash for enrichment and filtering</li>\n<li>Kibana for visualization</li>\n</ul>\n<p>Riedesel notes:</p>\n<blockquote>\n<p><strong>“The ELK stack is the startup’s rite of passage — your first real telemetry system.”</strong></p>\n</blockquote>\n<p>This allows the team to:</p>\n<ul>\n<li>Centralize application logs, security events, and metrics</li>\n<li>Search by correlation ID across services</li>\n<li>Build shared dashboards with rich filters</li>\n</ul>\n<p>However, challenges soon appear:</p>\n<ul>\n<li>Elasticsearch scaling and memory pressure</li>\n<li>Disk storage costs for log retention</li>\n<li>Complex maintenance and upgrades</li>\n</ul>\n<blockquote>\n<p><strong>“You’ve gained power — but you’ve also inherited a platform.”</strong></p>\n</blockquote>\n<hr>\n<h4 id=\"c-embracing-opentelemetry\" style=\"position:relative;\"><a href=\"#c-embracing-opentelemetry\" aria-label=\"c embracing opentelemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(c) Embracing OpenTelemetry</strong></h4>\n<p>As systems scale further (especially in microservice architectures), the startup begins to instrument services using <strong>OpenTelemetry</strong> — for unified tracing, metrics, and logging.</p>\n<p><strong>Why it matters:</strong></p>\n<ul>\n<li>Avoids vendor lock-in</li>\n<li>Enables <strong>correlation across services</strong></li>\n<li>Provides <strong>language SDKs</strong> for consistent instrumentation</li>\n<li>Integrates seamlessly with Grafana Tempo, Jaeger, or Honeycomb</li>\n</ul>\n<blockquote>\n<p><strong>“OpenTelemetry is how startups graduate from observability to understanding.”</strong></p>\n</blockquote>\n<p>By this point, telemetry is no longer an afterthought — it’s part of <strong>the CI/CD lifecycle</strong>.</p>\n<hr>\n<h3 id=\"️-4-challenges-during-the-transition\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-4-challenges-during-the-transition\" aria-label=\"️ 4 challenges during the transition permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚖️ <strong>4. Challenges During the Transition</strong></h3>\n<p>Even though this shift is powerful, Riedesel stresses that it introduces new operational and cultural challenges.</p>\n<h4 id=\"a-cost-shock\" style=\"position:relative;\"><a href=\"#a-cost-shock\" aria-label=\"a cost shock permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) Cost Shock</strong></h4>\n<ul>\n<li>Ingestion and indexing costs surge as log volume grows.</li>\n<li>Teams start filtering and sampling telemetry to control expenses.</li>\n</ul>\n<blockquote>\n<p><strong>“Telemetry costs will sneak up on you — one debug log at a time.”</strong></p>\n</blockquote>\n<p>Mitigation strategies:</p>\n<ul>\n<li>Define <strong>retention tiers</strong> (e.g., 7 days for detailed logs, 90 days for summaries).</li>\n<li>Adopt <strong>structured logging</strong> early to avoid noise.</li>\n<li>Move rarely queried telemetry to cheaper storage (S3, Glacier).</li>\n</ul>\n<hr>\n<h4 id=\"b-ownership-and-access-control\" style=\"position:relative;\"><a href=\"#b-ownership-and-access-control\" aria-label=\"b ownership and access control permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Ownership and Access Control</strong></h4>\n<ul>\n<li>Who owns the telemetry stack? DevOps? SRE? Platform team?</li>\n<li>Access sprawl occurs when every engineer can query production logs.</li>\n</ul>\n<blockquote>\n<p><strong>“Without ownership, telemetry becomes everyone’s responsibility — and no one’s priority.”</strong></p>\n</blockquote>\n<p>The startup must establish:</p>\n<ul>\n<li>A <strong>central telemetry owner or platform team</strong></li>\n<li><strong>RBAC (role-based access control)</strong> for logs and dashboards</li>\n<li>Guidelines for <strong>privacy and PII redaction</strong></li>\n</ul>\n<hr>\n<h4 id=\"c-schema-and-enrichment-discipline\" style=\"position:relative;\"><a href=\"#c-schema-and-enrichment-discipline\" aria-label=\"c schema and enrichment discipline permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(c) Schema and Enrichment Discipline</strong></h4>\n<p>With multiple teams emitting data, consistency erodes quickly:</p>\n<ul>\n<li>One service logs <code class=\"language-text\">\"userId\"</code>, another <code class=\"language-text\">\"user_id\"</code>.</li>\n<li>Some timestamps are local, others UTC.</li>\n</ul>\n<blockquote>\n<p><strong>“In startups, telemetry entropy grows faster than traffic.”</strong></p>\n</blockquote>\n<p>The solution: implement <strong>schema governance</strong> — define common fields and tag standards (service, region, environment, trace_id).</p>\n<hr>\n<h3 id=\"-5-the-maturity-inflection-point\" style=\"position:relative;\"><a href=\"#-5-the-maturity-inflection-point\" aria-label=\" 5 the maturity inflection point permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧭 <strong>5. The Maturity Inflection Point</strong></h3>\n<p>At around 50–100 employees or ~20 microservices, the startup reaches an <strong>inflection point</strong>.</p>\n<p>Riedesel describes it vividly:</p>\n<blockquote>\n<p><strong>“You’re no longer a startup with dashboards — you’re an infrastructure company that happens to build a product.”</strong></p>\n</blockquote>\n<p>Telemetry now serves multiple purposes:</p>\n<ul>\n<li><strong>Operations</strong> (SRE dashboards, on-call rotation)</li>\n<li><strong>Security</strong> (SIEM integration, access audit logs)</li>\n<li><strong>Business Intelligence</strong> (usage metrics, feature adoption)</li>\n</ul>\n<p>This diversity forces the startup to <strong>segregate telemetry by audience</strong>:</p>\n<ul>\n<li>Technical telemetry → ELK / Prometheus / Jaeger</li>\n<li>Security telemetry → SIEM</li>\n<li>Product telemetry → Data warehouse / Snowflake</li>\n</ul>\n<blockquote>\n<p><strong>“When you start building dashboards for executives, your telemetry system has officially grown up.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-6-continuous-improvement-from-pipelines-to-platforms\" style=\"position:relative;\"><a href=\"#-6-continuous-improvement-from-pipelines-to-platforms\" aria-label=\" 6 continuous improvement from pipelines to platforms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔁 <strong>6. Continuous Improvement: From Pipelines to Platforms</strong></h3>\n<p>At this stage, the startup may hire a <strong>Platform Engineer or Telemetry Lead</strong> to scale and optimize the system.</p>\n<p>The telemetry stack evolves into a <strong>self-service platform</strong>:</p>\n<ul>\n<li>Developers define <strong>structured log formats</strong> via libraries.</li>\n<li>Pipelines are managed through <strong>infrastructure as code (Terraform, Helm)</strong>.</li>\n<li>Dashboards and alerts are <strong>templated</strong> to ensure consistency.</li>\n</ul>\n<p>Riedesel calls this transition:</p>\n<blockquote>\n<p><strong>“The move from artisanal telemetry to industrial telemetry.”</strong></p>\n</blockquote>\n<p>The platform mindset transforms telemetry from <strong>reactive monitoring</strong> to <strong>proactive insight generation</strong>.</p>\n<hr>\n<h3 id=\"-summary--lessons-from-the-cloud-startup-journey\" style=\"position:relative;\"><a href=\"#-summary--lessons-from-the-cloud-startup-journey\" aria-label=\" summary  lessons from the cloud startup journey permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧠 <strong>Summary — Lessons from the Cloud Startup Journey</strong></h3>\n<p>Riedesel closes with several key takeaways that apply broadly across modern software organizations:</p>\n<table>\n<thead>\n<tr>\n<th>Lesson</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Start simple, but plan to evolve.</strong></td>\n<td>Vendor telemetry is fine at first — until it limits insight.</td>\n</tr>\n<tr>\n<td><strong>Standardize early.</strong></td>\n<td>Schema discipline saves you from chaos later.</td>\n</tr>\n<tr>\n<td><strong>Invest before pain.</strong></td>\n<td>Building pipelines before crises reduces MTTR and cost.</td>\n</tr>\n<tr>\n<td><strong>Telemetry is infrastructure.</strong></td>\n<td>It requires ownership, governance, and lifecycle management.</td>\n</tr>\n<tr>\n<td><strong>Grow from consumers to producers.</strong></td>\n<td>Don’t just use telemetry tools — build your own system of truth.</td>\n</tr>\n</tbody>\n</table>\n<p>Final insight:</p>\n<blockquote>\n<p><strong>“The startup’s telemetry journey mirrors its business journey — from chaos to clarity, from reactive to predictive.”</strong></p>\n</blockquote>\n<hr>\n<p>✅ <strong>Summary Checklist: Growing Cloud-Based Startup Telemetry</strong></p>\n<table>\n<thead>\n<tr>\n<th>Stage</th>\n<th>Description</th>\n<th>Tools/Practices</th>\n<th>Core Principle</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Vendor Default</strong></td>\n<td>Relying on AWS/GCP dashboards</td>\n<td>CloudWatch, Stackdriver</td>\n<td><em>Telemetry by convenience</em></td>\n</tr>\n<tr>\n<td><strong>Glue Scripts</strong></td>\n<td>Manual API fetches and ad hoc dashboards</td>\n<td>Bash, Python scripts</td>\n<td><em>Folklore over design</em></td>\n</tr>\n<tr>\n<td><strong>Pipeline Foundation</strong></td>\n<td>Building structured collection</td>\n<td>Fluentd, Kafka, ELK</td>\n<td><em>Own your data path</em></td>\n</tr>\n<tr>\n<td><strong>Observability Expansion</strong></td>\n<td>Unified tracing and metrics</td>\n<td>OpenTelemetry, Jaeger</td>\n<td><em>Correlate everything</em></td>\n</tr>\n<tr>\n<td><strong>Platform Maturity</strong></td>\n<td>Telemetry as a product</td>\n<td>IaC, governance, RBAC</td>\n<td><em>Telemetry as infrastructure</em></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<p>Perfect — below is a <strong>comprehensive, expanded, and deeply contextualized outline</strong> of <strong>Chapter 9 — “Non-Software Business”</strong> from <em>Software Telemetry</em> by <strong>Jamie Riedesel</strong>, written in the same <strong>bold-highlighted, architecture-aware, and narrative-rich</strong> style as before.</p>\n<p>This chapter contrasts sharply with the previous one. If Chapter 8 showed a <strong>born-in-the-cloud startup</strong> evolving telemetry through necessity and growth, Chapter 9 focuses on organizations where <strong>software is not the product</strong> — but <strong>still runs the business</strong>.</p>\n<hr>\n<h2 id=\"-non-software-business\" style=\"position:relative;\"><a href=\"#-non-software-business\" aria-label=\" non software business permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🏢 <strong>Non-Software Business</strong></h2>\n<h3 id=\"-purpose-and-context\" style=\"position:relative;\"><a href=\"#-purpose-and-context\" aria-label=\" purpose and context permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 <strong>Purpose and Context</strong></h3>\n<p>Riedesel begins by acknowledging a hard truth:</p>\n<blockquote>\n<p><strong>“Every company is a software company — most just don’t know it yet.”</strong></p>\n</blockquote>\n<p>This chapter examines how <strong>traditional, non-software organizations</strong> (manufacturers, retailers, logistics firms, hospitals, universities, government agencies, etc.) <strong>adopt telemetry indirectly</strong> — first through <strong>IT operations</strong> and later through <strong>digital initiatives</strong> that slowly transform them into software-centric enterprises.</p>\n<p>Unlike startups, these companies:</p>\n<ul>\n<li>Don’t have a DevOps culture by default.</li>\n<li>Depend heavily on <strong>off-the-shelf SaaS systems</strong> (ERP, CRM, HR, POS, etc.).</li>\n<li>View telemetry initially as <strong>a compliance or uptime function</strong>, not a product enabler.</li>\n<li>Often suffer from <strong>organizational silos</strong> where operations, development, and business units own different data streams.</li>\n</ul>\n<p>Riedesel frames this environment as one of <strong>“telemetry by outsourcing.”</strong></p>\n<blockquote>\n<p><strong>“In non-software businesses, telemetry starts not in the code but in the contracts.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"️-1-telemetry-begins-in-the-it-department\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-1-telemetry-begins-in-the-it-department\" aria-label=\"️ 1 telemetry begins in the it department permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🖥️ <strong>1. Telemetry Begins in the IT Department</strong></h3>\n<h4 id=\"a-inherited-visibility-from-vendors\" style=\"position:relative;\"><a href=\"#a-inherited-visibility-from-vendors\" aria-label=\"a inherited visibility from vendors permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) Inherited Visibility from Vendors</strong></h4>\n<p>Most non-software organizations rely on a patchwork of SaaS and on-premises systems:</p>\n<ul>\n<li><strong>Microsoft 365</strong> or <strong>Google Workspace</strong> for collaboration</li>\n<li><strong>Salesforce</strong>, <strong>SAP</strong>, or <strong>Oracle ERP</strong> for operations</li>\n<li><strong>ServiceNow</strong>, <strong>PagerDuty</strong>, or <strong>SolarWinds</strong> for IT management</li>\n<li><strong>VMware</strong>, <strong>Cisco</strong>, or <strong>Fortinet</strong> appliances in the datacenter</li>\n</ul>\n<p>Each of these systems emits telemetry — but through its <strong>own proprietary portal</strong> or <strong>API</strong>.</p>\n<p>Riedesel writes:</p>\n<blockquote>\n<p><strong>“Your first telemetry dashboards arrive through vendor logins, not engineering effort.”</strong></p>\n</blockquote>\n<p>This results in <strong>fragmented visibility</strong>:</p>\n<ul>\n<li>Network logs are in one portal.</li>\n<li>Application health in another.</li>\n<li>Security events in a third.</li>\n</ul>\n<blockquote>\n<p><strong>“The telemetry exists, but it’s trapped in a dozen walled gardens.”</strong></p>\n</blockquote>\n<hr>\n<h4 id=\"b-saas-driven-telemetry-as-a-service\" style=\"position:relative;\"><a href=\"#b-saas-driven-telemetry-as-a-service\" aria-label=\"b saas driven telemetry as a service permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) SaaS-Driven Telemetry as a Service</strong></h4>\n<p>Because internal IT teams rarely build custom pipelines, they depend on <strong>SaaS-provided observability dashboards</strong>.\nExamples:</p>\n<ul>\n<li>Microsoft’s <strong>Azure Monitor</strong> or <strong>Defender for Cloud</strong></li>\n<li>Google’s <strong>Admin Console</strong> and <strong>Security Center</strong></li>\n<li>Salesforce’s <strong>event monitoring API</strong></li>\n</ul>\n<p>Benefits:</p>\n<ul>\n<li>No maintenance overhead.</li>\n<li>Regulatory-compliant by design.</li>\n<li>Built-in visualizations for security and usage analytics.</li>\n</ul>\n<p>Limitations:</p>\n<ul>\n<li><strong>Little cross-system correlation.</strong></li>\n<li><strong>Opaque metrics definitions.</strong></li>\n<li><strong>Vendor lock-in</strong> for historical data.</li>\n</ul>\n<p>Riedesel observes:</p>\n<blockquote>\n<p><strong>“You don’t own your telemetry — you rent visibility by the month.”</strong></p>\n</blockquote>\n<hr>\n<h4 id=\"c-the-shadow-telemetry-problem\" style=\"position:relative;\"><a href=\"#c-the-shadow-telemetry-problem\" aria-label=\"c the shadow telemetry problem permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(c) The Shadow Telemetry Problem</strong></h4>\n<p>Because official telemetry channels are locked behind IT admin privileges, <strong>departments build their own shadow monitoring</strong> using Excel exports, PowerBI reports, or ad-hoc scripts.</p>\n<p>Example:</p>\n<ul>\n<li>Finance exports CSVs from SAP monthly to audit transaction errors.</li>\n<li>HR extracts access logs from the identity provider for compliance.</li>\n<li>Operations teams rely on spreadsheet pivot tables as “dashboards.”</li>\n</ul>\n<blockquote>\n<p><strong>“Shadow telemetry is where observability meets office politics.”</strong></p>\n</blockquote>\n<p>This leads to duplicated effort, inconsistent KPIs, and data latency measured in weeks.</p>\n<hr>\n<h3 id=\"-2-the-first-expansion--when-telemetry-meets-digital-transformation\" style=\"position:relative;\"><a href=\"#-2-the-first-expansion--when-telemetry-meets-digital-transformation\" aria-label=\" 2 the first expansion  when telemetry meets digital transformation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌱 <strong>2. The First Expansion — When Telemetry Meets Digital Transformation</strong></h3>\n<p>As these organizations pursue modernization — migrating workloads to the cloud or building customer-facing portals — telemetry must <strong>expand beyond IT.</strong></p>\n<h4 id=\"a-the-trigger-moment-internal-development-begins\" style=\"position:relative;\"><a href=\"#a-the-trigger-moment-internal-development-begins\" aria-label=\"a the trigger moment internal development begins permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) The Trigger Moment: Internal Development Begins</strong></h4>\n<p>Riedesel pinpoints the key turning point:</p>\n<blockquote>\n<p><strong>“The day your company writes its first line of production code, your telemetry universe changes forever.”</strong></p>\n</blockquote>\n<p>That first in-house application — maybe a customer portal, mobile app, or API integration — demands <strong>real observability</strong>:</p>\n<ul>\n<li>Developers need logs and metrics they can query.</li>\n<li>Security needs audit trails for compliance (SOX, HIPAA, GDPR).</li>\n<li>Operations needs uptime and SLA reporting.</li>\n</ul>\n<p>Suddenly, <strong>the old IT dashboards are insufficient</strong>.\nTelemetry must now bridge <strong>SaaS</strong>, <strong>custom code</strong>, and <strong>cloud infrastructure</strong>.</p>\n<hr>\n<h4 id=\"b-building-a-telemetry-bridge-between-worlds\" style=\"position:relative;\"><a href=\"#b-building-a-telemetry-bridge-between-worlds\" aria-label=\"b building a telemetry bridge between worlds permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Building a Telemetry Bridge between Worlds</strong></h4>\n<p>The organization typically introduces <strong>middleware telemetry</strong> — a bridge connecting legacy IT monitoring with new application telemetry.</p>\n<p>Example flow:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Existing SaaS systems (ServiceNow, SAP)\n       ↓\nIntegration Bus (Kafka / MuleSoft / Azure Event Hub)\n       ↓\nCentral Log Collector (Fluentd / Logstash)\n       ↓\nStorage (Elasticsearch / Splunk)\n       ↓\nVisualization (Kibana / PowerBI)</code></pre></div>\n<blockquote>\n<p><strong>“The goal is not to replace vendor telemetry, but to normalize it.”</strong></p>\n</blockquote>\n<p>This phase introduces:</p>\n<ul>\n<li><strong>ETL pipelines</strong> for SaaS audit logs.</li>\n<li><strong>Structured logging</strong> for internal apps.</li>\n<li><strong>Cross-domain dashboards</strong> combining IT, business, and development data.</li>\n</ul>\n<p>Now the company begins to see <strong>systemic patterns</strong> — how outages in a CRM ripple into sales KPIs, or how API latency impacts customer experience.</p>\n<hr>\n<h4 id=\"c-cultural-friction-and-data-politics\" style=\"position:relative;\"><a href=\"#c-cultural-friction-and-data-politics\" aria-label=\"c cultural friction and data politics permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(c) Cultural Friction and Data Politics</strong></h4>\n<p>Telemetry expansion collides with organizational culture.\nThe IT department historically guards access to logs for <strong>security reasons</strong>, while development teams demand <strong>self-service observability</strong>.</p>\n<p>Riedesel calls this:</p>\n<blockquote>\n<p><strong>“The turf war between operations confidentiality and developer velocity.”</strong></p>\n</blockquote>\n<p>Common debates:</p>\n<ul>\n<li>Should developers have access to production logs?</li>\n<li>Can business analysts see system performance dashboards?</li>\n<li>Who pays for the new ELK cluster or Splunk license?</li>\n</ul>\n<p>Without clear governance, telemetry projects stall under bureaucracy.</p>\n<p><strong>Best Practice:</strong></p>\n<ul>\n<li>Establish a <strong>Telemetry Working Group</strong> including IT, Security, and Dev leads.</li>\n<li>Define access tiers (read-only vs. admin).</li>\n<li>Treat telemetry as a <strong>shared business service</strong>, not a department tool.</li>\n</ul>\n<blockquote>\n<p><strong>“When everyone owns a slice of visibility, the whole company starts to see.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"️-3-evolving-from-reactive-monitoring-to-proactive-telemetry\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-3-evolving-from-reactive-monitoring-to-proactive-telemetry\" aria-label=\"️ 3 evolving from reactive monitoring to proactive telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚙️ <strong>3. Evolving from Reactive Monitoring to Proactive Telemetry</strong></h3>\n<p>Initially, non-software companies only use telemetry for <strong>reactive IT incident management</strong>:</p>\n<ul>\n<li>Detect outages.</li>\n<li>Reset servers.</li>\n<li>Notify vendors.</li>\n</ul>\n<p>Over time, they realize telemetry can <strong>predict and prevent issues</strong> — a shift from <strong>monitoring to observability</strong>.</p>\n<h4 id=\"a-from-alerts-to-analytics\" style=\"position:relative;\"><a href=\"#a-from-alerts-to-analytics\" aria-label=\"a from alerts to analytics permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) From Alerts to Analytics</strong></h4>\n<ul>\n<li>Move from simple up/down alerts to <strong>trend dashboards</strong>.</li>\n<li>Analyze ticket data from ServiceNow for recurring incidents.</li>\n<li>Use metrics to justify automation investments.</li>\n</ul>\n<blockquote>\n<p><strong>“Data stops being noise when it starts informing budgets.”</strong></p>\n</blockquote>\n<h4 id=\"b-telemetry-as-business-evidence\" style=\"position:relative;\"><a href=\"#b-telemetry-as-business-evidence\" aria-label=\"b telemetry as business evidence permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Telemetry as Business Evidence</strong></h4>\n<p>Once telemetry enters PowerBI or Tableau, executives begin using it to measure:</p>\n<ul>\n<li>SLA adherence with external vendors.</li>\n<li>Cost allocation by system or department.</li>\n<li>Compliance audit readiness.</li>\n</ul>\n<p>Riedesel notes:</p>\n<blockquote>\n<p><strong>“In traditional enterprises, telemetry’s first killer app isn’t uptime — it’s accountability.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-4-integrating-internal-apps-and-legacy-systems\" style=\"position:relative;\"><a href=\"#-4-integrating-internal-apps-and-legacy-systems\" aria-label=\" 4 integrating internal apps and legacy systems permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 <strong>4. Integrating Internal Apps and Legacy Systems</strong></h3>\n<p>When in-house development grows, the IT landscape becomes <strong>hybrid</strong>: legacy systems + new cloud applications.</p>\n<h4 id=\"a-the-dual-stack-reality\" style=\"position:relative;\"><a href=\"#a-the-dual-stack-reality\" aria-label=\"a the dual stack reality permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) The Dual-Stack Reality</strong></h4>\n<ul>\n<li>Mainframes or Oracle DBs coexist with AWS Lambda or Kubernetes clusters.</li>\n<li>On-prem SIEM tools (ArcSight, QRadar) coexist with cloud log pipelines (CloudWatch, Stackdriver).</li>\n</ul>\n<blockquote>\n<p><strong>“Telemetry has to speak both COBOL and Kubernetes.”</strong></p>\n</blockquote>\n<p><strong>Technical solutions:</strong></p>\n<ul>\n<li>Use <strong>collectors like Fluentd, Logstash, or Telegraf</strong> to bridge both worlds.</li>\n<li>Standardize formats via <strong>JSON schemas or ECS (Elastic Common Schema)</strong>.</li>\n<li>Correlate across time using <strong>synchronized NTP and UTC timestamps</strong>.</li>\n</ul>\n<hr>\n<h4 id=\"b-introducing-opentelemetry-for-new-apps\" style=\"position:relative;\"><a href=\"#b-introducing-opentelemetry-for-new-apps\" aria-label=\"b introducing opentelemetry for new apps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Introducing OpenTelemetry for New Apps</strong></h4>\n<ul>\n<li>Developers instrument new microservices with OpenTelemetry SDKs.</li>\n<li>Export traces to Jaeger or Tempo.</li>\n<li>Gradually integrate with IT’s centralized log management.</li>\n</ul>\n<blockquote>\n<p><strong>“The new telemetry doesn’t replace the old — it wraps around it.”</strong></p>\n</blockquote>\n<p>This co-existence phase can last years but forms the foundation of <strong>enterprise observability</strong>.</p>\n<hr>\n<h3 id=\"-5-compliance-security-and-audit-pressure\" style=\"position:relative;\"><a href=\"#-5-compliance-security-and-audit-pressure\" aria-label=\" 5 compliance security and audit pressure permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔐 <strong>5. Compliance, Security, and Audit Pressure</strong></h3>\n<p>For non-software businesses, one of the main reasons telemetry matures is <strong>regulation</strong>.</p>\n<p>Examples:</p>\n<ul>\n<li><strong>SOX</strong> (financial integrity)</li>\n<li><strong>HIPAA</strong> (healthcare privacy)</li>\n<li><strong>PCI-DSS</strong> (payment security)</li>\n<li><strong>GDPR / CCPA</strong> (personal data protection)</li>\n</ul>\n<p>Riedesel explains:</p>\n<blockquote>\n<p><strong>“In regulated industries, telemetry isn’t optional — it’s evidence.”</strong></p>\n</blockquote>\n<p>Key requirements:</p>\n<ul>\n<li>Immutable log storage (write-once, read-many).</li>\n<li>Retention policies (1–7 years).</li>\n<li>Audit trails for access and configuration changes.</li>\n</ul>\n<p>Tools: Splunk, Elastic Security, AWS Audit Manager, Azure Sentinel.</p>\n<p>This pressure often justifies telemetry investment that IT budgets alone could not.</p>\n<blockquote>\n<p><strong>“Compliance buys what performance cannot.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-6-emergence-of-cross-functional-telemetry-teams\" style=\"position:relative;\"><a href=\"#-6-emergence-of-cross-functional-telemetry-teams\" aria-label=\" 6 emergence of cross functional telemetry teams permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📈 <strong>6. Emergence of Cross-Functional Telemetry Teams</strong></h3>\n<p>Once telemetry spans IT and software teams, organizations create a <strong>central observability function</strong> or <strong>Telemetry Center of Excellence (CoE)</strong>.</p>\n<p>Responsibilities:</p>\n<ul>\n<li>Define telemetry standards and schemas.</li>\n<li>Manage ingestion pipelines and retention policies.</li>\n<li>Offer dashboards as shared internal services.</li>\n<li>Train departments on interpreting data.</li>\n</ul>\n<blockquote>\n<p><strong>“In mature enterprises, telemetry becomes the language between departments.”</strong></p>\n</blockquote>\n<p>This evolution mirrors the startup’s “Platform Engineering” model but with <strong>corporate constraints</strong> (change management, budgets, procurement cycles).</p>\n<hr>\n<h3 id=\"-7-example-scenario-retail-company-modernizing-telemetry\" style=\"position:relative;\"><a href=\"#-7-example-scenario-retail-company-modernizing-telemetry\" aria-label=\" 7 example scenario retail company modernizing telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💡 <strong>7. Example Scenario: Retail Company Modernizing Telemetry</strong></h3>\n<p><strong>Phase 1:</strong> IT monitors POS terminals and network uptime via SolarWinds.\n<strong>Phase 2:</strong> Company launches an online store — adds AWS CloudWatch and ELK Stack.\n<strong>Phase 3:</strong> Security introduces Splunk for compliance.\n<strong>Phase 4:</strong> Business analysts consume telemetry data in PowerBI.\n<strong>Phase 5:</strong> Unified telemetry pipeline connects POS, website, and cloud services using Fluent Bit → Kafka → Elastic.</p>\n<p>Result:</p>\n<ul>\n<li>Real-time sales analytics tied to infrastructure performance.</li>\n<li>Single correlation ID from checkout API to payment processor.</li>\n<li>Reduced incident resolution time by 60%.</li>\n</ul>\n<blockquote>\n<p><strong>“When a retailer knows which server sold the shoes, telemetry has gone full circle.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-8-chapter-summary--telemetry-as-the-backbone-of-digital-transformation\" style=\"position:relative;\"><a href=\"#-8-chapter-summary--telemetry-as-the-backbone-of-digital-transformation\" aria-label=\" 8 chapter summary  telemetry as the backbone of digital transformation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧠 <strong>8. Chapter Summary — Telemetry as the Backbone of Digital Transformation</strong></h3>\n<p>Riedesel closes the chapter with a fundamental insight:</p>\n<blockquote>\n<p><strong>“The day you start building software, your IT telemetry becomes your application telemetry.”</strong></p>\n</blockquote>\n<p>In other words, the border between <strong>infrastructure monitoring</strong> and <strong>business observability</strong> disappears.</p>\n<p><strong>Core Lessons:</strong></p>\n<table>\n<thead>\n<tr>\n<th>Theme</th>\n<th>Key Takeaway</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Start with what vendors give you.</strong></td>\n<td>SaaS telemetry is a foundation, not a trap.</td>\n</tr>\n<tr>\n<td><strong>Normalize across systems.</strong></td>\n<td>Use integration buses and standard schemas.</td>\n</tr>\n<tr>\n<td><strong>Create shared ownership.</strong></td>\n<td>Avoid turf wars between IT and dev teams.</td>\n</tr>\n<tr>\n<td><strong>Leverage compliance funding.</strong></td>\n<td>Regulations can drive modernization.</td>\n</tr>\n<tr>\n<td><strong>Plan for convergence.</strong></td>\n<td>Infrastructure and application telemetry eventually merge.</td>\n</tr>\n</tbody>\n</table>\n<p>Final quote:</p>\n<blockquote>\n<p><strong>“Telemetry is the bridge between the old world that ran on hardware and the new one that runs on software.”</strong></p>\n</blockquote>\n<hr>\n<p>✅ <strong>Summary Checklist: Non-Software Business Telemetry Evolution</strong></p>\n<table>\n<thead>\n<tr>\n<th>Phase</th>\n<th>Characteristics</th>\n<th>Tools</th>\n<th>Strategic Goal</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Vendor Default</strong></td>\n<td>Siloed SaaS dashboards</td>\n<td>CloudWatch, ServiceNow</td>\n<td>Basic uptime visibility</td>\n</tr>\n<tr>\n<td><strong>Shadow Telemetry</strong></td>\n<td>Manual exports, spreadsheets</td>\n<td>CSV, PowerBI</td>\n<td>Departmental accountability</td>\n</tr>\n<tr>\n<td><strong>Integration Bridge</strong></td>\n<td>Central ingestion pipeline</td>\n<td>Fluentd, Kafka, Elastic</td>\n<td>Unified visibility</td>\n</tr>\n<tr>\n<td><strong>Hybrid Observability</strong></td>\n<td>Cloud + legacy integration</td>\n<td>OpenTelemetry, SIEM</td>\n<td>Cross-system correlation</td>\n</tr>\n<tr>\n<td><strong>Regulated Maturity</strong></td>\n<td>Audit-grade telemetry</td>\n<td>Splunk, Sentinel</td>\n<td>Compliance &#x26; security intelligence</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"-long-established-business-it-legacymainframe\" style=\"position:relative;\"><a href=\"#-long-established-business-it-legacymainframe\" aria-label=\" long established business it legacymainframe permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🏦 <strong>Long-Established Business IT (Legacy/Mainframe)</strong></h2>\n<h3 id=\"-purpose-and-context-1\" style=\"position:relative;\"><a href=\"#-purpose-and-context-1\" aria-label=\" purpose and context 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 <strong>Purpose and Context</strong></h3>\n<p>Riedesel opens with a blunt observation:</p>\n<blockquote>\n<p><strong>“The older your systems, the more they matter — and the less they tell you.”</strong></p>\n</blockquote>\n<p>This chapter focuses on organizations that <strong>predate the internet age</strong>, yet remain critical to global economies — <strong>banks, airlines, insurance companies, telecoms, and governments</strong> — all running complex mainframe-based systems that:</p>\n<ul>\n<li>Process billions of dollars daily,</li>\n<li>Depend on decades-old COBOL or PL/I code,</li>\n<li>Interface with modern APIs and web front-ends,</li>\n<li>And yet provide almost <strong>no modern telemetry</strong>.</li>\n</ul>\n<p>Riedesel calls this domain the <strong>“dark matter of enterprise telemetry”</strong> — vast, powerful, but mostly invisible.</p>\n<blockquote>\n<p><strong>“Your digital transformation is only as observant as your oldest system.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-1-the-legacy-reality--telemetry-by-neglect\" style=\"position:relative;\"><a href=\"#-1-the-legacy-reality--telemetry-by-neglect\" aria-label=\" 1 the legacy reality  telemetry by neglect permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 <strong>1. The Legacy Reality — Telemetry by Neglect</strong></h3>\n<h4 id=\"a-decades-of-accidental-complexity\" style=\"position:relative;\"><a href=\"#a-decades-of-accidental-complexity\" aria-label=\"a decades of accidental complexity permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) Decades of Accidental Complexity</strong></h4>\n<p>Legacy IT systems were never designed for <strong>observability</strong>; they were designed for <strong>reliability</strong> and <strong>control</strong>.\nTelemetry, if it existed, was typically:</p>\n<ul>\n<li>Printed to batch job reports,</li>\n<li>Written to flat files or tape archives,</li>\n<li>Aggregated weekly or monthly for accountants — not engineers.</li>\n</ul>\n<p>Riedesel explains:</p>\n<blockquote>\n<p><strong>“These systems didn’t emit telemetry — they emitted paperwork.”</strong></p>\n</blockquote>\n<p>Even today, many COBOL applications still log to <strong>EBCDIC text files</strong>, which require manual extraction and conversion to ASCII before analysis.</p>\n<p><strong>Key problem:</strong> There’s no <code class=\"language-text\">stdout</code>, no JSON, no metrics endpoint — just job logs buried in proprietary formats.</p>\n<hr>\n<h4 id=\"b-islands-of-monitoring\" style=\"position:relative;\"><a href=\"#b-islands-of-monitoring\" aria-label=\"b islands of monitoring permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Islands of Monitoring</strong></h4>\n<p>Over the decades, enterprises added layers of specialized tools:</p>\n<ul>\n<li><strong>IBM Tivoli Monitoring (ITM)</strong></li>\n<li><strong>CA Sysview / MainView</strong></li>\n<li><strong>BMC Control-M</strong></li>\n<li><strong>HP OpenView</strong></li>\n<li><strong>SolarWinds for network devices</strong></li>\n</ul>\n<p>Each tool captures its own view — CPU usage, job execution, queue depth, or storage consumption.\nBut there’s <strong>no unified telemetry plane</strong>.</p>\n<blockquote>\n<p><strong>“In mainframe environments, visibility is not missing — it’s trapped.”</strong></p>\n</blockquote>\n<p>Each system sees part of the elephant; none see the whole.</p>\n<hr>\n<h3 id=\"️-2-integrating-mainframe-telemetry-into-modern-observability\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-2-integrating-mainframe-telemetry-into-modern-observability\" aria-label=\"️ 2 integrating mainframe telemetry into modern observability permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚙️ <strong>2. Integrating Mainframe Telemetry into Modern Observability</strong></h3>\n<p>Riedesel’s core principle for modernization is pragmatic:</p>\n<blockquote>\n<p><strong>“You can’t rewrite the mainframe — but you can teach it to talk.”</strong></p>\n</blockquote>\n<p>The challenge isn’t replacement — it’s <strong>integration</strong>.</p>\n<hr>\n<h4 id=\"a-the-layered-bridge-architecture\" style=\"position:relative;\"><a href=\"#a-the-layered-bridge-architecture\" aria-label=\"a the layered bridge architecture permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) The Layered Bridge Architecture</strong></h4>\n<p>She introduces a <strong>three-layer model</strong> for bringing legacy telemetry into modern systems:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[Mainframe / Legacy Apps]\n     ↓\n[Extraction Layer]\n     ↓\n[Normalization Layer]\n     ↓\n[Modern Observability Stack]</code></pre></div>\n<p>Let’s break these down.</p>\n<hr>\n<h5 id=\"1️⃣-extraction-layer--getting-data-out-without-breaking-things\" style=\"position:relative;\"><a href=\"#1%EF%B8%8F%E2%83%A3-extraction-layer--getting-data-out-without-breaking-things\" aria-label=\"1️⃣ extraction layer  getting data out without breaking things permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>1️⃣ Extraction Layer — Getting Data Out Without Breaking Things</strong></h5>\n<p>The first step is to <strong>capture telemetry safely</strong> without modifying fragile legacy code.</p>\n<p>Techniques include:</p>\n<ul>\n<li><strong>Job log scraping:</strong> Automate extraction of JES2/JES3 logs after batch job completion.</li>\n<li><strong>System SMF (System Management Facility) feeds:</strong> Collect CPU, I/O, and performance metrics directly from z/OS.</li>\n<li><strong>Network flow mirroring:</strong> Capture IPFIX/NetFlow data for mainframe network interfaces.</li>\n<li><strong>Middleware event intercepts:</strong> Use MQSeries or CICS transaction monitors to emit structured events.</li>\n</ul>\n<blockquote>\n<p><strong>“The goal of extraction is non-invasive visibility — listen without touching.”</strong></p>\n</blockquote>\n<p>In many enterprises, <strong>CICS exit points</strong> are the only safe place to hook in telemetry.\nRiedesel warns:</p>\n<blockquote>\n<p><strong>“Mainframes are like antique aircraft — you can instrument them, but you can’t drill new holes.”</strong></p>\n</blockquote>\n<hr>\n<h5 id=\"2️⃣-normalization-layer--translating-the-old-dialects\" style=\"position:relative;\"><a href=\"#2%EF%B8%8F%E2%83%A3-normalization-layer--translating-the-old-dialects\" aria-label=\"2️⃣ normalization layer  translating the old dialects permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>2️⃣ Normalization Layer — Translating the Old Dialects</strong></h5>\n<p>Once extracted, legacy telemetry must be <strong>converted into modern, machine-readable formats</strong>.\nCommon transformations:</p>\n<ul>\n<li>EBCDIC → UTF-8</li>\n<li>CSV flat files → JSON</li>\n<li>Fixed-width COBOL records → Structured fields with metadata</li>\n<li>Timestamps → ISO 8601 UTC</li>\n</ul>\n<p>This process may involve:</p>\n<ul>\n<li><strong>ETL (Extract-Transform-Load) pipelines</strong> using <strong>Informatica, Apache NiFi, or Logstash</strong></li>\n<li><strong>Custom parsers</strong> for batch job reports</li>\n<li><strong>Schema mapping</strong> between mainframe event codes and modern event types</li>\n</ul>\n<blockquote>\n<p><strong>“Every log line is an artifact of history — normalization is your archaeology.”</strong></p>\n</blockquote>\n<p>Riedesel stresses using a <strong>repeatable, automated ETL process</strong> to ensure consistency, reproducibility, and auditability.</p>\n<hr>\n<h5 id=\"3️⃣-modern-observability-stack--correlation-and-visualization\" style=\"position:relative;\"><a href=\"#3%EF%B8%8F%E2%83%A3-modern-observability-stack--correlation-and-visualization\" aria-label=\"3️⃣ modern observability stack  correlation and visualization permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>3️⃣ Modern Observability Stack — Correlation and Visualization</strong></h5>\n<p>After normalization, telemetry enters the same ecosystem as newer systems:</p>\n<ul>\n<li><strong>Elasticsearch</strong> or <strong>Splunk</strong> for indexing.</li>\n<li><strong>Grafana / Kibana</strong> for visualization.</li>\n<li><strong>Prometheus exporters</strong> for derived metrics.</li>\n<li><strong>OpenTelemetry collector</strong> for unified ingestion.</li>\n</ul>\n<blockquote>\n<p><strong>“When a mainframe event shows up on your Grafana dashboard next to your Kubernetes pod, that’s digital transformation in action.”</strong></p>\n</blockquote>\n<p>This allows unified dashboards that show, for instance:</p>\n<ul>\n<li>A mainframe job failure causing API response delays in a cloud microservice.</li>\n<li>A network congestion event in a router affecting both z/OS and AWS EC2.</li>\n</ul>\n<hr>\n<h4 id=\"b-middleware-as-the-translator\" style=\"position:relative;\"><a href=\"#b-middleware-as-the-translator\" aria-label=\"b middleware as the translator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Middleware as the Translator</strong></h4>\n<p>Riedesel highlights the role of <strong>middleware</strong> — the “linguistic bridge” between old and new.</p>\n<p><strong>IBM MQ (Message Queue)</strong>, <strong>Kafka Connectors</strong>, and <strong>REST wrappers</strong> can expose legacy events to modern consumers.</p>\n<p>Example:</p>\n<ul>\n<li>CICS transactions publish messages to an MQ queue.</li>\n<li>A Kafka connector consumes those messages, enriches with metadata, and streams to Elasticsearch.</li>\n</ul>\n<blockquote>\n<p><strong>“Middleware doesn’t replace the mainframe — it makes it legible.”</strong></p>\n</blockquote>\n<p>In this model, legacy systems <strong>emit events indirectly</strong>, through middleware rather than code changes.\nThis preserves uptime and avoids regulatory risk.</p>\n<hr>\n<h3 id=\"-3-practical-handling-of-hybrid-systems\" style=\"position:relative;\"><a href=\"#-3-practical-handling-of-hybrid-systems\" aria-label=\" 3 practical handling of hybrid systems permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧠 <strong>3. Practical Handling of Hybrid Systems</strong></h3>\n<p>Modern enterprises rarely have a clean division between “legacy” and “cloud.”\nInstead, they operate <strong>hybrid architectures</strong>, where mainframes, VMs, containers, and serverless functions all coexist.</p>\n<p>Riedesel offers several strategies for making telemetry coherent across these environments.</p>\n<hr>\n<h4 id=\"a-time-synchronization-and-correlation\" style=\"position:relative;\"><a href=\"#a-time-synchronization-and-correlation\" aria-label=\"a time synchronization and correlation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) Time Synchronization and Correlation</strong></h4>\n<blockquote>\n<p><strong>“You can’t correlate what doesn’t share time.”</strong></p>\n</blockquote>\n<p>Legacy systems often operate on <strong>local time zones</strong>, sometimes with <strong>non-UTC offsets</strong>, and occasionally drift out of sync.\nTo unify telemetry:</p>\n<ul>\n<li>Enforce <strong>NTP synchronization</strong> across all systems.</li>\n<li>Convert all timestamps to <strong>UTC in ISO 8601</strong>.</li>\n<li>Add metadata fields like <code class=\"language-text\">source_system</code> and <code class=\"language-text\">timezone</code> for context.</li>\n</ul>\n<p>This ensures traceability when incidents span multiple domains (e.g., mainframe batch jobs triggering API delays in the cloud).</p>\n<hr>\n<h4 id=\"b-unifying-identifiers\" style=\"position:relative;\"><a href=\"#b-unifying-identifiers\" aria-label=\"b unifying identifiers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Unifying Identifiers</strong></h4>\n<p>Hybrid observability requires <strong>cross-system correlation</strong>:</p>\n<ul>\n<li>Introduce <strong>transaction or correlation IDs</strong> into MQ messages or REST bridges.</li>\n<li>Link them to downstream events in distributed systems.</li>\n</ul>\n<blockquote>\n<p><strong>“Correlation IDs are the Rosetta Stone of hybrid telemetry.”</strong></p>\n</blockquote>\n<p>When every layer (mainframe → middleware → microservice → database) carries a shared ID, the organization gains <strong>end-to-end visibility</strong> across time, technology, and ownership boundaries.</p>\n<hr>\n<h4 id=\"c-abstracting-legacy-noise\" style=\"position:relative;\"><a href=\"#c-abstracting-legacy-noise\" aria-label=\"c abstracting legacy noise permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(c) Abstracting Legacy Noise</strong></h4>\n<p>Riedesel warns that legacy telemetry can overwhelm modern systems due to verbosity or irrelevant detail.</p>\n<blockquote>\n<p><strong>“Mainframes produce more metrics than insight — filter ruthlessly.”</strong></p>\n</blockquote>\n<p>Best Practices:</p>\n<ul>\n<li>Drop redundant heartbeat or “success” messages.</li>\n<li>Summarize repetitive job logs into aggregated counters.</li>\n<li>Compress large event archives before ingestion.</li>\n<li>Implement sampling for low-severity logs.</li>\n</ul>\n<p>The key is to <strong>preserve signal, not bulk</strong>.</p>\n<hr>\n<h4 id=\"d-maintaining-data-fidelity-for-compliance\" style=\"position:relative;\"><a href=\"#d-maintaining-data-fidelity-for-compliance\" aria-label=\"d maintaining data fidelity for compliance permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(d) Maintaining Data Fidelity for Compliance</strong></h4>\n<p>Because legacy systems often run <strong>regulated workloads</strong> (financial or healthcare), telemetry must be <strong>forensically reliable</strong>.</p>\n<p>Requirements:</p>\n<ul>\n<li>Write-once (immutable) storage for audit trails.</li>\n<li>Tamper-proof checksums for transferred data.</li>\n<li>Chain-of-custody metadata during ETL.</li>\n</ul>\n<blockquote>\n<p><strong>“In legacy telemetry, trust is more valuable than real-time.”</strong></p>\n</blockquote>\n<p>Even if ingestion is delayed, integrity must never be compromised.</p>\n<hr>\n<h3 id=\"️-4-case-example--modernizing-a-financial-institutions-mainframe-telemetry\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-4-case-example--modernizing-a-financial-institutions-mainframe-telemetry\" aria-label=\"️ 4 case example  modernizing a financial institutions mainframe telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🏗️ <strong>4. Case Example — Modernizing a Financial Institution’s Mainframe Telemetry</strong></h3>\n<p>Riedesel provides an anonymized composite example of a <strong>large global bank</strong>.</p>\n<h4 id=\"initial-state\" style=\"position:relative;\"><a href=\"#initial-state\" aria-label=\"initial state permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Initial State:</strong></h4>\n<ul>\n<li>Core banking on IBM z/OS mainframes (COBOL + DB2).</li>\n<li>Job logs stored locally on tape and batch reports emailed weekly.</li>\n<li>Network telemetry from F5 and Cisco monitored separately.</li>\n<li>Cloud microservices (AWS) handling mobile banking APIs.</li>\n</ul>\n<h4 id=\"problems\" style=\"position:relative;\"><a href=\"#problems\" aria-label=\"problems permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Problems:</strong></h4>\n<ul>\n<li>Incident resolution took hours due to siloed data.</li>\n<li>Security audits failed due to incomplete log retention.</li>\n<li>No traceability between API outages and backend job delays.</li>\n</ul>\n<h4 id=\"modernization-steps\" style=\"position:relative;\"><a href=\"#modernization-steps\" aria-label=\"modernization steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Modernization Steps:</strong></h4>\n<ol>\n<li><strong>Deploy SMF and RMF collectors</strong> on z/OS to export performance data.</li>\n<li><strong>Stream MQ message logs</strong> through Kafka into Elasticsearch.</li>\n<li><strong>Enrich events</strong> with system ID, job class, and business unit metadata.</li>\n<li><strong>Visualize</strong> end-to-end transactions in Grafana, combining API and COBOL job telemetry.</li>\n<li><strong>Implement immutable S3 archive</strong> for compliance storage.</li>\n</ol>\n<h4 id=\"results\" style=\"position:relative;\"><a href=\"#results\" aria-label=\"results permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Results:</strong></h4>\n<ul>\n<li>70% reduction in mean time to resolution (MTTR).</li>\n<li>Unified dashboards for both mainframe and cloud.</li>\n<li>Successful audit sign-off on telemetry integrity.</li>\n</ul>\n<blockquote>\n<p><strong>“For the first time, the mainframe wasn’t a black box — it was a participant.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-5-organizational-and-cultural-lessons\" style=\"position:relative;\"><a href=\"#-5-organizational-and-cultural-lessons\" aria-label=\" 5 organizational and cultural lessons permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔐 <strong>5. Organizational and Cultural Lessons</strong></h3>\n<p>Integrating legacy telemetry isn’t only a technical effort — it’s deeply cultural.</p>\n<p>Riedesel describes two archetypes:</p>\n<table>\n<thead>\n<tr>\n<th>Legacy IT Culture</th>\n<th>Modern Observability Culture</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Change-averse (“Don’t touch it if it works”)</td>\n<td>Experiment-driven (“Instrument everything”)</td>\n</tr>\n<tr>\n<td>Manual log reviews</td>\n<td>Automated event correlation</td>\n</tr>\n<tr>\n<td>Uptime obsession</td>\n<td>Insight obsession</td>\n</tr>\n<tr>\n<td>Ownership silos</td>\n<td>Shared telemetry governance</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p><strong>“Modern observability doesn’t replace reliability culture — it expands it.”</strong></p>\n</blockquote>\n<p>She stresses that modernization requires <strong>trust and translation</strong> between mainframe engineers and cloud-native teams.</p>\n<blockquote>\n<p><strong>“Mainframe admins think in decades; SREs think in minutes. Telemetry has to speak to both.”</strong></p>\n</blockquote>\n<p>This often means forming <strong>cross-generational teams</strong>:</p>\n<ul>\n<li>Senior COBOL experts provide data semantics.</li>\n<li>Modern engineers design ingestion and enrichment pipelines.</li>\n</ul>\n<hr>\n<h3 id=\"-6-migration-pitfalls-and-anti-patterns\" style=\"position:relative;\"><a href=\"#-6-migration-pitfalls-and-anti-patterns\" aria-label=\" 6 migration pitfalls and anti patterns permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 <strong>6. Migration Pitfalls and Anti-Patterns</strong></h3>\n<p>Riedesel warns of common traps in legacy telemetry modernization:</p>\n<ol>\n<li>\n<p><strong>“Big Bang” Rewrites</strong></p>\n<ul>\n<li>Attempting to replace mainframe telemetry entirely in one go.</li>\n<li>Leads to system risk and downtime.</li>\n</ul>\n<blockquote>\n<p><strong>“Mainframes don’t respond to revolutions — only to diplomacy.”</strong></p>\n</blockquote>\n</li>\n<li>\n<p><strong>Unbounded Data Feeds</strong></p>\n<ul>\n<li>Ingesting everything without filtering leads to cost blowouts.</li>\n<li>Normalize and compress early.</li>\n</ul>\n</li>\n<li>\n<p><strong>Schema Drift</strong></p>\n<ul>\n<li>Legacy event formats changing without notice.</li>\n<li>Require version-controlled schema registry.</li>\n</ul>\n</li>\n<li>\n<p><strong>Over-Visualization</strong></p>\n<ul>\n<li>Dumping raw legacy data into dashboards without context.</li>\n<li>Always interpret through enrichment and correlation.</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"-7-chapter-summary--observability-across-generations\" style=\"position:relative;\"><a href=\"#-7-chapter-summary--observability-across-generations\" aria-label=\" 7 chapter summary  observability across generations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧠 <strong>7. Chapter Summary — Observability Across Generations</strong></h3>\n<p>Riedesel closes the chapter with a timeless insight:</p>\n<blockquote>\n<p><strong>“Telemetry is the only way generations of systems can coexist.”</strong></p>\n</blockquote>\n<p>Legacy systems will remain for decades. Modern observability doesn’t seek to replace them — it seeks to <strong>connect their wisdom</strong> to today’s speed.</p>\n<p><strong>Core Lessons:</strong></p>\n<table>\n<thead>\n<tr>\n<th>Theme</th>\n<th>Takeaway</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Integrate, don’t rewrite.</strong></td>\n<td>Teach mainframes to emit events, not rebuild them.</td>\n</tr>\n<tr>\n<td><strong>Normalize and correlate.</strong></td>\n<td>Convert old formats to modern schemas with shared IDs.</td>\n</tr>\n<tr>\n<td><strong>Secure and immutable.</strong></td>\n<td>Treat telemetry as evidence — tamper-proof and auditable.</td>\n</tr>\n<tr>\n<td><strong>Bridge cultures.</strong></td>\n<td>Unite COBOL-era stability with DevOps agility.</td>\n</tr>\n<tr>\n<td><strong>Respect the legacy.</strong></td>\n<td>Every mainframe log is history — handle it with precision.</td>\n</tr>\n</tbody>\n</table>\n<p>Final quote:</p>\n<blockquote>\n<p><strong>“Mainframes were built to last. Telemetry makes them part of the future.”</strong></p>\n</blockquote>\n<hr>\n<p>✅ <strong>Summary Checklist: Legacy/Mainframe Telemetry Modernization</strong></p>\n<table>\n<thead>\n<tr>\n<th>Layer</th>\n<th>Practice</th>\n<th>Tools</th>\n<th>Key Insight</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Extraction</strong></td>\n<td>Non-invasive log scraping, SMF feeds, MQ hooks</td>\n<td>SMF, JES, CICS exits</td>\n<td><em>“Listen without touching.”</em></td>\n</tr>\n<tr>\n<td><strong>Normalization</strong></td>\n<td>Convert EBCDIC → UTF-8, add metadata</td>\n<td>NiFi, Logstash, ETL scripts</td>\n<td><em>“Normalization is archaeology.”</em></td>\n</tr>\n<tr>\n<td><strong>Integration</strong></td>\n<td>Stream via Kafka or REST into ELK/Prometheus</td>\n<td>Kafka Connect, Fluentd</td>\n<td><em>“Middleware makes legacy legible.”</em></td>\n</tr>\n<tr>\n<td><strong>Correlation</strong></td>\n<td>Link events across systems via IDs &#x26; timestamps</td>\n<td>OpenTelemetry Collector</td>\n<td><em>“Correlation is the Rosetta Stone.”</em></td>\n</tr>\n<tr>\n<td><strong>Governance</strong></td>\n<td>Immutable storage, schema registry, audit controls</td>\n<td>S3 Glacier, Elasticsearch</td>\n<td><em>“Telemetry is evidence.”</em></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h1 id=\"️-techniques-for-handling-telemetry\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-techniques-for-handling-telemetry\" aria-label=\"️ techniques for handling telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚙️ <strong>Techniques for Handling Telemetry</strong></h1>\n<h2 id=\"-purpose-of-part-3\" style=\"position:relative;\"><a href=\"#-purpose-of-part-3\" aria-label=\" purpose of part 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 <strong>Purpose of Part 3</strong></h2>\n<p>Part 3 of <em>Software Telemetry</em> is about <strong>engineering mastery</strong> — the set of <strong>practical techniques, design rules, and architectural guardrails</strong> that make telemetry sustainable and cost-effective over years of operation.</p>\n<p>Riedesel introduces this section with an observation every senior engineer knows but rarely articulates:</p>\n<blockquote>\n<p><strong>“Telemetry doesn’t fail because of missing data — it fails because of messy data.”</strong></p>\n</blockquote>\n<p><strong>Part 3</strong> addresses precisely that mess: redundant logs, inconsistent schemas, runaway cardinality, toxic data leaks, and unscalable ingestion pipelines.\nIt teaches how to <strong>clean, constrain, and structure</strong> the river of telemetry that modern systems emit.</p>\n<hr>\n<h2 id=\"-standardized-logging-and-event-formats\" style=\"position:relative;\"><a href=\"#-standardized-logging-and-event-formats\" aria-label=\" standardized logging and event formats permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧱 <strong>Standardized Logging and Event Formats</strong></h2>\n<h3 id=\"-purpose-1\" style=\"position:relative;\"><a href=\"#-purpose-1\" aria-label=\" purpose 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 <strong>Purpose</strong></h3>\n<p>Riedesel opens this chapter by stating plainly:</p>\n<blockquote>\n<p><strong>“Logging is the most universal form of telemetry — and the most abused.”</strong></p>\n</blockquote>\n<p>Every system logs something, but without standardization, those logs are <strong>useless at scale</strong>.\nThis chapter provides the principles, examples, and organizational strategies for <strong>structured logging</strong> — the foundation upon which <strong>metrics, traces, and analytics</strong> depend.</p>\n<p>She draws a line between “<strong>log output</strong>” and “<strong>telemetry events</strong>”:</p>\n<blockquote>\n<p><strong>“A log line is text; an event is data. The sooner your organization understands that, the sooner your telemetry will grow up.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-1-why-standardized-logging-matters\" style=\"position:relative;\"><a href=\"#-1-why-standardized-logging-matters\" aria-label=\" 1 why standardized logging matters permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 <strong>1. Why Standardized Logging Matters</strong></h3>\n<p>Riedesel highlights the <strong>fundamental pain</strong> in modern observability:\nengineers drowning in text-based logs, trying to extract patterns through brittle regular expressions and guesswork.</p>\n<p>She writes:</p>\n<blockquote>\n<p><strong>“Every engineer has wasted hours writing regex to extract meaning from chaos — that’s not observability, that’s archaeology.”</strong></p>\n</blockquote>\n<p>Without standardization:</p>\n<ul>\n<li>Search queries differ per service.</li>\n<li>Correlation breaks between systems.</li>\n<li>Log parsers fail when developers change message phrasing.</li>\n<li>Security tools miss sensitive data because of format drift.</li>\n</ul>\n<p>In large systems, these inconsistencies create <strong>millions of dollars of hidden operational waste</strong>.</p>\n<hr>\n<h3 id=\"️-2-structured-logging--the-foundation\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-2-structured-logging--the-foundation\" aria-label=\"️ 2 structured logging  the foundation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚙️ <strong>2. Structured Logging — The Foundation</strong></h3>\n<p>Structured logging is the practice of emitting logs as <strong>structured objects</strong>, not human-readable strings.\nRiedesel explains it like this:</p>\n<blockquote>\n<p><strong>“Logs should be written for machines first and formatted for humans second.”</strong></p>\n</blockquote>\n<h4 id=\"a-unstructured-bad-example\" style=\"position:relative;\"><a href=\"#a-unstructured-bad-example\" aria-label=\"a unstructured bad example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) Unstructured (Bad) Example</strong></h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[ERROR] 2025-10-10 14:32:01 User 3982 failed to log in from IP 10.0.3.7</code></pre></div>\n<h4 id=\"b-structured-good-example\" style=\"position:relative;\"><a href=\"#b-structured-good-example\" aria-label=\"b structured good example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Structured (Good) Example</strong></h4>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"timestamp\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2025-10-10T14:32:01Z\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"level\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"event\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"login_failed\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"user_id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3982</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"ip_address\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"10.0.3.7\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"service\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"auth-service\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"env\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"production\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Benefits:</strong></p>\n<ul>\n<li>Machine-parsable → instantly usable by ELK, Splunk, or Loki.</li>\n<li>Self-describing → no regex required.</li>\n<li>Schema-consistent → resilient across deployments.</li>\n</ul>\n<blockquote>\n<p><strong>“When your telemetry is structured, every log line becomes a query.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-3-common-structured-formats-json-yaml-and-key-value\" style=\"position:relative;\"><a href=\"#-3-common-structured-formats-json-yaml-and-key-value\" aria-label=\" 3 common structured formats json yaml and key value permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧠 <strong>3. Common Structured Formats: JSON, YAML, and Key-Value</strong></h3>\n<h4 id=\"a-json-javascript-object-notation\" style=\"position:relative;\"><a href=\"#a-json-javascript-object-notation\" aria-label=\"a json javascript object notation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) JSON (JavaScript Object Notation)</strong></h4>\n<ul>\n<li><strong>Most widely adopted</strong> due to its simplicity and tooling support.</li>\n<li>Excellent for ingestion into Elasticsearch, Fluentd, or OpenTelemetry Collectors.</li>\n<li>Easy to parse, serialize, and enrich.</li>\n<li>Human-readable enough for developers.</li>\n</ul>\n<p>Riedesel calls JSON <strong>“the lingua franca of modern telemetry.”</strong></p>\n<h4 id=\"b-yaml-yet-another-markup-language\" style=\"position:relative;\"><a href=\"#b-yaml-yet-another-markup-language\" aria-label=\"b yaml yet another markup language permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) YAML (Yet Another Markup Language)</strong></h4>\n<ul>\n<li>Used in configuration-heavy environments (Kubernetes, CI/CD pipelines).</li>\n<li>Human-friendly but slower to parse for high-volume logs.</li>\n<li>Suitable for <strong>low-frequency, high-context</strong> logs (e.g., configuration audits).</li>\n</ul>\n<blockquote>\n<p><strong>“YAML is for humans reading; JSON is for systems talking.”</strong></p>\n</blockquote>\n<h4 id=\"c-key-value-pair-logs\" style=\"position:relative;\"><a href=\"#c-key-value-pair-logs\" aria-label=\"c key value pair logs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(c) Key-Value Pair Logs</strong></h4>\n<ul>\n<li>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">level=info service=checkout user=3829 duration_ms=324 region=us-east-1</code></pre></div>\n</li>\n<li>\n<p>Lightweight, line-oriented, and efficient for streaming systems like Fluent Bit or journald.</p>\n</li>\n<li>\n<p>Common in systemd and Go-based microservices.</p>\n</li>\n</ul>\n<p>Riedesel notes:</p>\n<blockquote>\n<p><strong>“Key-value logs are a good compromise between speed and structure.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-4-schema-consistency--the-secret-to-scale\" style=\"position:relative;\"><a href=\"#-4-schema-consistency--the-secret-to-scale\" aria-label=\" 4 schema consistency  the secret to scale permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔧 <strong>4. Schema Consistency — The Secret to Scale</strong></h3>\n<p>Structured logs alone aren’t enough. Without a <strong>consistent schema</strong>, the ecosystem still breaks down.</p>\n<blockquote>\n<p><strong>“Structure without schema is just fancy chaos.”</strong></p>\n</blockquote>\n<h4 id=\"a-the-need-for-field-standards\" style=\"position:relative;\"><a href=\"#a-the-need-for-field-standards\" aria-label=\"a the need for field standards permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) The Need for Field Standards</strong></h4>\n<p>A schema defines:</p>\n<ul>\n<li><strong>Field names</strong> (<code class=\"language-text\">user_id</code>, not <code class=\"language-text\">userID</code> or <code class=\"language-text\">userid</code>)</li>\n<li><strong>Field types</strong> (<code class=\"language-text\">integer</code>, not <code class=\"language-text\">string</code>)</li>\n<li><strong>Allowed values</strong> (e.g., <code class=\"language-text\">level</code>: info, warn, error, fatal)</li>\n<li><strong>Optional vs. required fields</strong></li>\n</ul>\n<p>When every service uses the same field semantics, cross-service dashboards and correlation queries become effortless.</p>\n<p>Riedesel compares schema consistency to grammar:</p>\n<blockquote>\n<p><strong>“If structure is the alphabet of telemetry, schema is its grammar — it’s how systems learn to communicate clearly.”</strong></p>\n</blockquote>\n<h4 id=\"b-standardization-frameworks\" style=\"position:relative;\"><a href=\"#b-standardization-frameworks\" aria-label=\"b standardization frameworks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Standardization Frameworks</strong></h4>\n<p>She recommends adopting existing schemas to avoid reinventing the wheel:</p>\n<ul>\n<li><strong>Elastic Common Schema (ECS)</strong> — widely supported by ELK-based stacks.</li>\n<li><strong>OpenTelemetry Semantic Conventions</strong> — designed for cross-platform observability.</li>\n<li><strong>Google Cloud Logging conventions</strong> — good reference for naming and severity levels.</li>\n</ul>\n<p>Adoption of these schemas ensures interoperability across vendors, products, and programming languages.</p>\n<hr>\n<h3 id=\"-5-building-standardized-loggers\" style=\"position:relative;\"><a href=\"#-5-building-standardized-loggers\" aria-label=\" 5 building standardized loggers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 <strong>5. Building Standardized Loggers</strong></h3>\n<p>Riedesel emphasizes <strong>“logging libraries as the enforcers of discipline.”</strong></p>\n<blockquote>\n<p><strong>“Your schema isn’t real until your code enforces it.”</strong></p>\n</blockquote>\n<h4 id=\"a-centralized-logging-library\" style=\"position:relative;\"><a href=\"#a-centralized-logging-library\" aria-label=\"a centralized logging library permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) Centralized Logging Library</strong></h4>\n<p>Instead of letting every team invent its own logger, organizations should create a <strong>shared internal logging library</strong> that:</p>\n<ul>\n<li>Enforces structured format (e.g., JSON only).</li>\n<li>Automatically injects standard metadata (service name, environment, version, trace_id).</li>\n<li>Validates field types before emission.</li>\n<li>Handles serialization and transport to stdout or queue.</li>\n</ul>\n<p><strong>Example in Python (pseudo-code):</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">logger<span class=\"token punctuation\">.</span>emit<span class=\"token punctuation\">(</span>\n    level<span class=\"token operator\">=</span><span class=\"token string\">\"info\"</span><span class=\"token punctuation\">,</span>\n    event<span class=\"token operator\">=</span><span class=\"token string\">\"order_created\"</span><span class=\"token punctuation\">,</span>\n    order_id<span class=\"token operator\">=</span><span class=\"token number\">1298</span><span class=\"token punctuation\">,</span>\n    user_id<span class=\"token operator\">=</span><span class=\"token number\">457</span><span class=\"token punctuation\">,</span>\n    region<span class=\"token operator\">=</span><span class=\"token string\">\"us-west-1\"</span><span class=\"token punctuation\">,</span>\n    trace_id<span class=\"token operator\">=</span>context<span class=\"token punctuation\">.</span>trace_id<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>This enforces a uniform telemetry language across the company.</p>\n<h4 id=\"b-mandatory-context-injection\" style=\"position:relative;\"><a href=\"#b-mandatory-context-injection\" aria-label=\"b mandatory context injection permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Mandatory Context Injection</strong></h4>\n<p>Each log line should include <strong>contextual identifiers</strong>:</p>\n<ul>\n<li><code class=\"language-text\">trace_id</code>, <code class=\"language-text\">span_id</code> — for distributed tracing correlation.</li>\n<li><code class=\"language-text\">service</code>, <code class=\"language-text\">env</code>, <code class=\"language-text\">region</code> — for deployment context.</li>\n<li><code class=\"language-text\">version</code>, <code class=\"language-text\">commit_sha</code> — for change tracking.</li>\n<li><code class=\"language-text\">user_id</code> or <code class=\"language-text\">tenant_id</code> — for multi-tenant observability (if compliant).</li>\n</ul>\n<blockquote>\n<p><strong>“Context in logs is what joins chaos into stories.”</strong></p>\n</blockquote>\n<h4 id=\"c-language-specific-libraries\" style=\"position:relative;\"><a href=\"#c-language-specific-libraries\" aria-label=\"c language specific libraries permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(c) Language-Specific Libraries</strong></h4>\n<ul>\n<li><strong>Go:</strong> <code class=\"language-text\">zap</code>, <code class=\"language-text\">zerolog</code>, <code class=\"language-text\">logrus</code> with JSON encoder.</li>\n<li><strong>Java:</strong> <code class=\"language-text\">logback</code> or <code class=\"language-text\">log4j2</code> with JSON layout.</li>\n<li><strong>Python:</strong> <code class=\"language-text\">structlog</code>, <code class=\"language-text\">loguru</code>, or <code class=\"language-text\">logging</code> with <code class=\"language-text\">json.dumps()</code>.</li>\n<li><strong>Node.js:</strong> <code class=\"language-text\">pino</code> or <code class=\"language-text\">winston</code>.</li>\n</ul>\n<p>The goal is not the tool — it’s <strong>enforcing standard semantics</strong> across all languages.</p>\n<hr>\n<h3 id=\"-6-versioning-and-evolution-of-event-formats\" style=\"position:relative;\"><a href=\"#-6-versioning-and-evolution-of-event-formats\" aria-label=\" 6 versioning and evolution of event formats permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧰 <strong>6. Versioning and Evolution of Event Formats</strong></h3>\n<p>Once standardized, event schemas must evolve carefully.\nRiedesel warns:</p>\n<blockquote>\n<p><strong>“Your telemetry schema is an API — treat it like one.”</strong></p>\n</blockquote>\n<h4 id=\"a-schema-versioning\" style=\"position:relative;\"><a href=\"#a-schema-versioning\" aria-label=\"a schema versioning permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) Schema Versioning</strong></h4>\n<ul>\n<li>Include a field such as <code class=\"language-text\">\"schema_version\": \"1.2\"</code>.</li>\n<li>Maintain backward compatibility in ingestion pipelines.</li>\n<li>Use feature flags to roll out new fields gradually.</li>\n</ul>\n<p>This prevents ingestion or parsing failures when newer services emit different formats.</p>\n<h4 id=\"b-schema-registry\" style=\"position:relative;\"><a href=\"#b-schema-registry\" aria-label=\"b schema registry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Schema Registry</strong></h4>\n<ul>\n<li>Store and validate schemas in a centralized <strong>registry</strong> (e.g., Confluent Schema Registry or custom JSON Schema validator).</li>\n<li>Enable automated tests during CI/CD that validate new telemetry fields.</li>\n</ul>\n<blockquote>\n<p><strong>“If schema drift is undetected, your telemetry’s past becomes unreadable.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-7-handling-free-form-messages-and-exceptions\" style=\"position:relative;\"><a href=\"#-7-handling-free-form-messages-and-exceptions\" aria-label=\" 7 handling free form messages and exceptions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧠 <strong>7. Handling Free-Form Messages and Exceptions</strong></h3>\n<p>Structured logging doesn’t eliminate human-readable messages — it complements them.</p>\n<blockquote>\n<p><strong>“Developers still need to read logs, but machines should never depend on reading like humans do.”</strong></p>\n</blockquote>\n<p>Best Practice:</p>\n<ul>\n<li>Keep a free-form <code class=\"language-text\">message</code> or <code class=\"language-text\">detail</code> field for contextual text.</li>\n<li>Store stack traces or exceptions in a <code class=\"language-text\">stack_trace</code> field as a multiline string.</li>\n<li>Avoid mixing structured data inside message text.</li>\n</ul>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"level\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"event\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"db_connection_failed\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"service\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"billing\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"message\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Unable to connect to PostgreSQL after 3 retries\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"stack_trace\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"psycopg2.OperationalError: timeout expired\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p><strong>“Humans debug; machines correlate. Don’t confuse their diets.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-8-security-and-privacy-in-standardized-logging\" style=\"position:relative;\"><a href=\"#-8-security-and-privacy-in-standardized-logging\" aria-label=\" 8 security and privacy in standardized logging permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔐 <strong>8. Security and Privacy in Standardized Logging</strong></h3>\n<p>Once logging is standardized, it becomes powerful — but also <strong>dangerous</strong>.\nStructured logs are easy to search, but that also means <strong>sensitive data becomes easy to expose.</strong></p>\n<p>Riedesel’s rule:</p>\n<blockquote>\n<p><strong>“Standardized logging without sanitization is just standardized leakage.”</strong></p>\n</blockquote>\n<p><strong>Best Practices:</strong></p>\n<ol>\n<li><strong>Never log secrets</strong> — API keys, passwords, tokens.</li>\n<li><strong>Mask sensitive fields</strong> before emission (<code class=\"language-text\">credit_card_last4</code> instead of full number).</li>\n<li><strong>Redact PII</strong> (names, emails, IPs) where unnecessary.</li>\n<li><strong>Encrypt transport</strong> between emitters and collectors.</li>\n<li><strong>Tag sensitive logs</strong> (<code class=\"language-text\">\"data_classification\": \"confidential\"</code>) for access control.</li>\n</ol>\n<p>These protections ensure compliance with <strong>GDPR</strong>, <strong>PCI-DSS</strong>, and internal privacy standards.</p>\n<hr>\n<h3 id=\"️-9-organizational-enforcement-and-culture\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-9-organizational-enforcement-and-culture\" aria-label=\"️ 9 organizational enforcement and culture permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚖️ <strong>9. Organizational Enforcement and Culture</strong></h3>\n<p>Riedesel concludes that technical fixes alone aren’t enough — <strong>standardization requires governance</strong>.</p>\n<blockquote>\n<p><strong>“You can’t lint culture — but you can guide it.”</strong></p>\n</blockquote>\n<p>Steps to institutionalize standardization:</p>\n<ul>\n<li>Define a <strong>Telemetry Schema Council</strong> to maintain formats.</li>\n<li>Build <strong>linting tools</strong> that scan repositories for unstructured log usage.</li>\n<li>Include <strong>telemetry compliance checks</strong> in CI/CD pipelines.</li>\n<li>Offer <strong>dashboards as incentives</strong> — standardized logs get better visualizations and faster alerting.</li>\n</ul>\n<blockquote>\n<p><strong>“When telemetry quality becomes visible, engineers will start to care about it.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-10-chapter-summary--from-logging-to-language\" style=\"position:relative;\"><a href=\"#-10-chapter-summary--from-logging-to-language\" aria-label=\" 10 chapter summary  from logging to language permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 <strong>10. Chapter Summary — From Logging to Language</strong></h3>\n<p>Riedesel ends the chapter with one of her most memorable metaphors:</p>\n<blockquote>\n<p><strong>“Standardized logging is how your systems learn to speak the same language — and telemetry is how they tell you the truth.”</strong></p>\n</blockquote>\n<p>She emphasizes that this chapter is the <strong>linchpin between emission and observability</strong>: without structured, schema-consistent logs, every other telemetry layer (metrics, traces, analytics, alerts) collapses into confusion.</p>\n<p><strong>Core Takeaways:</strong></p>\n<table>\n<thead>\n<tr>\n<th>Theme</th>\n<th>Key Insight</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Structure everything.</strong></td>\n<td>Unstructured text is human comfort, machine pain.</td>\n</tr>\n<tr>\n<td><strong>Define a schema early.</strong></td>\n<td>Naming consistency outlasts all tools.</td>\n</tr>\n<tr>\n<td><strong>Treat schema as a contract.</strong></td>\n<td>Version it, validate it, enforce it.</td>\n</tr>\n<tr>\n<td><strong>Enrich every log with context.</strong></td>\n<td>Correlation depends on trace IDs and metadata.</td>\n</tr>\n<tr>\n<td><strong>Govern through automation.</strong></td>\n<td>Quality enforcement should be continuous.</td>\n</tr>\n</tbody>\n</table>\n<p>Final quote:</p>\n<blockquote>\n<p><strong>“When every log line is a first-class event, telemetry stops being noise and starts being knowledge.”</strong></p>\n</blockquote>\n<hr>\n<p>✅ <strong>Summary Checklist: Standardized Logging &#x26; Event Format Best Practices</strong></p>\n<table>\n<thead>\n<tr>\n<th>Category</th>\n<th>Best Practice</th>\n<th>Key Principle</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Format</strong></td>\n<td>Use JSON or key-value logs for structure</td>\n<td><em>“Logs should be data, not prose.”</em></td>\n</tr>\n<tr>\n<td><strong>Schema</strong></td>\n<td>Adopt ECS or OpenTelemetry semantic conventions</td>\n<td><em>“Schema is grammar — it gives meaning to structure.”</em></td>\n</tr>\n<tr>\n<td><strong>Library</strong></td>\n<td>Centralize logger libraries with metadata injection</td>\n<td><em>“Your schema isn’t real until your code enforces it.”</em></td>\n</tr>\n<tr>\n<td><strong>Security</strong></td>\n<td>Sanitize, classify, and encrypt logs</td>\n<td><em>“Standardization without redaction is standardized risk.”</em></td>\n</tr>\n<tr>\n<td><strong>Governance</strong></td>\n<td>Version schemas and validate in CI/CD</td>\n<td><em>“Telemetry evolves safely when schema drift is visible.”</em></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"-managing-cardinality-in-telemetry\" style=\"position:relative;\"><a href=\"#-managing-cardinality-in-telemetry\" aria-label=\" managing cardinality in telemetry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔢 <strong>Managing Cardinality in Telemetry</strong></h2>\n<h3 id=\"-purpose-and-context-2\" style=\"position:relative;\"><a href=\"#-purpose-and-context-2\" aria-label=\" purpose and context 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 <strong>Purpose and Context</strong></h3>\n<p>Riedesel opens the chapter with a stark warning:</p>\n<blockquote>\n<p><strong>“Cardinality is the hidden tax of telemetry — you pay it in memory, compute, and money.”</strong></p>\n</blockquote>\n<p>In other words, even when your logs and metrics appear well-structured, a <strong>high number of unique label combinations</strong> can <strong>explode storage</strong>, <strong>slow queries</strong>, and <strong>cripple dashboards</strong>.</p>\n<p>This chapter teaches how to understand, diagnose, and control that explosion. It’s not just about saving cost — it’s about preserving <strong>the stability and responsiveness of your observability system itself</strong>.</p>\n<blockquote>\n<p><strong>“If you’ve ever opened a Grafana dashboard that froze for 20 seconds, you’ve probably met cardinality — you just didn’t know its name.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-1-understanding-cardinality\" style=\"position:relative;\"><a href=\"#-1-understanding-cardinality\" aria-label=\" 1 understanding cardinality permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 <strong>1. Understanding Cardinality</strong></h3>\n<p>Riedesel defines <strong>cardinality</strong> as:</p>\n<blockquote>\n<p><strong>“The count of unique combinations of label keys and values in your telemetry.”</strong></p>\n</blockquote>\n<p>In time-series systems (Prometheus, InfluxDB, Datadog, etc.), each unique set of labels — even if it’s the same metric name — creates a <strong>new time series</strong>.</p>\n<p><strong>Example:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"promql\"><pre class=\"language-promql\"><code class=\"language-promql\">http_requests_total<span class=\"token context-labels\"><span class=\"token punctuation\">{</span><span class=\"token label-key attr-name\">region</span><span class=\"token punctuation\">=</span><span class=\"token label-value attr-value\">\"us-west\"</span><span class=\"token punctuation\">,</span> <span class=\"token label-key attr-name\">service</span><span class=\"token punctuation\">=</span><span class=\"token label-value attr-value\">\"auth\"</span><span class=\"token punctuation\">}</span></span>\nhttp_requests_total<span class=\"token context-labels\"><span class=\"token punctuation\">{</span><span class=\"token label-key attr-name\">region</span><span class=\"token punctuation\">=</span><span class=\"token label-value attr-value\">\"us-east\"</span><span class=\"token punctuation\">,</span> <span class=\"token label-key attr-name\">service</span><span class=\"token punctuation\">=</span><span class=\"token label-value attr-value\">\"auth\"</span><span class=\"token punctuation\">}</span></span>\nhttp_requests_total<span class=\"token context-labels\"><span class=\"token punctuation\">{</span><span class=\"token label-key attr-name\">region</span><span class=\"token punctuation\">=</span><span class=\"token label-value attr-value\">\"us-west\"</span><span class=\"token punctuation\">,</span> <span class=\"token label-key attr-name\">service</span><span class=\"token punctuation\">=</span><span class=\"token label-value attr-value\">\"checkout\"</span><span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>Even though all share the same metric name (<code class=\"language-text\">http_requests_total</code>), there are <strong>three unique series</strong> due to the combinations of <code class=\"language-text\">region</code> and <code class=\"language-text\">service</code>.</p>\n<p>Add a new label like <code class=\"language-text\">user_id</code>, and your system could generate <strong>millions of unique series</strong>.</p>\n<p>Riedesel notes:</p>\n<blockquote>\n<p><strong>“Cardinality doesn’t scale linearly — it multiplies explosively.”</strong></p>\n</blockquote>\n<hr>\n<h4 id=\"a-why-cardinality-matters\" style=\"position:relative;\"><a href=\"#a-why-cardinality-matters\" aria-label=\"a why cardinality matters permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) Why Cardinality Matters</strong></h4>\n<p>High cardinality impacts telemetry systems in multiple ways:</p>\n<ul>\n<li><strong>Memory pressure</strong> — Each series consumes storage and in-memory index entries.</li>\n<li><strong>CPU load</strong> — Every query must scan and aggregate over more series.</li>\n<li><strong>Query latency</strong> — Dashboards slow down, alerts delay.</li>\n<li><strong>Retention cost</strong> — Data volume grows exponentially.</li>\n</ul>\n<p>And worst of all:</p>\n<blockquote>\n<p><strong>“Cardinality failures are invisible until they’re catastrophic.”</strong></p>\n</blockquote>\n<p>You rarely see them coming — the system works fine until a small change (like a new metric label) suddenly doubles your dataset.</p>\n<hr>\n<h4 id=\"b-the-root-causes-of-cardinality-explosion\" style=\"position:relative;\"><a href=\"#b-the-root-causes-of-cardinality-explosion\" aria-label=\"b the root causes of cardinality explosion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) The Root Causes of Cardinality Explosion</strong></h4>\n<p>Riedesel identifies several <strong>common anti-patterns</strong>:</p>\n<ol>\n<li>\n<p><strong>User identifiers as labels</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">http_requests_total{user_id=\"A123\"}</code></pre></div>\n<p>→ Creates one series per user.</p>\n</li>\n<li>\n<p><strong>Session or request IDs</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">latency_seconds{request_id=\"8f92a3...\"}</code></pre></div>\n<p>→ Infinite cardinality as every request is unique.</p>\n</li>\n<li>\n<p><strong>Dynamic resource names</strong></p>\n<ul>\n<li>Containers (<code class=\"language-text\">pod_name</code>), VMs (<code class=\"language-text\">instance_id</code>), network flows (<code class=\"language-text\">src_ip</code>)</li>\n<li>Each new instance creates new label combinations.</li>\n</ul>\n</li>\n<li>\n<p><strong>Unbounded tags in logs</strong></p>\n<ul>\n<li>Logging arbitrary strings in structured fields like <code class=\"language-text\">\"error_message\"</code>.</li>\n</ul>\n</li>\n<li>\n<p><strong>Accidental label combinations</strong></p>\n<ul>\n<li>Joining two labels that weren’t meant to multiply.</li>\n<li>e.g., <code class=\"language-text\">{region, instance, user_role}</code> across 10×1,000×50 = <strong>500,000 series</strong>.</li>\n</ul>\n</li>\n</ol>\n<blockquote>\n<p><strong>“Every label combination is a new time series. Every new series is a cost. Every cost compounds.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"️-2-detecting-and-measuring-cardinality\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-2-detecting-and-measuring-cardinality\" aria-label=\"️ 2 detecting and measuring cardinality permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚙️ <strong>2. Detecting and Measuring Cardinality</strong></h3>\n<p>Before you can manage it, you must <strong>measure it</strong>.\nRiedesel provides practical strategies for detecting cardinality problems before they overwhelm the system.</p>\n<h4 id=\"a-system-metrics\" style=\"position:relative;\"><a href=\"#a-system-metrics\" aria-label=\"a system metrics permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) System Metrics</strong></h4>\n<p>Prometheus and other TSDBs expose their own telemetry about series count, e.g.:</p>\n<div class=\"gatsby-highlight\" data-language=\"promql\"><pre class=\"language-promql\"><code class=\"language-promql\">prometheus_tsdb_head_series\nprometheus_tsdb_series_created_total</code></pre></div>\n<blockquote>\n<p><strong>“The telemetry system should monitor itself — if it’s observant, it can prevent its own blindness.”</strong></p>\n</blockquote>\n<h4 id=\"b-cardinality-audits\" style=\"position:relative;\"><a href=\"#b-cardinality-audits\" aria-label=\"b cardinality audits permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Cardinality Audits</strong></h4>\n<p>Run regular <strong>cardinality audits</strong>:</p>\n<ul>\n<li>Query unique label combinations per metric (<code class=\"language-text\">count by (labelname)</code>).</li>\n<li>Identify metrics with the highest label explosion.</li>\n<li>Track growth trends weekly.</li>\n</ul>\n<p><strong>Example:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"promql\"><pre class=\"language-promql\"><code class=\"language-promql\"><span class=\"token keyword\">count</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">count</span><span class=\"token punctuation\">(</span>http_requests_total<span class=\"token punctuation\">)</span> <span class=\"token keyword\">by</span> <span class=\"token vector-match\"><span class=\"token punctuation\">(</span><span class=\"token label-key attr-name\">user_id</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Riedesel suggests automating these audits with <strong>Grafana dashboards</strong> or <strong>nightly scripts</strong>, tagging metrics with a <code class=\"language-text\">cardinality_risk</code> label.</p>\n<hr>\n<h3 id=\"-3-strategies-to-limit-high-cardinality\" style=\"position:relative;\"><a href=\"#-3-strategies-to-limit-high-cardinality\" aria-label=\" 3 strategies to limit high cardinality permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧠 <strong>3. Strategies to Limit High Cardinality</strong></h3>\n<p>Riedesel structures mitigation into <strong>three layers</strong> — <em>Prevent</em>, <em>Reduce</em>, and <em>Control</em>.</p>\n<hr>\n<h4 id=\"a-prevent--design-for-low-cardinality-up-front\" style=\"position:relative;\"><a href=\"#a-prevent--design-for-low-cardinality-up-front\" aria-label=\"a prevent  design for low cardinality up front permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) Prevent — Design for Low Cardinality Up Front</strong></h4>\n<blockquote>\n<p><strong>“Cardinality prevention begins at instrumentation.”</strong></p>\n</blockquote>\n<ol>\n<li>\n<p><strong>Eliminate unique identifiers</strong> — Never use user IDs, session IDs, or request hashes as labels.</p>\n<ul>\n<li>Instead, record them as <strong>event fields</strong> in logs (non-aggregated telemetry).</li>\n</ul>\n</li>\n<li>\n<p><strong>Use categorical values</strong> — Limit labels to a small set of expected options.</p>\n<ul>\n<li>e.g., <code class=\"language-text\">region ∈ {us-east, us-west, eu-central}</code></li>\n</ul>\n</li>\n<li>\n<p><strong>Predefine label sets</strong> — Document allowed label keys and values in your schema.</p>\n</li>\n<li>\n<p><strong>Apply sampling</strong> — Record only a percentage of events (e.g., 1 in 1000 requests) for metrics.</p>\n</li>\n<li>\n<p><strong>Normalize resource identifiers</strong> — Use stable IDs (<code class=\"language-text\">instance_type</code>, <code class=\"language-text\">service_group</code>) instead of ephemeral (<code class=\"language-text\">instance_id</code>).</p>\n</li>\n</ol>\n<blockquote>\n<p><strong>“If you design metrics like you design APIs — intentionally and with limits — your telemetry will stay sane.”</strong></p>\n</blockquote>\n<hr>\n<h4 id=\"b-reduce--aggregate-early-and-often\" style=\"position:relative;\"><a href=\"#b-reduce--aggregate-early-and-often\" aria-label=\"b reduce  aggregate early and often permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Reduce — Aggregate Early and Often</strong></h4>\n<p>If cardinality already exists, <strong>reduce it through aggregation and rollup.</strong></p>\n<ol>\n<li>\n<p><strong>Aggregation by dimension</strong></p>\n<ul>\n<li>Aggregate fine-grained metrics into coarser views.</li>\n<li>e.g., from <code class=\"language-text\">per-instance</code> → <code class=\"language-text\">per-service</code> or <code class=\"language-text\">per-region</code>.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"promql\"><pre class=\"language-promql\"><code class=\"language-promql\"><span class=\"token keyword\">sum</span><span class=\"token punctuation\">(</span><span class=\"token function\">rate</span><span class=\"token punctuation\">(</span>http_requests_total<span class=\"token context-range\"><span class=\"token punctuation\">[</span><span class=\"token range-duration number\">5m</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">by</span> <span class=\"token vector-match\"><span class=\"token punctuation\">(</span><span class=\"token label-key attr-name\">service</span><span class=\"token punctuation\">,</span> <span class=\"token label-key attr-name\">region</span><span class=\"token punctuation\">)</span></span></code></pre></div>\n</li>\n<li>\n<p><strong>Downsampling</strong></p>\n<ul>\n<li>Store high-resolution data (e.g., 10s) short-term (7 days).</li>\n<li>Retain low-resolution aggregates (e.g., 5m or hourly) for long-term analysis.</li>\n</ul>\n</li>\n<li>\n<p><strong>Rollup Jobs</strong></p>\n<ul>\n<li>Periodic ETL tasks that compute aggregates and delete raw data.</li>\n<li>Common in <strong>Thanos</strong>, <strong>Cortex</strong>, and <strong>VictoriaMetrics</strong> clusters.</li>\n</ul>\n</li>\n</ol>\n<blockquote>\n<p><strong>“Aggregation is the art of deciding which precision is worth paying for.”</strong></p>\n</blockquote>\n<ol start=\"4\">\n<li>\n<p><strong>Retention Tiers</strong></p>\n<ul>\n<li>\n<p>Keep detailed metrics short-term, summarized metrics long-term.</p>\n</li>\n<li>\n<p>Example:</p>\n<ul>\n<li>7 days → per-instance metrics</li>\n<li>30 days → per-service aggregates</li>\n<li>90 days → per-region summaries</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h4 id=\"c-control--manage-what-you-cant-reduce\" style=\"position:relative;\"><a href=\"#c-control--manage-what-you-cant-reduce\" aria-label=\"c control  manage what you cant reduce permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(c) Control — Manage What You Can’t Reduce</strong></h4>\n<p>Even after reduction, some cardinality is unavoidable.\nRiedesel explains how to <strong>control</strong> it through configuration and policy.</p>\n<ol>\n<li>\n<p><strong>Enforce Limits in Telemetry Tools</strong></p>\n<ul>\n<li>Prometheus: <code class=\"language-text\">--storage.tsdb.retention.size</code>, <code class=\"language-text\">--storage.tsdb.max-block-chunk-segments</code></li>\n<li>Datadog: Cardinality quotas per host/service.</li>\n<li>New Relic: Series and label count caps.</li>\n</ul>\n</li>\n</ol>\n<blockquote>\n<p><strong>“If you don’t set limits, your vendors will — and you’ll discover them the hard way.”</strong></p>\n</blockquote>\n<ol start=\"2\">\n<li>\n<p><strong>Sampling and Tracing Filters</strong></p>\n<ul>\n<li>Use <strong>tail-based sampling</strong> in OpenTelemetry for traces — keep only slow or error traces.</li>\n<li>Discard repetitive low-value events.</li>\n</ul>\n</li>\n<li>\n<p><strong>Dynamic Label Whitelists</strong></p>\n<ul>\n<li>Allow only approved labels at ingestion (e.g., drop unknown tags).</li>\n<li>Fluentd / Vector filters can enforce these policies.</li>\n</ul>\n</li>\n<li>\n<p><strong>Cost Monitoring</strong></p>\n<ul>\n<li>Treat cardinality as a <strong>cost driver</strong> in your observability budget.</li>\n<li>Regularly review ingestion volume, retention size, and query duration.</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"-4-organizational-practices-for-cardinality-control\" style=\"position:relative;\"><a href=\"#-4-organizational-practices-for-cardinality-control\" aria-label=\" 4 organizational practices for cardinality control permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 <strong>4. Organizational Practices for Cardinality Control</strong></h3>\n<p>Riedesel argues that <strong>technical fixes won’t last</strong> without cultural change.</p>\n<blockquote>\n<p><strong>“Every engineer adds a label with good intentions — and ten others pay the bill.”</strong></p>\n</blockquote>\n<p>She proposes embedding cardinality management into daily engineering practice:</p>\n<h4 id=\"a-education-and-review\" style=\"position:relative;\"><a href=\"#a-education-and-review\" aria-label=\"a education and review permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(a) Education and Review</strong></h4>\n<ul>\n<li>Train developers on <strong>metric design patterns</strong>.</li>\n<li>Include cardinality impact assessment in <strong>code reviews</strong>.</li>\n</ul>\n<blockquote>\n<p><strong>“Code review isn’t complete until you’ve reviewed what it emits.”</strong></p>\n</blockquote>\n<h4 id=\"b-budgeting-and-accountability\" style=\"position:relative;\"><a href=\"#b-budgeting-and-accountability\" aria-label=\"b budgeting and accountability permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(b) Budgeting and Accountability</strong></h4>\n<ul>\n<li>Assign <strong>“cardinality budgets”</strong> to teams — define max allowed series count per service.</li>\n<li>Monitor cardinality growth with CI checks.</li>\n<li>Enforce quotas automatically.</li>\n</ul>\n<blockquote>\n<p><strong>“Budgets turn observability from chaos into discipline.”</strong></p>\n</blockquote>\n<h4 id=\"c-governance-and-schema-ownership\" style=\"position:relative;\"><a href=\"#c-governance-and-schema-ownership\" aria-label=\"c governance and schema ownership permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>(c) Governance and Schema Ownership</strong></h4>\n<ul>\n<li>\n<p>A <strong>Telemetry Council</strong> should define acceptable label patterns.</p>\n</li>\n<li>\n<p>Maintain a <strong>metric registry</strong> documenting:</p>\n<ul>\n<li>Metric name</li>\n<li>Purpose</li>\n<li>Owner</li>\n<li>Expected labels</li>\n<li>Cardinality estimate</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p><strong>“If you can’t name the owner of a metric, it doesn’t belong in production.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-5-real-world-examples-and-failure-stories\" style=\"position:relative;\"><a href=\"#-5-real-world-examples-and-failure-stories\" aria-label=\" 5 real world examples and failure stories permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧠 <strong>5. Real-World Examples and Failure Stories</strong></h3>\n<p>Riedesel illustrates the cost of ignoring cardinality with several anonymized incidents.</p>\n<h4 id=\"example-1--the-exploding-dashboard\" style=\"position:relative;\"><a href=\"#example-1--the-exploding-dashboard\" aria-label=\"example 1  the exploding dashboard permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Example 1 — The Exploding Dashboard</strong></h4>\n<p>A SaaS company added <code class=\"language-text\">customer_id</code> as a Prometheus label to track per-client latency.\nWithin 24 hours, the system had <strong>500,000 active time series</strong>, memory usage spiked, and Prometheus crashed.</p>\n<p><strong>Fix:</strong> Move <code class=\"language-text\">customer_id</code> into log events and aggregate latency at query time by region, not by individual ID.</p>\n<blockquote>\n<p><strong>“When your observability stack goes down before your production system, you’ve inverted your priorities.”</strong></p>\n</blockquote>\n<hr>\n<h4 id=\"example-2--tag-storm-in-cloud-monitoring\" style=\"position:relative;\"><a href=\"#example-2--tag-storm-in-cloud-monitoring\" aria-label=\"example 2  tag storm in cloud monitoring permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Example 2 — Tag Storm in Cloud Monitoring</strong></h4>\n<p>A cloud team configured every container label (<code class=\"language-text\">pod_name</code>, <code class=\"language-text\">namespace</code>, <code class=\"language-text\">image_hash</code>, <code class=\"language-text\">deployment_uid</code>) to propagate to Datadog metrics.\nEach new deployment generated thousands of new tag combinations — billing tripled in one month.</p>\n<p><strong>Fix:</strong> Introduced a tag whitelist and enforced cardinality budgets per namespace.</p>\n<blockquote>\n<p><strong>“Unbounded tags are observability’s version of unbounded spending.”</strong></p>\n</blockquote>\n<hr>\n<h4 id=\"example-3--success-through-early-design\" style=\"position:relative;\"><a href=\"#example-3--success-through-early-design\" aria-label=\"example 3  success through early design permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Example 3 — Success Through Early Design</strong></h4>\n<p>A fintech startup adopted <strong>metric design reviews</strong> — no new metric could be added to production without schema and cardinality approval.\nResult: consistent query performance, predictable costs, and dashboards that loaded in milliseconds.</p>\n<blockquote>\n<p><strong>“Telemetry discipline is cheaper than telemetry debt.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"️-6-balancing-precision-and-practicality\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-6-balancing-precision-and-practicality\" aria-label=\"️ 6 balancing precision and practicality permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚖️ <strong>6. Balancing Precision and Practicality</strong></h3>\n<p>Riedesel concludes that managing cardinality is not about <strong>reducing visibility</strong>, but about <strong>prioritizing it</strong>.</p>\n<blockquote>\n<p><strong>“The goal isn’t less telemetry — it’s smarter telemetry.”</strong></p>\n</blockquote>\n<p>Guiding principle:</p>\n<ul>\n<li><strong>Keep logs detailed, metrics concise, and traces selective.</strong></li>\n<li>Design for <strong>clarity per byte</strong>, not “collect everything.”</li>\n</ul>\n<blockquote>\n<p><strong>“If every signal is high fidelity, your observability will drown in its own accuracy.”</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"-7-chapter-summary--containing-the-infinite\" style=\"position:relative;\"><a href=\"#-7-chapter-summary--containing-the-infinite\" aria-label=\" 7 chapter summary  containing the infinite permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧩 <strong>7. Chapter Summary — Containing the Infinite</strong></h3>\n<p>Riedesel closes with one of her most quoted insights:</p>\n<blockquote>\n<p><strong>“Cardinality is entropy. You can’t eliminate it, but you can slow its decay.”</strong></p>\n</blockquote>\n<p>By mastering cardinality control, organizations make telemetry <strong>sustainable, predictable, and actionable</strong> — transforming it from a resource sink into a strategic asset.</p>\n<hr>\n<p>✅ <strong>Summary Checklist: Managing Cardinality in Telemetry</strong></p>\n<table>\n<thead>\n<tr>\n<th>Layer</th>\n<th>Strategy</th>\n<th>Technique</th>\n<th>Key Insight</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Prevent</strong></td>\n<td>Design low-cardinality metrics</td>\n<td>Avoid user/session IDs; limit label sets</td>\n<td><em>“Prevention begins at instrumentation.”</em></td>\n</tr>\n<tr>\n<td><strong>Reduce</strong></td>\n<td>Aggregate early and downsample</td>\n<td>Summarize by service, region, or tier</td>\n<td><em>“Aggregation decides what precision you can afford.”</em></td>\n</tr>\n<tr>\n<td><strong>Control</strong></td>\n<td>Enforce quotas and sampling</td>\n<td>Whitelist labels, monitor budgets</td>\n<td><em>“If you don’t limit it, it will limit you.”</em></td>\n</tr>\n<tr>\n<td><strong>Govern</strong></td>\n<td>Embed discipline in reviews</td>\n<td>Metric registries, schema ownership</td>\n<td><em>“Telemetry debt is real debt.”</em></td>\n</tr>\n<tr>\n<td><strong>Observe</strong></td>\n<td>Audit and monitor telemetry health</td>\n<td>Count unique series regularly</td>\n<td><em>“Your telemetry system must observe itself.”</em></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"-final-takeaway\" style=\"position:relative;\"><a href=\"#-final-takeaway\" aria-label=\" final takeaway permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💡 <strong>Final Takeaway</strong></h3>\n<blockquote>\n<p><strong>“Cardinality doesn’t just kill observability — it kills curiosity. When dashboards slow down, teams stop asking questions.”</strong></p>\n</blockquote>\n<p>Riedesel’s message is clear: managing cardinality is not optional — it’s what separates <strong>sustainable observability</strong> from <strong>expensive chaos</strong>.</p>\n<hr>\n<ul>\n<li>expand in much more details with bold high-light quotes/phrases the above sections “### <strong>Chapter 16 — Redacting and Reprocessing Telemetry</strong></li>\n</ul>\n<ul>\n<li>Handling <strong>toxic data</strong> (PII, GDPR).</li>\n<li>Real-time and batch redaction pipelines.</li>\n<li>Re-ingestion for platform migrations.”</li>\n</ul>\n<h1 id=\"quotes\" style=\"position:relative;\"><a href=\"#quotes\" aria-label=\"quotes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Quotes</h1>\n<h1 id=\"references\" style=\"position:relative;\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References</h1>","frontmatter":{"title":"Software Telemetry by Jamie Riedesel summary","date":"October 10, 2025","description":"Software Telemetry by Jamie Riedesel summary"}},"previous":{"fields":{"slug":"/alberta-communities-research/"},"frontmatter":{"title":"alberta communities research"}},"next":null},"pageContext":{"id":"9e25c639-a265-5d66-a174-1bd30b5708a4","previousPostId":"4905164d-d2e5-5564-8ca5-354c50df695f","nextPostId":null}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}