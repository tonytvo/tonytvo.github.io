{"version":3,"sources":["webpack://gatsby-starter-bootstrap/./src/pages/index.tsx","webpack://gatsby-starter-bootstrap/./src/components/adsense/adsense.tsx","webpack://gatsby-starter-bootstrap/./src/components/button/button.tsx","webpack://gatsby-starter-bootstrap/./src/components/badge/badge.tsx","webpack://gatsby-starter-bootstrap/./src/templates/post/post.tsx"],"names":["data","location","posts","remark","meta","site","map","post","i","options","isIndex","key","clientId","slotId","format","useEffect","window","adsbygoogle","push","className","style","display","data-ad-client","data-ad-slot","data-ad-format","path","label","primary","Link","to","content","body","frontmatter","image","adsense","html","isMore","match","boxShadow","title","dateTime","date","category","tags","tag","index","description","childImageSharp","fluid","margin","dangerouslySetInnerHTML","__html","replace","split"],"mappings":"4LAiCA,UApBmC,SAAC,GAA8B,MAA5BA,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SACpCC,EAAQF,EAAKG,OAAOD,MACpBE,EAAI,UAAGJ,EAAKK,YAAR,aAAG,EAAWD,KAExB,OACE,gBAAC,IAAD,CAAQH,SAAUA,GAChB,gBAAC,IAAD,CAAMI,KAAMD,IACXF,EAAMI,KAAI,SAACC,EAAMC,GAAP,OACT,gBAAC,IAAD,CACER,KAAMO,EACNE,QAAS,CACPC,SAAS,GAEXC,IAAKH,U,oGCYf,EAtBiC,SAAC,GAAwC,IAAtCI,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,OAOpD,OANAC,gBAAU,WACJH,IACFI,OAAOC,aAAeD,OAAOC,aAAe,IAAIC,KAAK,OAEtD,CAACN,IAEGA,EACL,uBAAKO,UAAU,MACb,uBACEA,UAAU,cACVC,MAAO,CAAEC,QAAS,SAClBC,iBAAgBV,EAChBW,eAAcV,EACdW,iBAAgBV,KAIpB,kCCXJ,EAdgC,SAAC,GAAoC,IAAlCW,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,QAC9C,OACE,gBAAC,EAAAC,KAAD,CAAMT,UAAU,WAAWU,GAAIJ,GAC7B,wBACEN,UAAS,sCACPQ,EAAU,sBAAwB,0BAGnCD,KCFT,EARgC,SAAC,GAA8B,IAA5BA,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,QACxC,OACE,wBAAMR,UAAS,UAAWQ,EAAU,gBAAkB,oBACnDD,IC+DP,EA3C8B,SAAC,GAA6B,UApBpCI,EAChBC,EAmByB/B,EAA2B,EAA3BA,KAAMS,EAAqB,EAArBA,QAC/BuB,EAAW,UAAGhC,EAAKO,YAAR,aAAG,EAAWyB,YACzBP,GAAOO,aAAA,EAAAA,EAAaP,OAAQ,GAC5BQ,GAAQD,aAAA,EAAAA,EAAaC,QAAS,KAC5BvB,EAAqBD,EAArBC,QAASwB,EAAYzB,EAAZyB,QACXC,GAAO,UAAAnC,EAAKO,YAAL,eAAW4B,OAAQ,GAC1BC,EAAS1B,KAAayB,EAAKE,MAAM,qBAEvC,OACE,uBAAKlB,UAAU,UAAUR,IAAKc,GAC5B,uBAAKN,UAAU,aACb,uBAAKA,UAAU,QACb,gBAAC,EAAAS,KAAD,CAAMR,MAAO,CAAEkB,UAAW,QAAUT,GAAIJ,GACtC,0BAAKO,aAAL,EAAKA,EAAaO,OAClB,wBAAMC,SAAUR,aAAF,EAAEA,EAAaS,MAAOT,aAApC,EAAoCA,EAAaS,OAEnD,gBAAC,EAAD,CAAOf,OAAOM,aAAA,EAAAA,EAAaU,WAAY,GAAIf,SAAS,MAClDK,aAAA,EAAAA,EAAaW,OAAQ,IAAIrC,KAAI,SAACsC,EAAKC,GAAN,OAC7B,gBAAC,EAAD,CAAOnB,MAAOkB,EAAejB,SAAS,EAAOhB,IAAKkC,QAGtD,uBAAK1B,UAAU,WACb,yBAAIa,aAAJ,EAAIA,EAAac,cAChBb,SAAA,UAAAA,EAAOc,uBAAP,eAAwBC,QACvB,gBAAC,IAAD,CACEA,MAAOf,EAAMc,gBAAgBC,MAC7B5B,MAAO,CAAEC,QAAS,QAAS4B,OAAQ,aAIzC,uBACE9B,UAAU,UACV+B,wBAAyB,CACvBC,OAAQf,GArDIN,EAqDoBK,EApDpCJ,EAAOD,EAAQsB,QACnB,gBACA,mCAEErB,EAAKM,MAAM,qBACSN,EAAKsB,MAAM,qBAAjC,GAGKtB,GA4C2CI,KAG3CC,GAAU,gBAAC,EAAD,CAAQX,KAAMA,EAAMC,MAAM,OAAOC,SAAS,KACnDjB,GAAW,gBAAC,EAAD,CAASE,SAAUsB,EAASrB,OAAO,GAAGC,OAAO","file":"component---src-pages-index-tsx-afb9af4e2e8afccb1b18.js","sourcesContent":["import { graphql } from 'gatsby'\nimport React from 'react'\n\nimport { IndexQueryQuery, PostByPathQuery } from '../../types/graphql-types'\nimport Post from '../templates/post/post'\nimport Meta from '../components/meta/meta'\nimport Layout from '../components/layout/layout'\n\ninterface Props {\n  data: IndexQueryQuery\n  location: Location\n}\n\nconst BlogIndex: React.FC<Props> = ({ data, location }: Props) => {\n  const posts = data.remark.posts\n  const meta = data.site?.meta\n\n  return (\n    <Layout location={location}>\n      <Meta site={meta} />\n      {posts.map((post, i) => (\n        <Post\n          data={post as PostByPathQuery}\n          options={{\n            isIndex: true,\n          }}\n          key={i}\n        />\n      ))}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      meta: siteMetadata {\n        title\n        description\n        siteUrl\n        author\n        twitter\n        adsense\n      }\n    }\n    remark: allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      posts: edges {\n        post: node {\n          html\n          frontmatter {\n            layout\n            title\n            path\n            category\n            tags\n            description\n            date(formatString: \"YYYY/MM/DD\")\n            image {\n              childImageSharp {\n                fluid(maxWidth: 500) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React, { useEffect } from 'react'\nimport './style.scss'\n\ninterface Props {\n  clientId?: string | null\n  slotId: string\n  format: string\n}\n\ndeclare global {\n  interface Window {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    adsbygoogle: any\n  }\n}\n\nconst Adsense: React.FC<Props> = ({ clientId, slotId, format }: Props) => {\n  useEffect(() => {\n    if (clientId) {\n      window.adsbygoogle = (window.adsbygoogle || []).push({})\n    }\n  }, [clientId])\n\n  return clientId ? (\n    <div className=\"ad\">\n      <ins\n        className=\"adsbygoogle\"\n        style={{ display: 'block' }}\n        data-ad-client={clientId}\n        data-ad-slot={slotId}\n        data-ad-format={format}\n      />\n    </div>\n  ) : (\n    <></>\n  )\n}\n\nexport default Adsense\n","import React from 'react'\nimport { Link } from 'gatsby'\n\ninterface Props {\n  path: string\n  label: string\n  primary: boolean\n}\n\nconst Button: React.FC<Props> = ({ path, label, primary }: Props) => {\n  return (\n    <Link className=\"readmore\" to={path}>\n      <span\n        className={`btn btn-outline-primary btn-block ${\n          primary ? 'btn-outline-primary' : 'btn-outline-secondary'\n        }`}\n      >\n        {label}\n      </span>\n    </Link>\n  )\n}\n\nexport default Button\n","import React from 'react'\n\ninterface Props {\n  label: string\n  primary: boolean\n}\n\nconst Badges: React.FC<Props> = ({ label, primary }: Props) => {\n  return (\n    <span className={`badge ${primary ? 'badge-primary' : 'badge-secondary'}`}>\n      {label}\n    </span>\n  )\n}\n\nexport default Badges\n","import { Link } from 'gatsby'\nimport Img, { FluidObject } from 'gatsby-image'\nimport React from 'react'\n\nimport Adsense from '../../components/adsense/adsense'\nimport Button from '../../components/button/button'\nimport Badge from '../../components/badge/badge'\n\nimport './style.scss'\n\nconst getDescription = (content: string): string => {\n  const body = content.replace(\n    /<blockquote>/g,\n    '<blockquote class=\"blockquote\">'\n  )\n  if (body.match('<!--more-->')) {\n    const [description] = body.split('<!--more-->')\n    return description\n  }\n  return body\n}\n\ninterface Props {\n  data: GatsbyTypes.PostByPathQuery\n  options: {\n    isIndex: boolean\n    adsense?: string | null\n  }\n}\n\nconst Post: React.FC<Props> = ({ data, options }: Props) => {\n  const frontmatter = data.post?.frontmatter\n  const path = frontmatter?.path || ''\n  const image = frontmatter?.image || null\n  const { isIndex, adsense } = options\n  const html = data.post?.html || ''\n  const isMore = isIndex && !!html.match('<!--more-->')\n\n  return (\n    <div className=\"article\" key={path}>\n      <div className=\"container\">\n        <div className=\"info\">\n          <Link style={{ boxShadow: 'none' }} to={path}>\n            <h1>{frontmatter?.title}</h1>\n            <time dateTime={frontmatter?.date}>{frontmatter?.date}</time>\n          </Link>\n          <Badge label={frontmatter?.category || ''} primary={true} />\n          {(frontmatter?.tags || []).map((tag, index) => (\n            <Badge label={tag as string} primary={false} key={index} />\n          ))}\n        </div>\n        <div className=\"content\">\n          <p>{frontmatter?.description}</p>\n          {image?.childImageSharp?.fluid && (\n            <Img\n              fluid={image.childImageSharp.fluid as FluidObject}\n              style={{ display: 'block', margin: '0 auto' }}\n            />\n          )}\n        </div>\n        <div\n          className=\"content\"\n          dangerouslySetInnerHTML={{\n            __html: isMore ? getDescription(html) : html,\n          }}\n        />\n        {isMore && <Button path={path} label=\"MORE\" primary={true} />}\n        {!isIndex && <Adsense clientId={adsense} slotId=\"\" format=\"auto\" />}\n      </div>\n    </div>\n  )\n}\n\nexport default Post\n"],"sourceRoot":""}